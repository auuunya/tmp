{"created_at":"2023-06-22 17:56:47.162454 UTC","module_path":"github.com/pcelvng/task-tools","version":"v0.24.0","sort_version":"0,a24,0~","commit_time":"2023-05-25 18:28:28 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:19:1","message":"ExampleNewInfoOptions refers to unknown identifier: NewInfoOptions","source":"\nfunc ExampleNewInfoOptions() {\n\tiOpt, err := newInfoOptions(\"\")"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:22:39","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)                     // output: \u003cnil\u003e\n\tfmt.Println(iOpt.SrcPath == \"\")      // output: true"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:23:39","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)                     // output: \u003cnil\u003e\n\tfmt.Println(iOpt.SrcPath == \"\")      // output: true\n\tfmt.Println(iOpt.DateField == \"\")    // output: true"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:24:39","message":"there can only be one output comment block per example","source":"\tfmt.Println(iOpt.SrcPath == \"\")      // output: true\n\tfmt.Println(iOpt.DateField == \"\")    // output: true\n\tfmt.Println(iOpt.DateFormat == \"\")   // output: true"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:25:39","message":"there can only be one output comment block per example","source":"\tfmt.Println(iOpt.DateField == \"\")    // output: true\n\tfmt.Println(iOpt.DateFormat == \"\")   // output: true\n\tfmt.Println(iOpt.DestTemplate == \"\") // output: true"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:26:39","message":"there can only be one output comment block per example","source":"\tfmt.Println(iOpt.DateFormat == \"\")   // output: true\n\tfmt.Println(iOpt.DestTemplate == \"\") // output: true\n\tfmt.Println(iOpt.Discard)            // output: false"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:27:39","message":"there can only be one output comment block per example","source":"\tfmt.Println(iOpt.DestTemplate == \"\") // output: true\n\tfmt.Println(iOpt.Discard)            // output: false\n\tfmt.Println(iOpt.UseFileBuffer)      // output: false"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:28:39","message":"there can only be one output comment block per example","source":"\tfmt.Println(iOpt.Discard)            // output: false\n\tfmt.Println(iOpt.UseFileBuffer)      // output: false\n"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:40:1","message":"ExampleNewInfoOptionsJSON refers to unknown identifier: NewInfoOptionsJSON","source":"\nfunc ExampleNewInfoOptionsJSON() {\n\tinfo := `nop://source/file.json?record-type=json\u0026date-field=testDateField\u0026date-format=testFormat\u0026dest-template=testTemplate\u0026discard=true\u0026use-file-buffer=true`"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:44:34","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)                // output: \u003cnil\u003e\n\tfmt.Println(iOpt.SrcPath)       // output: nop://source/file.json"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:45:34","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)                // output: \u003cnil\u003e\n\tfmt.Println(iOpt.SrcPath)       // output: nop://source/file.json\n\tfmt.Println(iOpt.DateField)     // output: testDateField"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:46:34","message":"there can only be one output comment block per example","source":"\tfmt.Println(iOpt.SrcPath)       // output: nop://source/file.json\n\tfmt.Println(iOpt.DateField)     // output: testDateField\n\tfmt.Println(iOpt.DateFormat)    // output: testFormat"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:47:34","message":"there can only be one output comment block per example","source":"\tfmt.Println(iOpt.DateField)     // output: testDateField\n\tfmt.Println(iOpt.DateFormat)    // output: testFormat\n\tfmt.Println(iOpt.DestTemplate)  // output: testTemplate"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:48:34","message":"there can only be one output comment block per example","source":"\tfmt.Println(iOpt.DateFormat)    // output: testFormat\n\tfmt.Println(iOpt.DestTemplate)  // output: testTemplate\n\tfmt.Println(iOpt.Discard)       // output: true"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:49:34","message":"there can only be one output comment block per example","source":"\tfmt.Println(iOpt.DestTemplate)  // output: testTemplate\n\tfmt.Println(iOpt.Discard)       // output: true\n\tfmt.Println(iOpt.UseFileBuffer) // output: true"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:50:34","message":"there can only be one output comment block per example","source":"\tfmt.Println(iOpt.Discard)       // output: true\n\tfmt.Println(iOpt.UseFileBuffer) // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:62:1","message":"ExampleNewInfoOptionsCSV refers to unknown identifier: NewInfoOptionsCSV","source":"\nfunc ExampleNewInfoOptionsCSV() {\n\tinfo := `nop://source/file.csv?record-type=csv\u0026date-field-index=1\u0026date-format=testFormat\u0026sep=testSep\u0026dest-template=testTemplate\u0026discard=true\u0026use-file-buffer=true`"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:66:34","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)                // output: \u003cnil\u003e\n\tfmt.Println(iOpt.SrcPath)       // output: nop://source/file.csv"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:67:34","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)                // output: \u003cnil\u003e\n\tfmt.Println(iOpt.SrcPath)       // output: nop://source/file.csv\n\tfmt.Println(iOpt.DateField)     // output:"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:68:34","message":"there can only be one output comment block per example","source":"\tfmt.Println(iOpt.SrcPath)       // output: nop://source/file.csv\n\tfmt.Println(iOpt.DateField)     // output:\n\tfmt.Println(iOpt.DateFormat)    // output: testFormat"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:69:34","message":"there can only be one output comment block per example","source":"\tfmt.Println(iOpt.DateField)     // output:\n\tfmt.Println(iOpt.DateFormat)    // output: testFormat\n\tfmt.Println(iOpt.DestTemplate)  // output: testTemplate"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:70:34","message":"there can only be one output comment block per example","source":"\tfmt.Println(iOpt.DateFormat)    // output: testFormat\n\tfmt.Println(iOpt.DestTemplate)  // output: testTemplate\n\tfmt.Println(iOpt.Discard)       // output: true"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:71:34","message":"there can only be one output comment block per example","source":"\tfmt.Println(iOpt.DestTemplate)  // output: testTemplate\n\tfmt.Println(iOpt.Discard)       // output: true\n\tfmt.Println(iOpt.UseFileBuffer) // output: true"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:72:34","message":"there can only be one output comment block per example","source":"\tfmt.Println(iOpt.Discard)       // output: true\n\tfmt.Println(iOpt.UseFileBuffer) // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:84:1","message":"ExampleNewInfoOptionsFieldMatching refers to unknown identifier: NewInfoOptionsFieldMatching","source":"\nfunc ExampleNewInfoOptionsFieldMatching() {\n\tinfo := `nop://source/file.csv`"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:88:28","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)          // output: \u003cnil\u003e\n\tfmt.Println(iOpt.SrcPath) // output: nop://source/file.csv"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:89:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)          // output: \u003cnil\u003e\n\tfmt.Println(iOpt.SrcPath) // output: nop://source/file.csv\n"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:96:1","message":"ExampleNewInfoOptions_ValidateJSON refers to unknown identifier: NewInfoOptions","source":"\nfunc ExampleNewInfoOptions_ValidateJSON() {\n\tinfo := `nop://source/file.json?date-field=datefield\u0026dest-template=template`"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:101:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err) // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:107:1","message":"ExampleNewInfoOptions_ValidateJSONErr refers to unknown identifier: NewInfoOptions","source":"\nfunc ExampleNewInfoOptions_ValidateJSONErr() {\n\tinfo := `nop://source/file.json?record-type=json`"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:112:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err) // output: date-field required\n"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:118:1","message":"ExampleNewInfoOptions_ValidateDestTemplateErr refers to unknown identifier: NewInfoOptions","source":"\nfunc ExampleNewInfoOptions_ValidateDestTemplateErr() {\n\tinfo := `nop://source/file.json?date-field=testDateField`"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:123:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err) // output: dest-template required\n"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:129:1","message":"ExampleNewInfoOptions_ValidateCSV refers to unknown identifier: NewInfoOptions","source":"\nfunc ExampleNewInfoOptions_ValidateCSV() {\n\tinfo := `nop://source/file.json?date-field=dateField\u0026dest-template=testTemplate`"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:134:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err) // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:140:1","message":"ExampleMakeWorkerJSON refers to unknown identifier: MakeWorkerJSON","source":"\nfunc ExampleMakeWorkerJSON() {\n\tctx, cncl := context.WithCancel(context.Background())"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:147:22","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(result) // output: error\n\tfmt.Println(msg)    // output: task interrupted"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:148:22","message":"there can only be one output comment block per example","source":"\tfmt.Println(result) // output: error\n\tfmt.Println(msg)    // output: task interrupted\n"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:155:1","message":"ExampleMakeWorkerValidateErr refers to unknown identifier: MakeWorkerValidateErr","source":"\nfunc ExampleMakeWorkerValidateErr() {\n\tctx, cncl := context.WithCancel(context.Background())"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:162:22","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(result) // output: error\n\tfmt.Println(msg)    // output: date-field required"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:163:22","message":"there can only be one output comment block per example","source":"\tfmt.Println(result) // output: error\n\tfmt.Println(msg)    // output: date-field required\n"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:170:1","message":"ExampleMakeWorkerReaderErr refers to unknown identifier: MakeWorkerReaderErr","source":"\nfunc ExampleMakeWorkerReaderErr() {\n\tctx, cncl := context.WithCancel(context.Background())"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:177:22","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(result) // output: error\n\tfmt.Println(msg)    // output: init_err"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:178:22","message":"there can only be one output comment block per example","source":"\tfmt.Println(result) // output: error\n\tfmt.Println(msg)    // output: init_err\n"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:185:1","message":"ExampleMakeWorkerCSV refers to unknown identifier: MakeWorkerCSV","source":"\nfunc ExampleMakeWorkerCSV() {\n\tctx, cncl := context.WithCancel(context.Background())"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:192:22","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(result) // output: error\n\tfmt.Println(msg)    // output: task interrupted"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:193:22","message":"there can only be one output comment block per example","source":"\tfmt.Println(result) // output: error\n\tfmt.Println(msg)    // output: task interrupted\n"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:200:1","message":"ExampleDoTaskJSON refers to unknown identifier: DoTaskJSON","source":"\nfunc ExampleDoTaskJSON() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:220:22","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(result) // output: complete\n\tfmt.Println(msg)    // output: wrote 4 lines over 3 files"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:221:22","message":"there can only be one output comment block per example","source":"\tfmt.Println(result) // output: complete\n\tfmt.Println(msg)    // output: wrote 4 lines over 3 files\n"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:235:1","message":"ExampleDoTaskJSONBadRecord refers to unknown identifier: DoTaskJSONBadRecord","source":"\nfunc ExampleDoTaskJSONBadRecord() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:256:22","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(result) // output: error\n\tfmt.Println(msg)    // output: issue at line 5: field \"dateField\" not in '{\"badField\":\"2007-02-03T18:05:06Z\"}' (./test/test.json)"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:257:22","message":"there can only be one output comment block per example","source":"\tfmt.Println(result) // output: error\n\tfmt.Println(msg)    // output: issue at line 5: field \"dateField\" not in '{\"badField\":\"2007-02-03T18:05:06Z\"}' (./test/test.json)\n"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:271:1","message":"ExampleDoTaskJSONBadRecordDiscard refers to unknown identifier: DoTaskJSONBadRecordDiscard","source":"\nfunc ExampleDoTaskJSONBadRecordDiscard() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:293:22","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(result) // output: complete\n\tfmt.Println(msg)    // output: output: wrote 4 lines over 3 files (2 discarded)"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:294:22","message":"there can only be one output comment block per example","source":"\tfmt.Println(result) // output: complete\n\tfmt.Println(msg)    // output: output: wrote 4 lines over 3 files (2 discarded)\n"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:308:1","message":"ExampleDoTaskCSV refers to unknown identifier: DoTaskCSV","source":"\nfunc ExampleDoTaskCSV() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:328:22","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(result) // output: complete\n\tfmt.Println(msg)    // output: wrote 4 lines over 3 files"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:329:22","message":"there can only be one output comment block per example","source":"\tfmt.Println(result) // output: complete\n\tfmt.Println(msg)    // output: wrote 4 lines over 3 files\n"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:343:1","message":"ExampleDoTaskWCloseErr refers to unknown identifier: DoTaskWCloseErr","source":"\nfunc ExampleDoTaskWCloseErr() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:357:22","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(result) // output: error\n\tfmt.Println(msg)    // output: close_err"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:358:22","message":"there can only be one output comment block per example","source":"\tfmt.Println(result) // output: error\n\tfmt.Println(msg)    // output: close_err\n"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:370:1","message":"ExampleDoTaskReadLineErr refers to unknown identifier: DoTaskReadLineErr","source":"\nfunc ExampleDoTaskReadLineErr() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:379:22","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(result) // output: error\n\tfmt.Println(msg)    // output: issue at line 1: readline_err (nop://readline_err)"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:380:22","message":"there can only be one output comment block per example","source":"\tfmt.Println(result) // output: error\n\tfmt.Println(msg)    // output: issue at line 1: readline_err (nop://readline_err)\n"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:387:1","message":"ExampleWorker_DoTaskDirSrc refers to unknown field or method: Worker.DoTaskDirSrc","source":"\nfunc ExampleWorker_DoTaskDirSrc() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:423:22","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(result) // output: complete\n\tfmt.Println(msg)    // output: wrote 8 lines over 3 files"},{"package_id":"github.com/pcelvng/task-tools/apps/workers/sort2file [github.com/pcelvng/task-tools/apps/workers/sort2file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/apps/workers/sort2file/worker_test.go:424:22","message":"there can only be one output comment block per example","source":"\tfmt.Println(result) // output: complete\n\tfmt.Println(msg)    // output: wrote 8 lines over 3 files\n"},{"package_id":"github.com/pcelvng/task-tools/db/batch [github.com/pcelvng/task-tools/db/batch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/db/batch/stat_test.go:8:1","message":"ExampleNewFromBytes refers to unknown identifier: NewFromBytes","source":"\nfunc ExampleNewFromBytes() {\n\tsts := NewStatsFromBytes([]byte(`{\"started\":\"teststarted\",\"dur\":\"1s\",\"table\":\"test.table\",\"removed\":10,\"rows\":100,\"inserted\":100,\"cols\":5}`))"},{"package_id":"github.com/pcelvng/task-tools/db/batch [github.com/pcelvng/task-tools/db/batch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/db/batch/stat_test.go:10:32","message":"there can only be one output comment block per example","source":"\tsts := NewStatsFromBytes([]byte(`{\"started\":\"teststarted\",\"dur\":\"1s\",\"table\":\"test.table\",\"removed\":10,\"rows\":100,\"inserted\":100,\"cols\":5}`))\n\tfmt.Println(sts.Started)      // output: teststarted\n\tfmt.Println(sts.Dur.String()) // output: 1s"},{"package_id":"github.com/pcelvng/task-tools/db/batch [github.com/pcelvng/task-tools/db/batch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/db/batch/stat_test.go:11:32","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Started)      // output: teststarted\n\tfmt.Println(sts.Dur.String()) // output: 1s\n\tfmt.Println(sts.Table)        // output: test.table"},{"package_id":"github.com/pcelvng/task-tools/db/batch [github.com/pcelvng/task-tools/db/batch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/db/batch/stat_test.go:12:32","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Dur.String()) // output: 1s\n\tfmt.Println(sts.Table)        // output: test.table\n\tfmt.Println(sts.Removed)      // output: 10"},{"package_id":"github.com/pcelvng/task-tools/db/batch [github.com/pcelvng/task-tools/db/batch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/db/batch/stat_test.go:13:32","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Table)        // output: test.table\n\tfmt.Println(sts.Removed)      // output: 10\n\tfmt.Println(sts.Rows)         // output: 100"},{"package_id":"github.com/pcelvng/task-tools/db/batch [github.com/pcelvng/task-tools/db/batch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/db/batch/stat_test.go:14:32","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Removed)      // output: 10\n\tfmt.Println(sts.Rows)         // output: 100\n\tfmt.Println(sts.Inserted)     // output: 100"},{"package_id":"github.com/pcelvng/task-tools/db/batch [github.com/pcelvng/task-tools/db/batch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/db/batch/stat_test.go:15:32","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Rows)         // output: 100\n\tfmt.Println(sts.Inserted)     // output: 100\n\tfmt.Println(sts.Cols)         // output: 5"},{"package_id":"github.com/pcelvng/task-tools/db/batch [github.com/pcelvng/task-tools/db/batch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/db/batch/stat_test.go:16:32","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Inserted)     // output: 100\n\tfmt.Println(sts.Cols)         // output: 5\n"},{"package_id":"github.com/pcelvng/task-tools/db/batch [github.com/pcelvng/task-tools/db/batch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/db/batch/stat_test.go:28:1","message":"ExampleStat_AddRow refers to unknown field or method: Stat.AddRow","source":"\nfunc ExampleStat_AddRow() {\n\tsts := NewStats()"},{"package_id":"github.com/pcelvng/task-tools/db/batch [github.com/pcelvng/task-tools/db/batch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/db/batch/stat_test.go:35:28","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(sts.Inserted) // output: 3\n"},{"package_id":"github.com/pcelvng/task-tools/db/batch [github.com/pcelvng/task-tools/db/batch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/db/batch/stat_test.go:41:1","message":"ExampleStat_SetStarted refers to unknown field or method: Stat.SetStarted","source":"\nfunc ExampleStat_SetStarted() {\n\tsts := NewStats()"},{"package_id":"github.com/pcelvng/task-tools/db/batch [github.com/pcelvng/task-tools/db/batch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/db/batch/stat_test.go:48:27","message":"there can only be one output comment block per example","source":"\tsts.SetStarted(t)\n\tfmt.Println(sts.Started) // output: 2017-01-02T03:04:05Z\n"},{"package_id":"github.com/pcelvng/task-tools/db/batch [github.com/pcelvng/task-tools/db/batch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/db/batch/stat_test.go:54:1","message":"ExampleStat_ParseStarted refers to unknown field or method: Stat.ParseStarted","source":"\nfunc ExampleStat_ParseStarted() {\n\tsts := NewStats()"},{"package_id":"github.com/pcelvng/task-tools/db/batch [github.com/pcelvng/task-tools/db/batch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/db/batch/stat_test.go:60:38","message":"there can only be one output comment block per example","source":"\tt := sts.ParseStarted()\n\tfmt.Println(t.Format(time.RFC3339)) // output: 2017-01-02T03:04:05Z\n"},{"package_id":"github.com/pcelvng/task-tools/db/batch [github.com/pcelvng/task-tools/db/batch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/db/batch/stat_test.go:66:1","message":"ExampleStat_Clone refers to unknown field or method: Stat.Clone","source":"\nfunc ExampleStat_Clone() {\n\tsts := NewStats()"},{"package_id":"github.com/pcelvng/task-tools/db/batch [github.com/pcelvng/task-tools/db/batch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/db/batch/stat_test.go:92:1","message":"ExampleStat_JSONBytes refers to unknown field or method: Stat.JSONBytes","source":"\nfunc ExampleStat_JSONBytes() {\n\tsts := NewStats()"},{"package_id":"github.com/pcelvng/task-tools/db/batch [github.com/pcelvng/task-tools/db/batch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/db/batch/stat_test.go:104:25","message":"there can only be one output comment block per example","source":"\tb := sts.JSONBytes()\n\tfmt.Println(string(b)) // output: {\"started\":\"teststarted\",\"dur\":\"1s\",\"table\":\"test.table\",\"removed\":10,\"rows\":100,\"inserted\":100,\"cols\":5,\"batch_hour\":\"testbatchhour\"}\n"},{"package_id":"github.com/pcelvng/task-tools/db/batch [github.com/pcelvng/task-tools/db/batch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/db/batch/stat_test.go:110:1","message":"ExampleStat_JSONString refers to unknown field or method: Stat.JSONString","source":"\nfunc ExampleStat_JSONString() {\n\tsts := NewStats()"},{"package_id":"github.com/pcelvng/task-tools/db/batch [github.com/pcelvng/task-tools/db/batch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/db/batch/stat_test.go:122:25","message":"there can only be one output comment block per example","source":"\tb := sts.JSONString()\n\tfmt.Println(string(b)) // output: {\"started\":\"teststarted\",\"dur\":\"1s\",\"table\":\"test.table\",\"removed\":10,\"rows\":100,\"inserted\":100,\"cols\":5,\"batch_hour\":\"testbatchhour\"}\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:16:34","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(wBy.opt != nil)     // output: true\n\tfmt.Println(wBy.destTmpl)       // output: ./test/{HH}.csv"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:17:34","message":"there can only be one output comment block per example","source":"\tfmt.Println(wBy.opt != nil)     // output: true\n\tfmt.Println(wBy.destTmpl)       // output: ./test/{HH}.csv\n\tfmt.Println(wBy.writers != nil) // output: true"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:18:34","message":"there can only be one output comment block per example","source":"\tfmt.Println(wBy.destTmpl)       // output: ./test/{HH}.csv\n\tfmt.Println(wBy.writers != nil) // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:26:1","message":"ExampleNewWriteByHourJSON refers to unknown identifier: NewWriteByHourJSON","source":"\nfunc ExampleNewWriteByHourJSON() {\n\tdestTmpl := \"./test/{HH}.json\""},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:33:34","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(wBy.opt != nil)     // output: true\n\tfmt.Println(wBy.destTmpl)       // output: ./test/{HH}.json"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:34:34","message":"there can only be one output comment block per example","source":"\tfmt.Println(wBy.opt != nil)     // output: true\n\tfmt.Println(wBy.destTmpl)       // output: ./test/{HH}.json\n\tfmt.Println(wBy.writers != nil) // output: true"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:35:34","message":"there can only be one output comment block per example","source":"\tfmt.Println(wBy.destTmpl)       // output: ./test/{HH}.json\n\tfmt.Println(wBy.writers != nil) // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:68:35","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)                 // output: \u003cnil\u003e\n\tfmt.Print(string(b))             // output: 2007-02-03T16:05:06Z,test field"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:69:35","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)                 // output: \u003cnil\u003e\n\tfmt.Print(string(b))             // output: 2007-02-03T16:05:06Z,test field\n\tfmt.Println(wBy.lineCnt.LineCnt) // output: 1"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:70:35","message":"there can only be one output comment block per example","source":"\tfmt.Print(string(b))             // output: 2007-02-03T16:05:06Z,test field\n\tfmt.Println(wBy.lineCnt.LineCnt) // output: 1\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:83:1","message":"ExampleWriteByHour_WriteLineMulti refers to unknown field or method: WriteByHour.WriteLineMulti","source":"\nfunc ExampleWriteByHour_WriteLineMulti() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:131:35","message":"there can only be one output comment block per example","source":"\n\tfmt.Print(string(b1))            // output: 2007-03-04T16:05:06Z,test field\\n2007-03-04T16:05:06Z,test field\\n\n\tfmt.Print(string(b2))            // output: 2007-04-05T17:05:06Z,test field\\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:132:35","message":"there can only be one output comment block per example","source":"\tfmt.Print(string(b1))            // output: 2007-03-04T16:05:06Z,test field\\n2007-03-04T16:05:06Z,test field\\n\n\tfmt.Print(string(b2))            // output: 2007-04-05T17:05:06Z,test field\\n\n\tfmt.Println(wBy.lineCnt.LineCnt) // output: 3"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:133:35","message":"there can only be one output comment block per example","source":"\tfmt.Print(string(b2))            // output: 2007-04-05T17:05:06Z,test field\\n\n\tfmt.Println(wBy.lineCnt.LineCnt) // output: 3\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:148:1","message":"ExampleWriteByHour_WriteLineErrNewWriter refers to unknown field or method: WriteByHour.WriteLineErrNewWriter","source":"\nfunc ExampleWriteByHour_WriteLineErrNewWriter() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:163:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err) // output: init_err\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:172:1","message":"ExampleWriteByHour_WriteLineErrWriteLine refers to unknown field or method: WriteByHour.WriteLineErrWriteLine","source":"\nfunc ExampleWriteByHour_WriteLineErrWriteLine() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:187:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err) // output: writeline_err\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:211:29","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(wBy.LineCnt()) // output: 1\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:244:28","message":"there can only be one output comment block per example","source":"\tfor _, sts := range allSts {\n\t\tfmt.Println(sts.LineCnt) // output: 1\n\t\tfmt.Println(sts.ByteCnt) // output: 32"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:245:28","message":"there can only be one output comment block per example","source":"\t\tfmt.Println(sts.LineCnt) // output: 1\n\t\tfmt.Println(sts.ByteCnt) // output: 32\n\t}"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:247:27","message":"there can only be one output comment block per example","source":"\t}\n\tfmt.Println(len(allSts)) // output: 3\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:285:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err) // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:295:1","message":"ExampleWriteByHour_AbortErr refers to unknown field or method: WriteByHour.AbortErr","source":"\nfunc ExampleWriteByHour_AbortErr() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:317:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err) // output: abort_err\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:326:1","message":"ExampleWriteByHour_CloseErr refers to unknown field or method: WriteByHour.CloseErr","source":"\nfunc ExampleWriteByHour_CloseErr() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:348:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err) // output: close_err\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:364:26","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(t.IsZero()) // output: false\n\tfmt.Println(err)        // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:365:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.IsZero()) // output: false\n\tfmt.Println(err)        // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:375:1","message":"ExampleCSVDateExtractorNegativeIndex refers to unknown identifier: CSVDateExtractorNegativeIndex","source":"\nfunc ExampleCSVDateExtractorNegativeIndex() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:382:26","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(t.IsZero()) // output: false\n\tfmt.Println(err)        // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:383:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.IsZero()) // output: false\n\tfmt.Println(err)        // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:393:1","message":"ExampleCSVDateExtractorIndexOutOfRange refers to unknown identifier: CSVDateExtractorIndexOutOfRange","source":"\nfunc ExampleCSVDateExtractorIndexOutOfRange() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:400:26","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(t.IsZero()) // output: true\n\tfmt.Println(err)        // output: index 2 not in 'test field,2007-02-03T16:05:06Z'"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:401:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.IsZero()) // output: true\n\tfmt.Println(err)        // output: index 2 not in 'test field,2007-02-03T16:05:06Z'\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:411:1","message":"ExampleCSVDateExtractorIndexOutOfRange2 refers to unknown identifier: CSVDateExtractorIndexOutOfRange2","source":"\nfunc ExampleCSVDateExtractorIndexOutOfRange2() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:418:26","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(t.IsZero()) // output: true\n\tfmt.Println(err)        // output: index 3 not in 'test field,2007-02-03T16:05:06Z'"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:419:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.IsZero()) // output: true\n\tfmt.Println(err)        // output: index 3 not in 'test field,2007-02-03T16:05:06Z'\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:429:1","message":"ExampleCSVDateExtractorTabSeparated refers to unknown identifier: CSVDateExtractorTabSeparated","source":"\nfunc ExampleCSVDateExtractorTabSeparated() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:437:26","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(t.IsZero()) // output: false\n\tfmt.Println(err)        // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:438:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.IsZero()) // output: false\n\tfmt.Println(err)        // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:448:1","message":"ExampleCSVDateExtractorTabSeparated2 refers to unknown identifier: CSVDateExtractorTabSeparated2","source":"\nfunc ExampleCSVDateExtractorTabSeparated2() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:454:26","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(t.IsZero()) // output: false\n\tfmt.Println(err)        // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:455:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.IsZero()) // output: false\n\tfmt.Println(err)        // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:465:1","message":"ExampleCSVDateExtractorTabSeparated3 refers to unknown identifier: CSVDateExtractorTabSeparated3","source":"\nfunc ExampleCSVDateExtractorTabSeparated3() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:472:26","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(t.IsZero()) // output: false\n\tfmt.Println(err)        // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:473:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.IsZero()) // output: false\n\tfmt.Println(err)        // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:483:1","message":"ExampleCSVDateExtractorCustomFormat refers to unknown identifier: CSVDateExtractorCustomFormat","source":"\nfunc ExampleCSVDateExtractorCustomFormat() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:491:26","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)        // output: \u003cnil\u003e\n\tfmt.Println(t.IsZero()) // output: false"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:492:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)        // output: \u003cnil\u003e\n\tfmt.Println(t.IsZero()) // output: false\n\tfmt.Println(t.Year())   // output: 2007"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:493:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.IsZero()) // output: false\n\tfmt.Println(t.Year())   // output: 2007\n\tfmt.Println(t.Month())  // output: February"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:494:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.Year())   // output: 2007\n\tfmt.Println(t.Month())  // output: February\n\tfmt.Println(t.Day())    // output: 3"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:495:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.Month())  // output: February\n\tfmt.Println(t.Day())    // output: 3\n\tfmt.Println(t.Hour())   // output: 16"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:496:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.Day())    // output: 3\n\tfmt.Println(t.Hour())   // output: 16\n\tfmt.Println(t.Minute()) // output: 5"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:497:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.Hour())   // output: 16\n\tfmt.Println(t.Minute()) // output: 5\n\tfmt.Println(t.Second()) // output: 6"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:498:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.Minute()) // output: 5\n\tfmt.Println(t.Second()) // output: 6\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:514:1","message":"ExampleCSVDateExtractorEmptyField refers to unknown identifier: CSVDateExtractorEmptyField","source":"\nfunc ExampleCSVDateExtractorEmptyField() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:521:26","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(t.IsZero()) // output: false\n\tfmt.Println(err)        // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:522:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.IsZero()) // output: false\n\tfmt.Println(err)        // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:539:26","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)        // output: \u003cnil\u003e\n\tfmt.Println(t.IsZero()) // output: false"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:540:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)        // output: \u003cnil\u003e\n\tfmt.Println(t.IsZero()) // output: false\n\tfmt.Println(t.Year())   // output: 2007"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:541:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.IsZero()) // output: false\n\tfmt.Println(t.Year())   // output: 2007\n\tfmt.Println(t.Month())  // output: February"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:542:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.Year())   // output: 2007\n\tfmt.Println(t.Month())  // output: February\n\tfmt.Println(t.Day())    // output: 3"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:543:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.Month())  // output: February\n\tfmt.Println(t.Day())    // output: 3\n\tfmt.Println(t.Hour())   // output: 16"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:544:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.Day())    // output: 3\n\tfmt.Println(t.Hour())   // output: 16\n\tfmt.Println(t.Minute()) // output: 5"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:545:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.Hour())   // output: 16\n\tfmt.Println(t.Minute()) // output: 5\n\tfmt.Println(t.Second()) // output: 6"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:546:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.Minute()) // output: 5\n\tfmt.Println(t.Second()) // output: 6\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:562:1","message":"ExampleJSONDateExtractorDateFieldNotFound refers to unknown identifier: JSONDateExtractorDateFieldNotFound","source":"\nfunc ExampleJSONDateExtractorDateFieldNotFound() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:569:26","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)        // output: \u003cnil\u003e\n\tfmt.Println(t.IsZero()) // output: true"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:570:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)        // output: \u003cnil\u003e\n\tfmt.Println(t.IsZero()) // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:580:1","message":"ExampleJSONDateExtractorDateFieldTwice refers to unknown identifier: JSONDateExtractorDateFieldTwice","source":"\nfunc ExampleJSONDateExtractorDateFieldTwice() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:587:26","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)        // output: \u003cnil\u003e\n\tfmt.Println(t.IsZero()) // output: false"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:588:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)        // output: \u003cnil\u003e\n\tfmt.Println(t.IsZero()) // output: false\n\tfmt.Println(t.Year())   // output: 2007"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:589:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.IsZero()) // output: false\n\tfmt.Println(t.Year())   // output: 2007\n\tfmt.Println(t.Month())  // output: February"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:590:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.Year())   // output: 2007\n\tfmt.Println(t.Month())  // output: February\n\tfmt.Println(t.Day())    // output: 3"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:591:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.Month())  // output: February\n\tfmt.Println(t.Day())    // output: 3\n\tfmt.Println(t.Hour())   // output: 16"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:592:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.Day())    // output: 3\n\tfmt.Println(t.Hour())   // output: 16\n\tfmt.Println(t.Minute()) // output: 5"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:593:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.Hour())   // output: 16\n\tfmt.Println(t.Minute()) // output: 5\n\tfmt.Println(t.Second()) // output: 6"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:594:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.Minute()) // output: 5\n\tfmt.Println(t.Second()) // output: 6\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:610:1","message":"ExampleJSONDateExtractorCustomFormat refers to unknown identifier: JSONDateExtractorCustomFormat","source":"\nfunc ExampleJSONDateExtractorCustomFormat() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:618:26","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)        // output: \u003cnil\u003e\n\tfmt.Println(t.IsZero()) // output: false"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:619:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)        // output: \u003cnil\u003e\n\tfmt.Println(t.IsZero()) // output: false\n\tfmt.Println(t.Year())   // output: 2007"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:620:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.IsZero()) // output: false\n\tfmt.Println(t.Year())   // output: 2007\n\tfmt.Println(t.Month())  // output: February"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:621:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.Year())   // output: 2007\n\tfmt.Println(t.Month())  // output: February\n\tfmt.Println(t.Day())    // output: 3"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:622:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.Month())  // output: February\n\tfmt.Println(t.Day())    // output: 3\n\tfmt.Println(t.Hour())   // output: 16"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:623:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.Day())    // output: 3\n\tfmt.Println(t.Hour())   // output: 16\n\tfmt.Println(t.Minute()) // output: 5"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:624:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.Hour())   // output: 16\n\tfmt.Println(t.Minute()) // output: 5\n\tfmt.Println(t.Second()) // output: 6"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:625:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(t.Minute()) // output: 5\n\tfmt.Println(t.Second()) // output: 6\n"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:641:1","message":"ExampleJSONDateExtractorEmptyDateField refers to unknown identifier: JSONDateExtractorEmptyDateField","source":"\nfunc ExampleJSONDateExtractorEmptyDateField() {\n\tos.Setenv(\"TZ\", \"UTC\")"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:648:26","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)        // output: field \"\" not in '{\"date-field\":\"2007-02-03T16:05:06Z\",\"date-field\":\"2007-02-03T16:05:06Z\"}'\n\tfmt.Println(t.IsZero()) // output: true"},{"package_id":"github.com/pcelvng/task-tools/file [github.com/pcelvng/task-tools/file.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/writebyhour_test.go:649:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)        // output: field \"\" not in '{\"date-field\":\"2007-02-03T16:05:06Z\",\"date-field\":\"2007-02-03T16:05:06Z\"}'\n\tfmt.Println(t.IsZero()) // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:16:33","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(opt.FileBufDir)    // output:\n\tfmt.Println(opt.UseFileBuf)    // output: false"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:17:33","message":"there can only be one output comment block per example","source":"\tfmt.Println(opt.FileBufDir)    // output:\n\tfmt.Println(opt.UseFileBuf)    // output: false\n\tfmt.Println(opt.FileBufPrefix) // output:"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:18:33","message":"there can only be one output comment block per example","source":"\tfmt.Println(opt.UseFileBuf)    // output: false\n\tfmt.Println(opt.FileBufPrefix) // output:\n\tfmt.Println(opt.Compress)      // output: false"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:19:33","message":"there can only be one output comment block per example","source":"\tfmt.Println(opt.FileBufPrefix) // output:\n\tfmt.Println(opt.Compress)      // output: false\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:34:37","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)                   // output: \u003cnil\u003e\n\tfmt.Println(bfr.sts.Created != \"\") // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:35:37","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)                   // output: \u003cnil\u003e\n\tfmt.Println(bfr.sts.Created != \"\") // output: true\n\tfmt.Println(bfr.w != nil)          // output true"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:39:37","message":"there can only be one output comment block per example","source":"\tfmt.Println(bfr.wSize != nil)      // output true\n\tfmt.Println(bfr.bBuf != nil)       // output: true\n\tfmt.Println(bfr.fBuf)              // output \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:56:1","message":"ExampleNewBuffer_TmpFile refers to unknown field or method: NewBuffer.TmpFile","source":"\nfunc ExampleNewBuffer_TmpFile() {\n\topt := NewOptions()"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:67:65","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)                                               // output: \u003cnil\u003e\n\tfmt.Println(bfr.sts.Created != \"\")                             // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:68:65","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)                                               // output: \u003cnil\u003e\n\tfmt.Println(bfr.sts.Created != \"\")                             // output: true\n\tfmt.Println(strings.Contains(bfr.sts.Path, \"/tmp/tmpprefix_\")) // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:69:65","message":"there can only be one output comment block per example","source":"\tfmt.Println(bfr.sts.Created != \"\")                             // output: true\n\tfmt.Println(strings.Contains(bfr.sts.Path, \"/tmp/tmpprefix_\")) // output: true\n\tfmt.Println(bfr.w != nil)                                      // output true"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:73:65","message":"there can only be one output comment block per example","source":"\tfmt.Println(bfr.wSize != nil)                                  // output true\n\tfmt.Println(bfr.bBuf)                                          // output: \u003cnil\u003e\n\tfmt.Println(bfr.fBuf != nil)                                   // output true"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:94:1","message":"ExampleNewBuffer_TmpFileErr refers to unknown field or method: NewBuffer.TmpFileErr","source":"\nfunc ExampleNewBuffer_TmpFileErr() {\n\topt := NewOptions()"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:105:66","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(bfr)                                                // output: \u003cnil\u003e\n\tfmt.Println(strings.Contains(err.Error(), \"permission denied\")) // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:106:66","message":"there can only be one output comment block per example","source":"\tfmt.Println(bfr)                                                // output: \u003cnil\u003e\n\tfmt.Println(strings.Contains(err.Error(), \"permission denied\")) // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:114:1","message":"ExampleNewBuffer_Compression refers to unknown field or method: NewBuffer.Compression","source":"\nfunc ExampleNewBuffer_Compression() {\n\topt := NewOptions()"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:123:37","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)                   // output: \u003cnil\u003e\n\tfmt.Println(bfr.sts.Created != \"\") // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:124:37","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)                   // output: \u003cnil\u003e\n\tfmt.Println(bfr.sts.Created != \"\") // output: true\n\tfmt.Println(bfr.w != nil)          // output true"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:128:37","message":"there can only be one output comment block per example","source":"\tfmt.Println(bfr.wSize != nil)      // output true\n\tfmt.Println(bfr.bBuf != nil)       // output: true\n\tfmt.Println(bfr.fBuf)              // output \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:159:23","message":"there can only be one output comment block per example","source":"\n\tfmt.Print(string(b)) // output: test line, test line\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:166:1","message":"ExampleBuffer_ReadCompressed refers to unknown field or method: Buffer.ReadCompressed","source":"\nfunc ExampleBuffer_ReadCompressed() {\n\topt := NewOptions()"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:184:23","message":"there can only be one output comment block per example","source":"\n\tfmt.Print(string(b)) // output: test line, test line\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:191:1","message":"ExampleBuffer_ReadTmpFile refers to unknown field or method: Buffer.ReadTmpFile","source":"\nfunc ExampleBuffer_ReadTmpFile() {\n\topt := NewOptions()"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:211:23","message":"there can only be one output comment block per example","source":"\n\tfmt.Print(string(b)) // output: test line, test line\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:221:1","message":"ExampleBuffer_ReadTmpFileCompressed refers to unknown field or method: Buffer.ReadTmpFileCompressed","source":"\nfunc ExampleBuffer_ReadTmpFileCompressed() {\n\topt := NewOptions()"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:243:23","message":"there can only be one output comment block per example","source":"\n\tfmt.Print(string(b)) // output: test line, test line\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:253:1","message":"ExampleBuffer_ReadAfterCleanup refers to unknown field or method: Buffer.ReadAfterCleanup","source":"\nfunc ExampleBuffer_ReadAfterCleanup() {\n\tbfr, _ := NewBuffer(nil)"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:273:20","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(n)    // output: 0\n\tfmt.Println(err)  // output: EOF"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:274:20","message":"there can only be one output comment block per example","source":"\tfmt.Println(n)    // output: 0\n\tfmt.Println(err)  // output: EOF\n\tfmt.Println(b[0]) // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:275:20","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)  // output: EOF\n\tfmt.Println(b[0]) // output: 0\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:281:20","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(n)    // output: 0\n\tfmt.Println(err)  // output: EOF"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:282:20","message":"there can only be one output comment block per example","source":"\tfmt.Println(n)    // output: 0\n\tfmt.Println(err)  // output: EOF\n\tfmt.Println(b[0]) // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:283:20","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)  // output: EOF\n\tfmt.Println(b[0]) // output: 0\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:308:32","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(n1)               // output: 10\n\tfmt.Println(err1)             // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:309:32","message":"there can only be one output comment block per example","source":"\tfmt.Println(n1)               // output: 10\n\tfmt.Println(err1)             // output: \u003cnil\u003e\n\tfmt.Println(n2)               // output: 10"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:310:32","message":"there can only be one output comment block per example","source":"\tfmt.Println(err1)             // output: \u003cnil\u003e\n\tfmt.Println(n2)               // output: 10\n\tfmt.Println(err2)             // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:311:32","message":"there can only be one output comment block per example","source":"\tfmt.Println(n2)               // output: 10\n\tfmt.Println(err2)             // output: \u003cnil\u003e\n\tfmt.Print(string(b))          // output: test line, test line"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:312:32","message":"there can only be one output comment block per example","source":"\tfmt.Println(err2)             // output: \u003cnil\u003e\n\tfmt.Print(string(b))          // output: test line, test line\n\tfmt.Println(bfr.sts.ByteCnt)  // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:313:32","message":"there can only be one output comment block per example","source":"\tfmt.Print(string(b))          // output: test line, test line\n\tfmt.Println(bfr.sts.ByteCnt)  // output: 20\n\tfmt.Println(bfr.sts.LineCnt)  // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:314:32","message":"there can only be one output comment block per example","source":"\tfmt.Println(bfr.sts.ByteCnt)  // output: 20\n\tfmt.Println(bfr.sts.LineCnt)  // output: 0\n\tfmt.Println(bfr.wSize.Size()) // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:315:32","message":"there can only be one output comment block per example","source":"\tfmt.Println(bfr.sts.LineCnt)  // output: 0\n\tfmt.Println(bfr.wSize.Size()) // output: 20\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:343:32","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err1)             // output: \u003cnil\u003e\n\tfmt.Println(err2)             // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:344:32","message":"there can only be one output comment block per example","source":"\tfmt.Println(err1)             // output: \u003cnil\u003e\n\tfmt.Println(err2)             // output: \u003cnil\u003e\n\tfmt.Print(string(b))          // output: test line, test line"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:345:32","message":"there can only be one output comment block per example","source":"\tfmt.Println(err2)             // output: \u003cnil\u003e\n\tfmt.Print(string(b))          // output: test line, test line\n\tfmt.Println(bfr.sts.ByteCnt)  // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:346:32","message":"there can only be one output comment block per example","source":"\tfmt.Print(string(b))          // output: test line, test line\n\tfmt.Println(bfr.sts.ByteCnt)  // output: 20\n\tfmt.Println(bfr.sts.LineCnt)  // output: 2"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:347:32","message":"there can only be one output comment block per example","source":"\tfmt.Println(bfr.sts.ByteCnt)  // output: 20\n\tfmt.Println(bfr.sts.LineCnt)  // output: 2\n\tfmt.Println(bfr.wSize.Size()) // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:348:32","message":"there can only be one output comment block per example","source":"\tfmt.Println(bfr.sts.LineCnt)  // output: 2\n\tfmt.Println(bfr.wSize.Size()) // output: 20\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:371:27","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(sts.ByteCnt) // output: 20\n\tfmt.Println(sts.LineCnt) // output: 2"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:372:27","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.ByteCnt) // output: 20\n\tfmt.Println(sts.LineCnt) // output: 2\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:390:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err) // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:396:1","message":"ExampleBuffer_AbortCompression refers to unknown field or method: Buffer.AbortCompression","source":"\nfunc ExampleBuffer_AbortCompression() {\n\topt := NewOptions()"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:410:19","message":"there can only be one output comment block per example","source":"\terr := bfr.Abort()\n\tfmt.Println(err) // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:433:20","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)  // output: \u003cnil\u003e\n\tfmt.Println(n)    // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:434:20","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)  // output: \u003cnil\u003e\n\tfmt.Println(n)    // output: 0\n\tfmt.Println(bErr) // output: EOF"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:435:20","message":"there can only be one output comment block per example","source":"\tfmt.Println(n)    // output: 0\n\tfmt.Println(bErr) // output: EOF\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:443:1","message":"ExampleBuffer_CleanupTmpFile refers to unknown field or method: Buffer.CleanupTmpFile","source":"\nfunc ExampleBuffer_CleanupTmpFile() {\n\topt := NewOptions()"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:466:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err) // output: \u003cnil\u003e\n\tfmt.Println(f)   // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:467:19","message":"there can only be one output comment block per example","source":"\tfmt.Println(err) // output: \u003cnil\u003e\n\tfmt.Println(f)   // output: \u003cnil\u003e\n\tfmt.Println(strings.Contains("},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:470:33","message":"there can only be one output comment block per example","source":"\t\toErr.Error(),\n\t\t\"no such file or directory\")) // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:490:38","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(bfr.sts.Checksum == \"\") // output: true\n\tfmt.Println(bfr.sts.Size)           // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:491:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(bfr.sts.Checksum == \"\") // output: true\n\tfmt.Println(bfr.sts.Size)           // output: 0\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:495:38","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)                    // output: \u003cnil\u003e\n\tfmt.Println(bfr.sts.Checksum != \"\") // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:496:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)                    // output: \u003cnil\u003e\n\tfmt.Println(bfr.sts.Checksum != \"\") // output: true\n\tfmt.Println(bfr.sts.Size)           // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:497:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(bfr.sts.Checksum != \"\") // output: true\n\tfmt.Println(bfr.sts.Size)           // output: 20\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:502:38","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)                    // output: \u003cnil\u003e\n\tfmt.Println(bfr.sts.Checksum != \"\") // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:503:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)                    // output: \u003cnil\u003e\n\tfmt.Println(bfr.sts.Checksum != \"\") // output: true\n\tfmt.Println(bfr.sts.Size)           // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:504:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(bfr.sts.Checksum != \"\") // output: true\n\tfmt.Println(bfr.sts.Size)           // output: 20\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:517:1","message":"ExampleBuffer_CloseSizeCompressed refers to unknown field or method: Buffer.CloseSizeCompressed","source":"\nfunc ExampleBuffer_CloseSizeCompressed() {\n\topt := NewOptions()"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:532:31","message":"there can only be one output comment block per example","source":"\t// because of compression.\n\tfmt.Println(bfr.sts.ByteCnt) // output: 20\n\tfmt.Println(bfr.sts.Size)    // output: 48"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:533:31","message":"there can only be one output comment block per example","source":"\tfmt.Println(bfr.sts.ByteCnt) // output: 20\n\tfmt.Println(bfr.sts.Size)    // output: 48\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:540:1","message":"ExampleBuffer_CloseTmpFileSizeCompressed refers to unknown field or method: Buffer.CloseTmpFileSizeCompressed","source":"\nfunc ExampleBuffer_CloseTmpFileSizeCompressed() {\n\topt := NewOptions()"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:558:31","message":"there can only be one output comment block per example","source":"\t// because of compression.\n\tfmt.Println(bfr.sts.ByteCnt) // output: 20\n\tfmt.Println(bfr.sts.Size)    // output: 48"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:559:31","message":"there can only be one output comment block per example","source":"\tfmt.Println(bfr.sts.ByteCnt) // output: 20\n\tfmt.Println(bfr.sts.Size)    // output: 48\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:569:1","message":"ExampleBuffer_CloseChecksum refers to unknown field or method: Buffer.CloseChecksum","source":"\nfunc ExampleBuffer_CloseChecksum() {\n\tbfr, _ := NewBuffer(nil)"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:580:32","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(bfr.sts.Checksum) // output: 54f30d75cf7374c7e524a4530dbc93c2\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:586:1","message":"ExampleBuffer_CloseChecksumCompressed refers to unknown field or method: Buffer.CloseChecksumCompressed","source":"\nfunc ExampleBuffer_CloseChecksumCompressed() {\n\topt := NewOptions()"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:600:32","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(bfr.sts.Checksum) // output: 42e649f9834028184ec21940d13a300f\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:606:1","message":"ExampleBuffer_CloseChecksumTmpFile refers to unknown field or method: Buffer.CloseChecksumTmpFile","source":"\nfunc ExampleBuffer_CloseChecksumTmpFile() {\n\topt := NewOptions()"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:622:32","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(bfr.sts.Checksum) // output: 54f30d75cf7374c7e524a4530dbc93c2\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:631:1","message":"ExampleBuffer_CloseChecksumTmpFileCompressed refers to unknown field or method: Buffer.CloseChecksumTmpFileCompressed","source":"\nfunc ExampleBuffer_CloseChecksumTmpFileCompressed() {\n\topt := NewOptions()"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:648:32","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(bfr.sts.Checksum) // output: 42e649f9834028184ec21940d13a300f\n"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:657:1","message":"ExampleSizeWriter refers to unknown identifier: SizeWriter","source":"\nfunc ExampleSizeWriter() {\n\tsw := \u0026sizeWriter{}"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:663:25","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(n)         // output: 9\n\tfmt.Println(err)       // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:664:25","message":"there can only be one output comment block per example","source":"\tfmt.Println(n)         // output: 9\n\tfmt.Println(err)       // output: \u003cnil\u003e\n\tfmt.Println(sw.Size()) // output: 9"},{"package_id":"github.com/pcelvng/task-tools/file/buf [github.com/pcelvng/task-tools/file/buf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/buf/buf_test.go:665:25","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)       // output: \u003cnil\u003e\n\tfmt.Println(sw.Size()) // output: 9\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:27:35","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)                 // output: \u003cnil\u003e\n\tfmt.Println(r.sts.Path != \"\")    // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:28:35","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)                 // output: \u003cnil\u003e\n\tfmt.Println(r.sts.Path != \"\")    // output: true\n\tfmt.Println(r.sts.Size)          // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:29:35","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.sts.Path != \"\")    // output: true\n\tfmt.Println(r.sts.Size)          // output: 20\n\tfmt.Println(r.sts.Created != \"\") // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:30:35","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.sts.Size)          // output: 20\n\tfmt.Println(r.sts.Created != \"\") // output: true\n\tfmt.Println(r.f != nil)          // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:31:35","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.sts.Created != \"\") // output: true\n\tfmt.Println(r.f != nil)          // output: true\n\tfmt.Println(r.rBuf != nil)       // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:32:35","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.f != nil)          // output: true\n\tfmt.Println(r.rBuf != nil)       // output: true\n\tfmt.Println(r.rGzip == nil)      // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:33:35","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.rBuf != nil)       // output: true\n\tfmt.Println(r.rGzip == nil)      // output: true\n\tfmt.Println(r.rHshr != nil)      // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:34:35","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.rGzip == nil)      // output: true\n\tfmt.Println(r.rHshr != nil)      // output: true\n\tfmt.Println(r.closed)            // output: false"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:35:35","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.rHshr != nil)      // output: true\n\tfmt.Println(r.closed)            // output: false\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:53:1","message":"ExampleNewReaderCompression refers to unknown identifier: NewReaderCompression","source":"\nfunc ExampleNewReaderCompression() {\n\tpth := \"./test/test.gz\""},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:61:35","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)                 // output: \u003cnil\u003e\n\tfmt.Println(r.sts.Path != \"\")    // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:62:35","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)                 // output: \u003cnil\u003e\n\tfmt.Println(r.sts.Path != \"\")    // output: true\n\tfmt.Println(r.sts.Size)          // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:63:35","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.sts.Path != \"\")    // output: true\n\tfmt.Println(r.sts.Size)          // output: 20\n\tfmt.Println(r.sts.Created != \"\") // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:64:35","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.sts.Size)          // output: 20\n\tfmt.Println(r.sts.Created != \"\") // output: true\n\tfmt.Println(r.f != nil)          // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:65:35","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.sts.Created != \"\") // output: true\n\tfmt.Println(r.f != nil)          // output: true\n\tfmt.Println(r.rBuf != nil)       // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:66:35","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.f != nil)          // output: true\n\tfmt.Println(r.rBuf != nil)       // output: true\n\tfmt.Println(r.rGzip != nil)      // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:67:35","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.rBuf != nil)       // output: true\n\tfmt.Println(r.rGzip != nil)      // output: true\n\tfmt.Println(r.rHshr != nil)      // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:68:35","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.rGzip != nil)      // output: true\n\tfmt.Println(r.rHshr != nil)      // output: true\n\tfmt.Println(r.closed)            // output: false"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:69:35","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.rHshr != nil)      // output: true\n\tfmt.Println(r.closed)            // output: false\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:87:1","message":"ExampleNewReaderErr refers to unknown identifier: NewReaderErr","source":"\nfunc ExampleNewReaderErr() {\n\tpth := \"./does/not/exist.txt\""},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:95:25","message":"there can only be one output comment block per example","source":"\tnotExists := os.IsNotExist(err)\n\tfmt.Println(r)         // output: \u003cnil\u003e\n\tfmt.Println(notExists) // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:96:25","message":"there can only be one output comment block per example","source":"\tfmt.Println(r)         // output: \u003cnil\u003e\n\tfmt.Println(notExists) // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:103:1","message":"ExampleNewReaderErrGzip refers to unknown identifier: NewReaderErrGzip","source":"\nfunc ExampleNewReaderErrGzip() {\n\toldPth := \"./test/test.txt\""},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:114:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(r)   // output: \u003cnil\u003e\n\tfmt.Println(err) // output: gzip: invalid header"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:115:19","message":"there can only be one output comment block per example","source":"\tfmt.Println(r)   // output: \u003cnil\u003e\n\tfmt.Println(err) // output: gzip: invalid header\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:138:29","message":"there can only be one output comment block per example","source":"\n\tfmt.Print(string(b1))      // output: test line, test line\n\tfmt.Println(n1)            // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:139:29","message":"there can only be one output comment block per example","source":"\tfmt.Print(string(b1))      // output: test line, test line\n\tfmt.Println(n1)            // output: 20\n\tfmt.Println(err1)          // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:140:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(n1)            // output: 20\n\tfmt.Println(err1)          // output: \u003cnil\u003e\n\tfmt.Println(n2)            // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:141:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err1)          // output: \u003cnil\u003e\n\tfmt.Println(n2)            // output: 0\n\tfmt.Println(err2)          // output: EOF"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:142:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(n2)            // output: 0\n\tfmt.Println(err2)          // output: EOF\n\tfmt.Println(r.sts.ByteCnt) // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:143:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err2)          // output: EOF\n\tfmt.Println(r.sts.ByteCnt) // output: 20\n\tfmt.Println(r.sts.LineCnt) // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:144:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.sts.ByteCnt) // output: 20\n\tfmt.Println(r.sts.LineCnt) // output: 0\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:161:1","message":"ExampleReader_ReadGzip refers to unknown field or method: Reader.ReadGzip","source":"\nfunc ExampleReader_ReadGzip() {\n\tpth := \"./test/test.gz\""},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:174:29","message":"there can only be one output comment block per example","source":"\n\tfmt.Print(string(b1))      // output: test line, test line\n\tfmt.Println(n1)            // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:175:29","message":"there can only be one output comment block per example","source":"\tfmt.Print(string(b1))      // output: test line, test line\n\tfmt.Println(n1)            // output: 20\n\tfmt.Println(err1)          // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:176:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(n1)            // output: 20\n\tfmt.Println(err1)          // output: \u003cnil\u003e\n\tfmt.Println(n2)            // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:177:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err1)          // output: \u003cnil\u003e\n\tfmt.Println(n2)            // output: 0\n\tfmt.Println(err2)          // output: EOF"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:178:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(n2)            // output: 0\n\tfmt.Println(err2)          // output: EOF\n\tfmt.Println(r.sts.ByteCnt) // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:179:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err2)          // output: EOF\n\tfmt.Println(r.sts.ByteCnt) // output: 20\n\tfmt.Println(r.sts.LineCnt) // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:180:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.sts.ByteCnt) // output: 20\n\tfmt.Println(r.sts.LineCnt) // output: 0\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:209:29","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(string(ln1))   // output: test line\n\tfmt.Println(string(ln2))   // output: test line"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:210:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(string(ln1))   // output: test line\n\tfmt.Println(string(ln2))   // output: test line\n\tfmt.Println(string(ln3))   // output:"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:211:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(string(ln2))   // output: test line\n\tfmt.Println(string(ln3))   // output:\n\tfmt.Println(err1)          // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:212:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(string(ln3))   // output:\n\tfmt.Println(err1)          // output: \u003cnil\u003e\n\tfmt.Println(err2)          // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:213:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err1)          // output: \u003cnil\u003e\n\tfmt.Println(err2)          // output: \u003cnil\u003e\n\tfmt.Println(err3)          // output: EOF"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:214:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err2)          // output: \u003cnil\u003e\n\tfmt.Println(err3)          // output: EOF\n\tfmt.Println(r.sts.ByteCnt) // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:215:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err3)          // output: EOF\n\tfmt.Println(r.sts.ByteCnt) // output: 20\n\tfmt.Println(r.sts.LineCnt) // output: 2"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:216:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.sts.ByteCnt) // output: 20\n\tfmt.Println(r.sts.LineCnt) // output: 2\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:233:1","message":"ExampleReader_ReadLineGzip refers to unknown field or method: Reader.ReadLineGzip","source":"\nfunc ExampleReader_ReadLineGzip() {\n\tpth := \"./test/test.gz\""},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:245:29","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(string(ln1))   // output: test line\n\tfmt.Println(string(ln2))   // output: test line"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:246:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(string(ln1))   // output: test line\n\tfmt.Println(string(ln2))   // output: test line\n\tfmt.Println(string(ln3))   // output:"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:247:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(string(ln2))   // output: test line\n\tfmt.Println(string(ln3))   // output:\n\tfmt.Println(err1)          // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:248:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(string(ln3))   // output:\n\tfmt.Println(err1)          // output: \u003cnil\u003e\n\tfmt.Println(err2)          // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:249:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err1)          // output: \u003cnil\u003e\n\tfmt.Println(err2)          // output: \u003cnil\u003e\n\tfmt.Println(err3)          // output: EOF"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:250:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err2)          // output: \u003cnil\u003e\n\tfmt.Println(err3)          // output: EOF\n\tfmt.Println(r.sts.ByteCnt) // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:251:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err3)          // output: EOF\n\tfmt.Println(r.sts.ByteCnt) // output: 20\n\tfmt.Println(r.sts.LineCnt) // output: 2"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:252:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.sts.ByteCnt) // output: 20\n\tfmt.Println(r.sts.LineCnt) // output: 2\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:281:27","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(sts.ByteCnt) // output: 20\n\tfmt.Println(sts.LineCnt) // output: 2"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:282:27","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.ByteCnt) // output: 20\n\tfmt.Println(sts.LineCnt) // output: 2\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:305:30","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)            // output: \u003cnil\u003e\n\tfmt.Println(r.sts.Checksum) // output: 54f30d75cf7374c7e524a4530dbc93c2"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:306:30","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)            // output: \u003cnil\u003e\n\tfmt.Println(r.sts.Checksum) // output: 54f30d75cf7374c7e524a4530dbc93c2\n\tfmt.Println(r.closed)       // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:307:30","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.sts.Checksum) // output: 54f30d75cf7374c7e524a4530dbc93c2\n\tfmt.Println(r.closed)       // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:319:1","message":"ExampleReader_CloseGzip refers to unknown field or method: Reader.CloseGzip","source":"\nfunc ExampleReader_CloseGzip() {\n\tpth := \"./test/test.gz\""},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:331:30","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)            // output: \u003cnil\u003e\n\tfmt.Println(r.sts.Checksum) // output: 42e649f9834028184ec21940d13a300f"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:332:30","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)            // output: \u003cnil\u003e\n\tfmt.Println(r.sts.Checksum) // output: 42e649f9834028184ec21940d13a300f\n\tfmt.Println(r.closed)       // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:333:30","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.sts.Checksum) // output: 42e649f9834028184ec21940d13a300f\n\tfmt.Println(r.closed)       // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:345:1","message":"ExampleReader_CloseAndClose refers to unknown field or method: Reader.CloseAndClose","source":"\nfunc ExampleReader_CloseAndClose() {\n\tpth := \"./test/test.txt\""},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:358:30","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)            // output: \u003cnil\u003e\n\tfmt.Println(r.sts.Checksum) // output: 54f30d75cf7374c7e524a4530dbc93c2"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:359:30","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)            // output: \u003cnil\u003e\n\tfmt.Println(r.sts.Checksum) // output: 54f30d75cf7374c7e524a4530dbc93c2\n\tfmt.Println(r.closed)       // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/read_test.go:360:30","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.sts.Checksum) // output: 54f30d75cf7374c7e524a4530dbc93c2\n\tfmt.Println(r.closed)       // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:17:63","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(strings.HasSuffix(w.sts.Path, \"/test/test.txt\")) // output: true\n\tfmt.Println(err)                                             // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:18:63","message":"there can only be one output comment block per example","source":"\tfmt.Println(strings.HasSuffix(w.sts.Path, \"/test/test.txt\")) // output: true\n\tfmt.Println(err)                                             // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:27:1","message":"ExampleNewWriterCompression refers to unknown identifier: NewWriterCompression","source":"\nfunc ExampleNewWriterCompression() {\n\tw, err := NewWriter(\"./test/test.gz\", nil)"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:33:62","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(strings.HasSuffix(w.sts.Path, \"/test/test.gz\")) // output: true\n\tfmt.Println(w.tmpPth)                                       // output:"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:34:62","message":"there can only be one output comment block per example","source":"\tfmt.Println(strings.HasSuffix(w.sts.Path, \"/test/test.gz\")) // output: true\n\tfmt.Println(w.tmpPth)                                       // output:\n\tfmt.Println(err)                                            // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:35:62","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.tmpPth)                                       // output:\n\tfmt.Println(err)                                            // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:45:1","message":"ExampleNewWriterWTmpFile refers to unknown identifier: NewWriterWTmpFile","source":"\nfunc ExampleNewWriterWTmpFile() {\n\topt := \u0026buf.Options{"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:59:23","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(hasPath) // output: true\n\tfmt.Println(hasTmp)  // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:60:23","message":"there can only be one output comment block per example","source":"\tfmt.Println(hasPath) // output: true\n\tfmt.Println(hasTmp)  // output: true\n\tfmt.Println(err)     // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:61:23","message":"there can only be one output comment block per example","source":"\tfmt.Println(hasTmp)  // output: true\n\tfmt.Println(err)     // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:73:1","message":"ExampleNewWriterBufErr refers to unknown identifier: NewWriterBufErr","source":"\nfunc ExampleNewWriterBufErr() {\n\topt := \u0026buf.Options{UseFileBuf: true, FileBufDir: \"/private/bad/tmp/dir\"}"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:83:25","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(w)         // output: \u003cnil\u003e\n\tfmt.Println(hasDenied) // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:84:25","message":"there can only be one output comment block per example","source":"\tfmt.Println(w)         // output: \u003cnil\u003e\n\tfmt.Println(hasDenied) // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:91:1","message":"ExampleNewWriterPthCheckErr refers to unknown identifier: NewWriterPthCheckErr","source":"\nfunc ExampleNewWriterPthCheckErr() {\n\tw, err := NewWriter(\"/private/test.txt\", nil)"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:99:25","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(w)         // output: \u003cnil\u003e\n\tfmt.Println(hasDenied) // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:100:25","message":"there can only be one output comment block per example","source":"\tfmt.Println(w)         // output: \u003cnil\u003e\n\tfmt.Println(hasDenied) // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:115:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(n)   // output: 9\n\tfmt.Println(err) // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:116:19","message":"there can only be one output comment block per example","source":"\tfmt.Println(n)   // output: 9\n\tfmt.Println(err) // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:133:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err) // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:150:27","message":"there can only be one output comment block per example","source":"\tsts := w.Stats()\n\tfmt.Println(sts.Path)    // output: test path\n\tfmt.Println(sts.Created) // output: test created"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:151:27","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Path)    // output: test path\n\tfmt.Println(sts.Created) // output: test created\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:167:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err) // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:193:33","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)               // output: \u003cnil\u003e\n\tfmt.Println(sts.Created != \"\") // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:194:33","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)               // output: \u003cnil\u003e\n\tfmt.Println(sts.Created != \"\") // output: true\n\tfmt.Println(sts.Checksum)      // output: 54f30d75cf7374c7e524a4530dbc93c2"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:195:33","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Created != \"\") // output: true\n\tfmt.Println(sts.Checksum)      // output: 54f30d75cf7374c7e524a4530dbc93c2\n\tfmt.Println(removed)           // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:196:33","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Checksum)      // output: 54f30d75cf7374c7e524a4530dbc93c2\n\tfmt.Println(removed)           // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:210:1","message":"ExampleWriter_AbortAfterClose refers to unknown field or method: Writer.AbortAfterClose","source":"\nfunc ExampleWriter_AbortAfterClose() {\n\tw, _ := NewWriter(\"./test/test.txt\", nil)"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:220:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err) // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:229:1","message":"ExampleWriter_CloseAfterAbort refers to unknown field or method: Writer.CloseAfterAbort","source":"\nfunc ExampleWriter_CloseAfterAbort() {\n\tw, _ := NewWriter(\"./test/test.txt\", nil)"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:239:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err) // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:272:28","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(n)            // output: 20\n\tfmt.Println(err)          // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:273:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(n)            // output: 20\n\tfmt.Println(err)          // output: \u003cnil\u003e\n\tfmt.Print(string(b))      // output: test line, test line"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:274:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)          // output: \u003cnil\u003e\n\tfmt.Print(string(b))      // output: test line, test line\n\tfmt.Println(rn)           // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:275:28","message":"there can only be one output comment block per example","source":"\tfmt.Print(string(b))      // output: test line, test line\n\tfmt.Println(rn)           // output: 20\n\tfmt.Println(fInfo.Size()) // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:276:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(rn)           // output: 20\n\tfmt.Println(fInfo.Size()) // output: 20\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:322:28","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(n)            // output: 20\n\tfmt.Println(err)          // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:323:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(n)            // output: 20\n\tfmt.Println(err)          // output: \u003cnil\u003e\n\tfmt.Print(string(b))      // output: test line, test line"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:324:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)          // output: \u003cnil\u003e\n\tfmt.Print(string(b))      // output: test line, test line\n\tfmt.Println(rn)           // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:325:28","message":"there can only be one output comment block per example","source":"\tfmt.Print(string(b))      // output: test line, test line\n\tfmt.Println(rn)           // output: 20\n\tfmt.Println(fInfo.Size()) // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:326:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(rn)           // output: 20\n\tfmt.Println(fInfo.Size()) // output: 20\n\tfmt.Println(removed)      // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:327:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(fInfo.Size()) // output: 20\n\tfmt.Println(removed)      // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:367:26","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(n)          // output: 0\n\tfmt.Println(notCopied)  // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:368:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(n)          // output: 0\n\tfmt.Println(notCopied)  // output: true\n\tfmt.Println(tmpRemoved) // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:369:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(notCopied)  // output: true\n\tfmt.Println(tmpRemoved) // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:389:29","message":"there can only be one output comment block per example","source":"\tw.WriteLine([]byte(\"test line\"))\n\tn, err := w.copyAndClean() // output: test line, test line\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:391:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(n)   // output: 20\n\tfmt.Println(err) // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:392:19","message":"there can only be one output comment block per example","source":"\tfmt.Println(n)   // output: 20\n\tfmt.Println(err) // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:410:29","message":"there can only be one output comment block per example","source":"\tw.WriteLine([]byte(\"test line\"))\n\tn, err := w.copyAndClean() // output: test line, test line\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:419:23","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(n)       // output: 20\n\tfmt.Println(err)     // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:420:23","message":"there can only be one output comment block per example","source":"\tfmt.Println(n)       // output: 20\n\tfmt.Println(err)     // output: \u003cnil\u003e\n\tfmt.Println(removed) // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:421:23","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)     // output: \u003cnil\u003e\n\tfmt.Println(removed) // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:435:1","message":"ExampleOpenf_ErrPerms refers to unknown identifier: Openf","source":"\nfunc ExampleOpenf_ErrPerms() {\n\t// dir bad perms"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:453:1","message":"ExampleOpenf_ErrDir refers to unknown identifier: Openf","source":"\nfunc ExampleOpenf_ErrDir() {\n\t// dir bad perms"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:457:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err) // output: path /dir/path/: references a directory\n"},{"package_id":"github.com/pcelvng/task-tools/file/local [github.com/pcelvng/task-tools/file/local.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/local/write_test.go:463:1","message":"ExampleClosef_err refers to unknown identifier: Closef","source":"\nfunc ExampleClosef_err() {\n\t// showing:"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:22:26","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)        // output: \u003cnil\u003e\n\tfmt.Println(r.sts.Path) // output: mcs://task-tools-test/read/test.txt"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:23:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)        // output: \u003cnil\u003e\n\tfmt.Println(r.sts.Path) // output: mcs://task-tools-test/read/test.txt\n\tfmt.Println(r.sts.Size) // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:24:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.sts.Path) // output: mcs://task-tools-test/read/test.txt\n\tfmt.Println(r.sts.Size) // output: 20\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:32:1","message":"ExampleNewReaderErrBadObject refers to unknown identifier: NewReaderErrBadObject","source":"\nfunc ExampleNewReaderErrBadObject() {\n\tr, err := NewReader(\"\", testOption)"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:35:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(r)   // output: \u003cnil\u003e\n\tfmt.Println(err) // output: Bucket name cannot be empty"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:36:19","message":"there can only be one output comment block per example","source":"\tfmt.Println(r)   // output: \u003cnil\u003e\n\tfmt.Println(err) // output: Bucket name cannot be empty\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:43:1","message":"ExampleNewReaderErrObjStat refers to unknown identifier: NewReaderErrObjStat","source":"\nfunc ExampleNewReaderErrObjStat() {\n\tpth := \"mcs://does-not/exist.txt\""},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:47:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(r)   // output: \u003cnil\u003e\n\tfmt.Println(err) // output: The specified bucket does not exist."},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:48:19","message":"there can only be one output comment block per example","source":"\tfmt.Println(r)   // output: \u003cnil\u003e\n\tfmt.Println(err) // output: The specified bucket does not exist.\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:55:1","message":"ExampleNewReaderErrGzip refers to unknown identifier: NewReaderErrGzip","source":"\nfunc ExampleNewReaderErrGzip() {\n\t// write a normal file to s3 as if it"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:84:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(r)   // output: \u003cnil\u003e\n\tfmt.Println(err) // output: gzip: invalid header"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:85:19","message":"there can only be one output comment block per example","source":"\tfmt.Println(r)   // output: \u003cnil\u003e\n\tfmt.Println(err) // output: gzip: invalid header\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:105:29","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(n)             // output: 20\n\tfmt.Println(err)           // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:106:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(n)             // output: 20\n\tfmt.Println(err)           // output: \u003cnil\u003e\n\tfmt.Print(string(b))       // output: test line, test line"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:107:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)           // output: \u003cnil\u003e\n\tfmt.Print(string(b))       // output: test line, test line\n\tfmt.Println(r.sts.ByteCnt) // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:108:29","message":"there can only be one output comment block per example","source":"\tfmt.Print(string(b))       // output: test line, test line\n\tfmt.Println(r.sts.ByteCnt) // output: 20\n\tfmt.Println(r.sts.LineCnt) // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:109:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.sts.ByteCnt) // output: 20\n\tfmt.Println(r.sts.LineCnt) // output: 0\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:120:1","message":"ExampleReader_ReadCompressed refers to unknown field or method: Reader.ReadCompressed","source":"\nfunc ExampleReader_ReadCompressed() {\n\tpth := fmt.Sprintf(\"mcs://%v/read/test.gz\", testBucket)"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:130:29","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(n)             // output: 20\n\tfmt.Println(err)           // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:131:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(n)             // output: 20\n\tfmt.Println(err)           // output: \u003cnil\u003e\n\tfmt.Print(string(b))       // output: test line, test line"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:132:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)           // output: \u003cnil\u003e\n\tfmt.Print(string(b))       // output: test line, test line\n\tfmt.Println(r.sts.ByteCnt) // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:133:29","message":"there can only be one output comment block per example","source":"\tfmt.Print(string(b))       // output: test line, test line\n\tfmt.Println(r.sts.ByteCnt) // output: 20\n\tfmt.Println(r.sts.LineCnt) // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:134:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.sts.ByteCnt) // output: 20\n\tfmt.Println(r.sts.LineCnt) // output: 0\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:155:29","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(string(ln1))   // output: test line\n\tfmt.Println(err1)          // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:156:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(string(ln1))   // output: test line\n\tfmt.Println(err1)          // output: \u003cnil\u003e\n\tfmt.Println(string(ln2))   // output: test line"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:157:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err1)          // output: \u003cnil\u003e\n\tfmt.Println(string(ln2))   // output: test line\n\tfmt.Println(err2)          // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:158:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(string(ln2))   // output: test line\n\tfmt.Println(err2)          // output: \u003cnil\u003e\n\tfmt.Println(r.sts.ByteCnt) // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:159:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err2)          // output: \u003cnil\u003e\n\tfmt.Println(r.sts.ByteCnt) // output: 20\n\tfmt.Println(r.sts.LineCnt) // output: 2"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:160:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.sts.ByteCnt) // output: 20\n\tfmt.Println(r.sts.LineCnt) // output: 2\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:171:1","message":"ExampleReader_ReadLineCompressed refers to unknown field or method: Reader.ReadLineCompressed","source":"\nfunc ExampleReader_ReadLineCompressed() {\n\tpth := fmt.Sprintf(\"mcs://%v/read/test.gz\", testBucket)"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:182:29","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(string(ln1))   // output: test line\n\tfmt.Println(err1)          // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:183:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(string(ln1))   // output: test line\n\tfmt.Println(err1)          // output: \u003cnil\u003e\n\tfmt.Println(string(ln2))   // output: test line"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:184:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err1)          // output: \u003cnil\u003e\n\tfmt.Println(string(ln2))   // output: test line\n\tfmt.Println(err2)          // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:185:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(string(ln2))   // output: test line\n\tfmt.Println(err2)          // output: \u003cnil\u003e\n\tfmt.Println(string(ln3))   // output:"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:186:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err2)          // output: \u003cnil\u003e\n\tfmt.Println(string(ln3))   // output:\n\tfmt.Println(err3)          // output: EOF"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:187:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(string(ln3))   // output:\n\tfmt.Println(err3)          // output: EOF\n\tfmt.Println(r.sts.ByteCnt) // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:188:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err3)          // output: EOF\n\tfmt.Println(r.sts.ByteCnt) // output: 20\n\tfmt.Println(r.sts.LineCnt) // output: 2"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:189:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.sts.ByteCnt) // output: 20\n\tfmt.Println(r.sts.LineCnt) // output: 2\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:211:27","message":"there can only be one output comment block per example","source":"\tsts := r.Stats()\n\tfmt.Println(sts.ByteCnt) // output: 10\n\tfmt.Println(sts.LineCnt) // output: 1"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:212:27","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.ByteCnt) // output: 10\n\tfmt.Println(sts.LineCnt) // output: 1\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:232:28","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)          // output: \u003cnil\u003e\n\tfmt.Println(sts.ByteCnt)  // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:233:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)          // output: \u003cnil\u003e\n\tfmt.Println(sts.ByteCnt)  // output: 20\n\tfmt.Println(sts.LineCnt)  // output: 2"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:234:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.ByteCnt)  // output: 20\n\tfmt.Println(sts.LineCnt)  // output: 2\n\tfmt.Println(sts.Checksum) // output: 54f30d75cf7374c7e524a4530dbc93c2"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:235:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.LineCnt)  // output: 2\n\tfmt.Println(sts.Checksum) // output: 54f30d75cf7374c7e524a4530dbc93c2\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:244:1","message":"ExampleReader_CloseCompressed refers to unknown field or method: Reader.CloseCompressed","source":"\nfunc ExampleReader_CloseCompressed() {\n\tpth := fmt.Sprintf(\"mcs://%v/read/test.gz\", testBucket)"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:257:28","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)          // output: \u003cnil\u003e\n\tfmt.Println(sts.ByteCnt)  // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:258:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)          // output: \u003cnil\u003e\n\tfmt.Println(sts.ByteCnt)  // output: 20\n\tfmt.Println(sts.LineCnt)  // output: 2"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:259:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.ByteCnt)  // output: 20\n\tfmt.Println(sts.LineCnt)  // output: 2\n\tfmt.Println(sts.Checksum) // output: 42e649f9834028184ec21940d13a300f"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:260:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.LineCnt)  // output: 2\n\tfmt.Println(sts.Checksum) // output: 42e649f9834028184ec21940d13a300f\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:269:1","message":"ExampleReader_CloseandClose refers to unknown field or method: Reader.CloseandClose","source":"\nfunc ExampleReader_CloseandClose() {\n\tpth := fmt.Sprintf(\"mcs://%v/read/test.gz\", testBucket)"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:283:28","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err1)         // output: \u003cnil\u003e\n\tfmt.Println(err2)         // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:284:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(err1)         // output: \u003cnil\u003e\n\tfmt.Println(err2)         // output: \u003cnil\u003e\n\tfmt.Println(sts.ByteCnt)  // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:285:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(err2)         // output: \u003cnil\u003e\n\tfmt.Println(sts.ByteCnt)  // output: 20\n\tfmt.Println(sts.LineCnt)  // output: 2"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:286:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.ByteCnt)  // output: 20\n\tfmt.Println(sts.LineCnt)  // output: 2\n\tfmt.Println(sts.Checksum) // output: 42e649f9834028184ec21940d13a300f"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/read_test.go:287:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.LineCnt)  // output: 2\n\tfmt.Println(sts.Checksum) // output: 42e649f9834028184ec21940d13a300f\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:18:31","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)             // output: \u003cnil\u003e\n\tfmt.Println(w.sts.Path)      // output: mcs://task-tools-test/write/test.txt"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:19:31","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)             // output: \u003cnil\u003e\n\tfmt.Println(w.sts.Path)      // output: mcs://task-tools-test/write/test.txt\n\tfmt.Println(w.client != nil) // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:20:31","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.sts.Path)      // output: mcs://task-tools-test/write/test.txt\n\tfmt.Println(w.client != nil) // output: true\n\tfmt.Println(w.bfr != nil)    // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:21:31","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.client != nil) // output: true\n\tfmt.Println(w.bfr != nil)    // output: true\n\tfmt.Println(w.bucket)        // output: task-tools-test"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:22:31","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.bfr != nil)    // output: true\n\tfmt.Println(w.bucket)        // output: task-tools-test\n\tfmt.Println(w.objPth)        // output: write/test.txt"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:23:31","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.bucket)        // output: task-tools-test\n\tfmt.Println(w.objPth)        // output: write/test.txt\n\tfmt.Println(w.tmpPth == \"\")  // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:24:31","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.objPth)        // output: write/test.txt\n\tfmt.Println(w.tmpPth == \"\")  // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:36:1","message":"ExampleNewWriterTmpFile refers to unknown identifier: NewWriterTmpFile","source":"\nfunc ExampleNewWriterTmpFile() {\n\tpth := fmt.Sprintf(\"mcs://%v/write/test.txt\", testBucket)"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:47:31","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)             // output: \u003cnil\u003e\n\tfmt.Println(w.sts.Path)      // output: mcs://task-tools-test/write/test.txt"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:48:31","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)             // output: \u003cnil\u003e\n\tfmt.Println(w.sts.Path)      // output: mcs://task-tools-test/write/test.txt\n\tfmt.Println(w.client != nil) // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:49:31","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.sts.Path)      // output: mcs://task-tools-test/write/test.txt\n\tfmt.Println(w.client != nil) // output: true\n\tfmt.Println(w.bfr != nil)    // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:50:31","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.client != nil) // output: true\n\tfmt.Println(w.bfr != nil)    // output: true\n\tfmt.Println(w.bucket)        // output: task-tools-test"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:51:31","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.bfr != nil)    // output: true\n\tfmt.Println(w.bucket)        // output: task-tools-test\n\tfmt.Println(w.objPth)        // output: write/test.txt"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:52:31","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.bucket)        // output: task-tools-test\n\tfmt.Println(w.objPth)        // output: write/test.txt\n\tfmt.Println(w.tmpPth != \"\")  // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:53:31","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.objPth)        // output: write/test.txt\n\tfmt.Println(w.tmpPth != \"\")  // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:70:1","message":"ExampleNewWriterCompressed refers to unknown identifier: NewWriterCompressed","source":"\nfunc ExampleNewWriterCompressed() {\n\tpth := fmt.Sprintf(\"mcs://%v/write/test.gz\", testBucket)"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:77:31","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)             // output: \u003cnil\u003e\n\tfmt.Println(w.sts.Path)      // output: mcs://task-tools-test/write/test.gz"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:78:31","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)             // output: \u003cnil\u003e\n\tfmt.Println(w.sts.Path)      // output: mcs://task-tools-test/write/test.gz\n\tfmt.Println(w.client != nil) // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:79:31","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.sts.Path)      // output: mcs://task-tools-test/write/test.gz\n\tfmt.Println(w.client != nil) // output: true\n\tfmt.Println(w.bfr != nil)    // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:80:31","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.client != nil) // output: true\n\tfmt.Println(w.bfr != nil)    // output: true\n\tfmt.Println(w.bucket)        // output: task-tools-test"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:81:31","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.bfr != nil)    // output: true\n\tfmt.Println(w.bucket)        // output: task-tools-test\n\tfmt.Println(w.objPth)        // output: write/test.gz"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:82:31","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.bucket)        // output: task-tools-test\n\tfmt.Println(w.objPth)        // output: write/test.gz\n\tfmt.Println(w.tmpPth == \"\")  // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:83:31","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.objPth)        // output: write/test.gz\n\tfmt.Println(w.tmpPth == \"\")  // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:95:1","message":"ExampleNewWriterErrBuf refers to unknown identifier: NewWriterErrBuf","source":"\nfunc ExampleNewWriterErrBuf() {\n\tpth := fmt.Sprintf(\"mcs://%v/%v/write/test.txt\", testOption.Host, testBucket)"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:107:24","message":"there can only be one output comment block per example","source":"\tisDenied := strings.Contains(err.Error(), \"denied\")\n\tfmt.Println(w)        // output: \u003cnil\u003e\n\tfmt.Println(isDenied) // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:108:24","message":"there can only be one output comment block per example","source":"\tfmt.Println(w)        // output: \u003cnil\u003e\n\tfmt.Println(isDenied) // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:124:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(n)   // output: 9\n\tfmt.Println(err) // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:125:19","message":"there can only be one output comment block per example","source":"\tfmt.Println(n)   // output: 9\n\tfmt.Println(err) // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:141:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err) // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:158:33","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(sts.Path)          // output: mcs://task-tools-test/write/test.txt\n\tfmt.Println(sts.ByteCnt)       // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:159:33","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Path)          // output: mcs://task-tools-test/write/test.txt\n\tfmt.Println(sts.ByteCnt)       // output: 20\n\tfmt.Println(sts.LineCnt)       // output: 2"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:160:33","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.ByteCnt)       // output: 20\n\tfmt.Println(sts.LineCnt)       // output: 2\n\tfmt.Println(sts.Size)          // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:161:33","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.LineCnt)       // output: 2\n\tfmt.Println(sts.Size)          // output: 0\n\tfmt.Println(sts.Checksum)      // output:"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:162:33","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Size)          // output: 0\n\tfmt.Println(sts.Checksum)      // output:\n\tfmt.Println(sts.Created == \"\") // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:163:33","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Checksum)      // output:\n\tfmt.Println(sts.Created == \"\") // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:174:1","message":"ExampleWriter_CloseStats refers to unknown field or method: Writer.CloseStats","source":"\nfunc ExampleWriter_CloseStats() {\n\tpth := fmt.Sprintf(\"mcs://%v/write/test.txt\", testBucket)"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:186:33","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(sts.Path)          // output: mcs://task-tools-test/write/test.txt\n\tfmt.Println(sts.ByteCnt)       // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:187:33","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Path)          // output: mcs://task-tools-test/write/test.txt\n\tfmt.Println(sts.ByteCnt)       // output: 20\n\tfmt.Println(sts.LineCnt)       // output: 2"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:188:33","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.ByteCnt)       // output: 20\n\tfmt.Println(sts.LineCnt)       // output: 2\n\tfmt.Println(sts.Size)          // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:189:33","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.LineCnt)       // output: 2\n\tfmt.Println(sts.Size)          // output: 20\n\tfmt.Println(sts.Checksum)      // output: 54f30d75cf7374c7e524a4530dbc93c2"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:190:33","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Size)          // output: 20\n\tfmt.Println(sts.Checksum)      // output: 54f30d75cf7374c7e524a4530dbc93c2\n\tfmt.Println(sts.Created != \"\") // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:191:33","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Checksum)      // output: 54f30d75cf7374c7e524a4530dbc93c2\n\tfmt.Println(sts.Created != \"\") // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:214:22","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(w.done) // output: false\n\terr := w.Abort()"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:217:22","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)    // output: \u003cnil\u003e\n\tfmt.Println(w.done) // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:218:22","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)    // output: \u003cnil\u003e\n\tfmt.Println(w.done) // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:226:1","message":"ExampleWriter_AbortAndAbort refers to unknown field or method: Writer.AbortAndAbort","source":"\nfunc ExampleWriter_AbortAndAbort() {\n\tpth := fmt.Sprintf(\"mcs://%v/write/test.txt\", testBucket)"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:237:22","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)    // output: \u003cnil\u003e\n\tfmt.Println(w.done) // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:238:22","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)    // output: \u003cnil\u003e\n\tfmt.Println(w.done) // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:256:39","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)                     // output: \u003cnil\u003e\n\tfmt.Println(w.done)                  // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:257:39","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)                     // output: \u003cnil\u003e\n\tfmt.Println(w.done)                  // output: true\n\tfmt.Println(w.objSts.Checksum != \"\") // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:258:39","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.done)                  // output: true\n\tfmt.Println(w.objSts.Checksum != \"\") // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:269:1","message":"ExampleWriter_CloseErrCopy refers to unknown field or method: Writer.CloseErrCopy","source":"\nfunc ExampleWriter_CloseErrCopy() {\n\tpth := fmt.Sprintf(\"mcs://%v/write/test.txt\", testBucket)"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:282:39","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)                     // output: Bucket name cannot be empty\n\tfmt.Println(w.done)                  // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:283:39","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)                     // output: Bucket name cannot be empty\n\tfmt.Println(w.done)                  // output: true\n\tfmt.Println(w.objSts.Checksum == \"\") // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:284:39","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.done)                  // output: true\n\tfmt.Println(w.objSts.Checksum == \"\") // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:292:1","message":"ExampleWriter_CloseAndClose refers to unknown field or method: Writer.CloseAndClose","source":"\nfunc ExampleWriter_CloseAndClose() {\n\tpth := fmt.Sprintf(\"mcs://%v/write/test.txt\", testBucket)"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:304:39","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)                     // output: \u003cnil\u003e\n\tfmt.Println(w.done)                  // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:305:39","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)                     // output: \u003cnil\u003e\n\tfmt.Println(w.done)                  // output: true\n\tfmt.Println(w.objSts.Checksum != \"\") // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:306:39","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.done)                  // output: true\n\tfmt.Println(w.objSts.Checksum != \"\") // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:317:1","message":"ExampleWriter_AbortAndClose refers to unknown field or method: Writer.AbortAndClose","source":"\nfunc ExampleWriter_AbortAndClose() {\n\tpth := fmt.Sprintf(\"mcs://%v/write/test.txt\", testBucket)"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:328:39","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)                     // output: \u003cnil\u003e\n\tfmt.Println(w.done)                  // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:329:39","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)                     // output: \u003cnil\u003e\n\tfmt.Println(w.done)                  // output: true\n\tfmt.Println(w.objSts.Checksum == \"\") // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:330:39","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.done)                  // output: true\n\tfmt.Println(w.objSts.Checksum == \"\") // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:338:1","message":"ExampleWriter_CloseAndAbort refers to unknown field or method: Writer.CloseAndAbort","source":"\nfunc ExampleWriter_CloseAndAbort() {\n\tpth := fmt.Sprintf(\"mcs://%v/write/test.txt\", testBucket)"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:350:39","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)                     // output: \u003cnil\u003e\n\tfmt.Println(w.done)                  // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:351:39","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)                     // output: \u003cnil\u003e\n\tfmt.Println(w.done)                  // output: true\n\tfmt.Println(w.objSts.Checksum != \"\") // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:352:39","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.done)                  // output: true\n\tfmt.Println(w.objSts.Checksum != \"\") // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:363:1","message":"ExampleWriter_CopyTmpFile refers to unknown field or method: Writer.CopyTmpFile","source":"\nfunc ExampleWriter_CopyTmpFile() {\n\tpth := fmt.Sprintf(\"mcs://%v/write/test.txt\", testBucket)"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:381:38","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(n)                      // output: 20\n\tfmt.Println(err)                    // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:382:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(n)                      // output: 20\n\tfmt.Println(err)                    // output: \u003cnil\u003e\n\tfmt.Println(w.objSts.Checksum)      // output: 54f30d75cf7374c7e524a4530dbc93c2"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:383:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)                    // output: \u003cnil\u003e\n\tfmt.Println(w.objSts.Checksum)      // output: 54f30d75cf7374c7e524a4530dbc93c2\n\tfmt.Println(w.objSts.Size)          // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:384:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.objSts.Checksum)      // output: 54f30d75cf7374c7e524a4530dbc93c2\n\tfmt.Println(w.objSts.Size)          // output: 20\n\tfmt.Println(w.objSts.Path)          // output: write/test.txt"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:385:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.objSts.Size)          // output: 20\n\tfmt.Println(w.objSts.Path)          // output: write/test.txt\n\tfmt.Println(w.objSts.Created != \"\") // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:386:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.objSts.Path)          // output: write/test.txt\n\tfmt.Println(w.objSts.Created != \"\") // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:402:1","message":"ExampleWriter_CopyNoExtension refers to unknown field or method: Writer.CopyNoExtension","source":"\nfunc ExampleWriter_CopyNoExtension() {\n\tpth := fmt.Sprintf(\"mcs://%v/write/test\", testBucket)"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:415:38","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(n)                      // output: 20\n\tfmt.Println(err)                    // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:416:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(n)                      // output: 20\n\tfmt.Println(err)                    // output: \u003cnil\u003e\n\tfmt.Println(w.objSts.Checksum)      // output: 54f30d75cf7374c7e524a4530dbc93c2"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:417:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)                    // output: \u003cnil\u003e\n\tfmt.Println(w.objSts.Checksum)      // output: 54f30d75cf7374c7e524a4530dbc93c2\n\tfmt.Println(w.objSts.Size)          // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:418:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.objSts.Checksum)      // output: 54f30d75cf7374c7e524a4530dbc93c2\n\tfmt.Println(w.objSts.Size)          // output: 20\n\tfmt.Println(w.objSts.Path)          // output: write/test"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:419:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.objSts.Size)          // output: 20\n\tfmt.Println(w.objSts.Path)          // output: write/test\n\tfmt.Println(w.objSts.Created != \"\") // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:420:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.objSts.Path)          // output: write/test\n\tfmt.Println(w.objSts.Created != \"\") // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:434:1","message":"ExampleWriter_SetObjSts refers to unknown field or method: Writer.SetObjSts","source":"\nfunc ExampleWriter_SetObjSts() {\n\tpth := fmt.Sprintf(\"mcs://%v/write/test.txt\", testBucket)"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:447:38","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)                    // output: \u003cnil\u003e\n\tfmt.Println(w.objSts.Checksum)      // output: 54f30d75cf7374c7e524a4530dbc93c2"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:448:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)                    // output: \u003cnil\u003e\n\tfmt.Println(w.objSts.Checksum)      // output: 54f30d75cf7374c7e524a4530dbc93c2\n\tfmt.Println(w.objSts.Size)          // output: 20"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:449:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.objSts.Checksum)      // output: 54f30d75cf7374c7e524a4530dbc93c2\n\tfmt.Println(w.objSts.Size)          // output: 20\n\tfmt.Println(w.objSts.Path)          // output: write/test.txt"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:450:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.objSts.Size)          // output: 20\n\tfmt.Println(w.objSts.Path)          // output: write/test.txt\n\tfmt.Println(w.objSts.Created != \"\") // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:451:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.objSts.Path)          // output: write/test.txt\n\tfmt.Println(w.objSts.Created != \"\") // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:464:1","message":"ExampleWriter_SetObjStsErr refers to unknown field or method: Writer.SetObjStsErr","source":"\nfunc ExampleWriter_SetObjStsErr() {\n\tpth := fmt.Sprintf(\"mcs://%v/write/test.txt\", testBucket)"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:477:38","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(err)                    // output: Bucket name cannot be empty\n\tfmt.Println(w.objSts.Checksum)      // output:"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:478:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)                    // output: Bucket name cannot be empty\n\tfmt.Println(w.objSts.Checksum)      // output:\n\tfmt.Println(w.objSts.Size)          // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:479:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.objSts.Checksum)      // output:\n\tfmt.Println(w.objSts.Size)          // output: 0\n\tfmt.Println(w.objSts.Path)          // output:"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:480:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.objSts.Size)          // output: 0\n\tfmt.Println(w.objSts.Path)          // output:\n\tfmt.Println(w.objSts.Created == \"\") // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/minio [github.com/pcelvng/task-tools/file/minio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/minio/write_test.go:481:38","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.objSts.Path)          // output:\n\tfmt.Println(w.objSts.Created == \"\") // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:51:26","message":"there can only be one output comment block per example","source":"\t}\n\tfmt.Println(err)        // output: \u003cnil\u003e\n\tfmt.Println(r.sts.Path) // output: nop://file.txt"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:52:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)        // output: \u003cnil\u003e\n\tfmt.Println(r.sts.Path) // output: nop://file.txt\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:59:1","message":"ExampleNewReaderErr refers to unknown identifier: NewReaderErr","source":"\nfunc ExampleNewReaderErr() {\n\t// showing:"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:67:27","message":"there can only be one output comment block per example","source":"\t}\n\tfmt.Println(r)           // output: \u003cnil\u003e\n\tfmt.Println(err.Error()) // output: init_err"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:68:27","message":"there can only be one output comment block per example","source":"\tfmt.Println(r)           // output: \u003cnil\u003e\n\tfmt.Println(err.Error()) // output: init_err\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:85:29","message":"there can only be one output comment block per example","source":"\tn, err := r.Read(buf)\n\tfmt.Println(n)             // output: 10\n\tfmt.Println(err)           // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:86:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(n)             // output: 10\n\tfmt.Println(err)           // output: \u003cnil\u003e\n\tfmt.Println(r.sts.ByteCnt) // output: 10"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:87:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)           // output: \u003cnil\u003e\n\tfmt.Println(r.sts.ByteCnt) // output: 10\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:95:1","message":"ExampleReader_ReadErr refers to unknown field or method: Reader.ReadErr","source":"\nfunc ExampleReader_ReadErr() {\n\t// showing:"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:105:29","message":"there can only be one output comment block per example","source":"\tn, err := r.Read(buf)\n\tfmt.Println(n)             // output: 0\n\tfmt.Println(err)           // output: read_err"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:106:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(n)             // output: 0\n\tfmt.Println(err)           // output: read_err\n\tfmt.Println(r.sts.ByteCnt) // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:107:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)           // output: read_err\n\tfmt.Println(r.sts.ByteCnt) // output: 0\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:115:1","message":"ExampleReader_ReadUsingMsgChan refers to unknown field or method: Reader.ReadUsingMsgChan","source":"\nfunc ExampleReader_ReadUsingMsgChan() {\n\t// showing:"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:132:29","message":"there can only be one output comment block per example","source":"\tn, err := r.Read(buf)\n\tfmt.Println(n)             // output: 8\n\tfmt.Println(err)           // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:133:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(n)             // output: 8\n\tfmt.Println(err)           // output: \u003cnil\u003e\n\tfmt.Println(r.sts.ByteCnt) // output: 8"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:134:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)           // output: \u003cnil\u003e\n\tfmt.Println(r.sts.ByteCnt) // output: 8\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:144:1","message":"ExampleReader_ReadUsingEOFChan refers to unknown field or method: Reader.ReadUsingEOFChan","source":"\nfunc ExampleReader_ReadUsingEOFChan() {\n\t// showing:"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:159:29","message":"there can only be one output comment block per example","source":"\tn, err := r.Read(buf)\n\tfmt.Println(n)             // output: 10\n\tfmt.Println(err)           // output: EOF"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:160:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(n)             // output: 10\n\tfmt.Println(err)           // output: EOF\n\tfmt.Println(r.sts.ByteCnt) // output: 10"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:161:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)           // output: EOF\n\tfmt.Println(r.sts.ByteCnt) // output: 10\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:180:29","message":"there can only be one output comment block per example","source":"\tln, err := r.ReadLine()\n\tfmt.Print(string(ln))      // output: mock line\n\tfmt.Println(err)           // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:181:29","message":"there can only be one output comment block per example","source":"\tfmt.Print(string(ln))      // output: mock line\n\tfmt.Println(err)           // output: \u003cnil\u003e\n\tfmt.Println(r.sts.ByteCnt) // output: 10"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:182:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)           // output: \u003cnil\u003e\n\tfmt.Println(r.sts.ByteCnt) // output: 10\n\tfmt.Println(r.sts.LineCnt) // output: 1"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:183:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.sts.ByteCnt) // output: 10\n\tfmt.Println(r.sts.LineCnt) // output: 1\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:192:1","message":"ExampleReader_ReadLineErr refers to unknown field or method: Reader.ReadLineErr","source":"\nfunc ExampleReader_ReadLineErr() {\n\t// showing:"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:201:29","message":"there can only be one output comment block per example","source":"\tln, err := r.ReadLine()\n\tfmt.Print(string(ln))      // output:\n\tfmt.Println(err)           // output: readline_err"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:202:29","message":"there can only be one output comment block per example","source":"\tfmt.Print(string(ln))      // output:\n\tfmt.Println(err)           // output: readline_err\n\tfmt.Println(r.sts.ByteCnt) // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:203:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)           // output: readline_err\n\tfmt.Println(r.sts.ByteCnt) // output: 0\n\tfmt.Println(r.sts.LineCnt) // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:204:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.sts.ByteCnt) // output: 0\n\tfmt.Println(r.sts.LineCnt) // output: 0\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:213:1","message":"ExampleReader_ReadLineUsingMsgChan refers to unknown field or method: Reader.ReadLineUsingMsgChan","source":"\nfunc ExampleReader_ReadLineUsingMsgChan() {\n\t// showing:"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:229:29","message":"there can only be one output comment block per example","source":"\tln, err := r.ReadLine()\n\tfmt.Println(string(ln))    // output: test msg\n\tfmt.Println(err)           // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:230:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(string(ln))    // output: test msg\n\tfmt.Println(err)           // output: \u003cnil\u003e\n\tfmt.Println(r.sts.ByteCnt) // output: 8"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:231:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)           // output: \u003cnil\u003e\n\tfmt.Println(r.sts.ByteCnt) // output: 8\n\tfmt.Println(r.sts.LineCnt) // output: 1"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:232:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.sts.ByteCnt) // output: 8\n\tfmt.Println(r.sts.LineCnt) // output: 1\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:243:1","message":"ExampleReader_ReadLineUsingEOFChan refers to unknown field or method: Reader.ReadLineUsingEOFChan","source":"\nfunc ExampleReader_ReadLineUsingEOFChan() {\n\t// showing:"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:258:29","message":"there can only be one output comment block per example","source":"\tln, err := r.ReadLine()\n\tfmt.Print(string(ln))      // output: mock line\n\tfmt.Println(err)           // output: EOF"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:259:29","message":"there can only be one output comment block per example","source":"\tfmt.Print(string(ln))      // output: mock line\n\tfmt.Println(err)           // output: EOF\n\tfmt.Println(r.sts.ByteCnt) // output: 10"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:260:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)           // output: EOF\n\tfmt.Println(r.sts.ByteCnt) // output: 10\n\tfmt.Println(r.sts.LineCnt) // output: 1"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:261:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(r.sts.ByteCnt) // output: 10\n\tfmt.Println(r.sts.LineCnt) // output: 1\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:287:28","message":"there can only be one output comment block per example","source":"\tsts := r.Stats()\n\tfmt.Println(sts.Path)     // output: nop://file.txt\n\tfmt.Println(sts.LineCnt)  // output: 10"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:288:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Path)     // output: nop://file.txt\n\tfmt.Println(sts.LineCnt)  // output: 10\n\tfmt.Println(sts.ByteCnt)  // output: 100"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:289:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.LineCnt)  // output: 10\n\tfmt.Println(sts.ByteCnt)  // output: 100\n\tfmt.Println(sts.Created)  // output: created date"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:290:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.ByteCnt)  // output: 100\n\tfmt.Println(sts.Created)  // output: created date\n\tfmt.Println(sts.Size)     // output: 200"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:291:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Created)  // output: created date\n\tfmt.Println(sts.Size)     // output: 200\n\tfmt.Println(sts.Checksum) // output: checksum"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:292:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Size)     // output: 200\n\tfmt.Println(sts.Checksum) // output: checksum\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:313:26","message":"there can only be one output comment block per example","source":"\terr := r.Close()\n\tfmt.Println(err)        // output: \u003cnil\u003e\n\tfmt.Println(r.sts.Size) // output: 10"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:314:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)        // output: \u003cnil\u003e\n\tfmt.Println(r.sts.Size) // output: 10\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:321:1","message":"ExampleReader_CloseErr refers to unknown field or method: Reader.CloseErr","source":"\nfunc ExampleReader_CloseErr() {\n\t// showing:"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:330:19","message":"there can only be one output comment block per example","source":"\terr := r.Close()\n\tfmt.Println(err) // output: close_err\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:336:1","message":"ExampleReader_AllErr refers to unknown field or method: Reader.AllErr","source":"\nfunc ExampleReader_AllErr() {\n\t// showing:"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:349:27","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(rErr)        // output: \u003cnil\u003e\n\tfmt.Println(readErr)     // output: err"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:350:27","message":"there can only be one output comment block per example","source":"\tfmt.Println(rErr)        // output: \u003cnil\u003e\n\tfmt.Println(readErr)     // output: err\n\tfmt.Println(readlineErr) // output: err"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:351:27","message":"there can only be one output comment block per example","source":"\tfmt.Println(readErr)     // output: err\n\tfmt.Println(readlineErr) // output: err\n\tfmt.Println(closeErr)    // output: err"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:352:27","message":"there can only be one output comment block per example","source":"\tfmt.Println(readlineErr) // output: err\n\tfmt.Println(closeErr)    // output: err\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:374:27","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(readErr)     // output: err\n\tfmt.Println(readlineErr) // output: err"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:375:27","message":"there can only be one output comment block per example","source":"\tfmt.Println(readErr)     // output: err\n\tfmt.Println(readlineErr) // output: err\n\tfmt.Println(closeErr)    // output: err"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:376:27","message":"there can only be one output comment block per example","source":"\tfmt.Println(readlineErr) // output: err\n\tfmt.Println(closeErr)    // output: err\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:392:26","message":"there can only be one output comment block per example","source":"\t}\n\tfmt.Println(err)        // output: \u003cnil\u003e\n\tfmt.Println(w.sts.Path) // output: nop://file.txt"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:393:26","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)        // output: \u003cnil\u003e\n\tfmt.Println(w.sts.Path) // output: nop://file.txt\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:400:1","message":"ExampleNewWriterErr refers to unknown identifier: NewWriterErr","source":"\nfunc ExampleNewWriterErr() {\n\t// showing:"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:406:19","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(w)   // output: \u003cnil\u003e\n\tfmt.Println(err) // output: init_err"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:407:19","message":"there can only be one output comment block per example","source":"\tfmt.Println(w)   // output: \u003cnil\u003e\n\tfmt.Println(err) // output: init_err\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:424:29","message":"there can only be one output comment block per example","source":"\tn, err := w.Write([]byte(\"test line\"))\n\tfmt.Println(n)             // output: 9\n\tfmt.Println(err)           // output: \u003cnil\u003e"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:425:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(n)             // output: 9\n\tfmt.Println(err)           // output: \u003cnil\u003e\n\tfmt.Println(w.sts.ByteCnt) // output: 9"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:426:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)           // output: \u003cnil\u003e\n\tfmt.Println(w.sts.ByteCnt) // output: 9\n\tfmt.Println(w.sts.LineCnt) // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:427:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.sts.ByteCnt) // output: 9\n\tfmt.Println(w.sts.LineCnt) // output: 0\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:436:1","message":"ExampleWriter_WriteErr refers to unknown field or method: Writer.WriteErr","source":"\nfunc ExampleWriter_WriteErr() {\n\t// showing:"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:446:29","message":"there can only be one output comment block per example","source":"\tn, err := w.Write([]byte(\"test line\"))\n\tfmt.Println(n)             // output: 0\n\tfmt.Println(err)           // output: write_err"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:447:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(n)             // output: 0\n\tfmt.Println(err)           // output: write_err\n\tfmt.Println(w.sts.ByteCnt) // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:448:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)           // output: write_err\n\tfmt.Println(w.sts.ByteCnt) // output: 0\n\tfmt.Println(w.sts.LineCnt) // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:449:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.sts.ByteCnt) // output: 0\n\tfmt.Println(w.sts.LineCnt) // output: 0\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:468:29","message":"there can only be one output comment block per example","source":"\terr := w.WriteLine([]byte(\"test line\"))\n\tfmt.Println(err)           // output: \u003cnil\u003e\n\tfmt.Println(w.sts.ByteCnt) // output: 10"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:469:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)           // output: \u003cnil\u003e\n\tfmt.Println(w.sts.ByteCnt) // output: 10\n\tfmt.Println(w.sts.LineCnt) // output: 1"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:470:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.sts.ByteCnt) // output: 10\n\tfmt.Println(w.sts.LineCnt) // output: 1\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:478:1","message":"ExampleWriter_WriteLineErr refers to unknown field or method: Writer.WriteLineErr","source":"\nfunc ExampleWriter_WriteLineErr() {\n\t// showing:"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:488:29","message":"there can only be one output comment block per example","source":"\terr := w.WriteLine([]byte(\"test line\"))\n\tfmt.Println(err)           // output: writeline_err\n\tfmt.Println(w.sts.ByteCnt) // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:489:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)           // output: writeline_err\n\tfmt.Println(w.sts.ByteCnt) // output: 0\n\tfmt.Println(w.sts.LineCnt) // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:490:29","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.sts.ByteCnt) // output: 0\n\tfmt.Println(w.sts.LineCnt) // output: 0\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:508:24","message":"there can only be one output comment block per example","source":"\tsts := w.Stats()\n\tfmt.Println(sts.Path) // output: nop://file.txt\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:524:19","message":"there can only be one output comment block per example","source":"\terr := w.Abort()\n\tfmt.Println(err) // output: \u003cnil\u003e\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:530:1","message":"ExampleWriter_AbortErr refers to unknown field or method: Writer.AbortErr","source":"\nfunc ExampleWriter_AbortErr() {\n\t// showing:"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:540:19","message":"there can only be one output comment block per example","source":"\terr := w.Abort()\n\tfmt.Println(err) // output: abort_err\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:557:35","message":"there can only be one output comment block per example","source":"\tisCreated := w.sts.Created != \"\" // close sets sts.Created\n\tfmt.Println(err)                 // output: \u003cnil\u003e\n\tfmt.Println(w.sts.Size)          // output: 10"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:558:35","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)                 // output: \u003cnil\u003e\n\tfmt.Println(w.sts.Size)          // output: 10\n\tfmt.Println(isCreated)           // output: true"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:559:35","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.sts.Size)          // output: 10\n\tfmt.Println(isCreated)           // output: true\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:567:1","message":"ExampleWriter_CloseErr refers to unknown field or method: Writer.CloseErr","source":"\nfunc ExampleWriter_CloseErr() {\n\t// showing:"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:578:35","message":"there can only be one output comment block per example","source":"\tisCreated := w.sts.Created != \"\" // close sets sts.Created\n\tfmt.Println(err)                 // output: \u003cnil\u003e\n\tfmt.Println(w.sts.Size)          // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:579:35","message":"there can only be one output comment block per example","source":"\tfmt.Println(err)                 // output: \u003cnil\u003e\n\tfmt.Println(w.sts.Size)          // output: 0\n\tfmt.Println(isCreated)           // output: false"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:580:35","message":"there can only be one output comment block per example","source":"\tfmt.Println(w.sts.Size)          // output: 0\n\tfmt.Println(isCreated)           // output: false\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:588:1","message":"ExampleWriter_AllErr refers to unknown field or method: Writer.AllErr","source":"\nfunc ExampleWriter_AllErr() {\n\t// showing:"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:602:28","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(wErr)         // output: \u003cnil\u003e\n\tfmt.Println(writeErr)     // output: err"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:603:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(wErr)         // output: \u003cnil\u003e\n\tfmt.Println(writeErr)     // output: err\n\tfmt.Println(writelineErr) // output: err"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:604:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(writeErr)     // output: err\n\tfmt.Println(writelineErr) // output: err\n\tfmt.Println(abortErr)     // output: err"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:605:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(writelineErr) // output: err\n\tfmt.Println(abortErr)     // output: err\n\tfmt.Println(closeErr)     // output: err"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:606:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(abortErr)     // output: err\n\tfmt.Println(closeErr)     // output: err\n"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:628:28","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(writeErr)     // output: err\n\tfmt.Println(writelineErr) // output: err"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:629:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(writeErr)     // output: err\n\tfmt.Println(writelineErr) // output: err\n\tfmt.Println(abortErr)     // output: err"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:630:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(writelineErr) // output: err\n\tfmt.Println(abortErr)     // output: err\n\tfmt.Println(closeErr)     // output: err"},{"package_id":"github.com/pcelvng/task-tools/file/nop [github.com/pcelvng/task-tools/file/nop.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/nop/nop_test.go:631:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(abortErr)     // output: err\n\tfmt.Println(closeErr)     // output: err\n"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:12:28","message":"there can only be one output comment block per example","source":"\tsts := New()\n\tfmt.Println(sts.LineCnt)  // output: 0\n\tfmt.Println(sts.ByteCnt)  // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:13:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.LineCnt)  // output: 0\n\tfmt.Println(sts.ByteCnt)  // output: 0\n\tfmt.Println(sts.Size)     // output: 0"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:14:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.ByteCnt)  // output: 0\n\tfmt.Println(sts.Size)     // output: 0\n\tfmt.Println(sts.Checksum) // output:"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:15:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Size)     // output: 0\n\tfmt.Println(sts.Checksum) // output:\n\tfmt.Println(sts.Path)     // output:"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:16:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Checksum) // output:\n\tfmt.Println(sts.Path)     // output:\n\tfmt.Println(sts.Created)  // output:"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:17:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Path)     // output:\n\tfmt.Println(sts.Created)  // output:\n"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:30:28","message":"there can only be one output comment block per example","source":"\tsts := NewFromBytes([]byte(`{\"linecnt\":10,\"bytecnt\":100,\"size\":200,\"checksum\":\"test checksum\",\"path\":\"test path\",\"created\":\"test created\"}`))\n\tfmt.Println(sts.LineCnt)  // output: 10\n\tfmt.Println(sts.ByteCnt)  // output: 100"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:31:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.LineCnt)  // output: 10\n\tfmt.Println(sts.ByteCnt)  // output: 100\n\tfmt.Println(sts.Size)     // output: 200"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:32:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.ByteCnt)  // output: 100\n\tfmt.Println(sts.Size)     // output: 200\n\tfmt.Println(sts.Checksum) // output: test checksum"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:33:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Size)     // output: 200\n\tfmt.Println(sts.Checksum) // output: test checksum\n\tfmt.Println(sts.Path)     // output: test path"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:34:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Checksum) // output: test checksum\n\tfmt.Println(sts.Path)     // output: test path\n\tfmt.Println(sts.Created)  // output: test created"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:35:28","message":"there can only be one output comment block per example","source":"\tfmt.Println(sts.Path)     // output: test path\n\tfmt.Println(sts.Created)  // output: test created\n"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:46:1","message":"ExampleStat_AddLine refers to unknown identifier: Stat","source":"\nfunc ExampleStat_AddLine() {\n\tsts := New()"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:53:27","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(sts.LineCnt) // output: 3\n"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:59:1","message":"ExampleStat_AddBytes refers to unknown identifier: Stat","source":"\nfunc ExampleStat_AddBytes() {\n\tsts := New()"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:66:27","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(sts.ByteCnt) // output: 1111\n"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:72:1","message":"ExampleStat_SetChecksum refers to unknown identifier: Stat","source":"\nfunc ExampleStat_SetChecksum() {\n\tsts := New()"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:80:28","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(sts.Checksum) // output: c72b9698fa1927e1dd12d3cf26ed84b2\n\t// Output:"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:85:1","message":"ExampleStat_SetSize refers to unknown identifier: Stat","source":"\nfunc ExampleStat_SetSize() {\n\tsts := New()"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:89:24","message":"there can only be one output comment block per example","source":"\tsts.SetSize(15)\n\tfmt.Println(sts.Size) // output: 15\n"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:95:1","message":"ExampleStat_SetPath refers to unknown identifier: Stat","source":"\nfunc ExampleStat_SetPath() {\n\tsts := New()"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:99:24","message":"there can only be one output comment block per example","source":"\tsts.SetPath(\"path/to/file.txt\")\n\tfmt.Println(sts.Path) // output: path/to/file.txt\n"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:105:1","message":"ExampleStat_SetCreated refers to unknown identifier: Stat","source":"\nfunc ExampleStat_SetCreated() {\n\tsts := New()"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:112:27","message":"there can only be one output comment block per example","source":"\tsts.SetCreated(t)\n\tfmt.Println(sts.Created) // output: 2017-01-02T03:04:05Z\n"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:118:1","message":"ExampleStat_ParseCreated refers to unknown identifier: Stat","source":"\nfunc ExampleStat_ParseCreated() {\n\tsts := New()"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:124:38","message":"there can only be one output comment block per example","source":"\tt := sts.ParseCreated()\n\tfmt.Println(t.Format(time.RFC3339)) // output: 2017-01-02T03:04:05Z\n"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:130:1","message":"ExampleStat_Clone refers to unknown identifier: Stat","source":"\nfunc ExampleStat_Clone() {\n\tsts := New()"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:156:1","message":"ExampleStat_JSONBytes refers to unknown identifier: Stat","source":"\nfunc ExampleStat_JSONBytes() {\n\tsts := New()"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:166:25","message":"there can only be one output comment block per example","source":"\tb := sts.JSONBytes()\n\tfmt.Println(string(b)) // output: {\"linecnt\":10,\"bytecnt\":100,\"size\":200,\"checksum\":\"test checksum\",\"path\":\"test path\",\"created\":\"test created\"}\n"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:172:1","message":"ExampleStat_JSONString refers to unknown identifier: Stat","source":"\nfunc ExampleStat_JSONString() {\n\tsts := New()"},{"package_id":"github.com/pcelvng/task-tools/file/stat [github.com/pcelvng/task-tools/file/stat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task-tools@v0.24.0/file/stat/stat_test.go:182:17","message":"there can only be one output comment block per example","source":"\ts := sts.JSONString()\n\tfmt.Println(s) // output: {\"linecnt\":10,\"bytecnt\":100,\"size\":200,\"checksum\":\"test checksum\",\"path\":\"test path\",\"created\":\"test created\"}\n"}]}
{"created_at":"2023-06-22 17:19:23.835064 UTC","module_path":"github.com/mackerelio/go-mackerel-plugin-helper","version":"v0.1.2","sort_version":"0,1,2~","commit_time":"2022-07-19 08:10:25 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/mackerelio/go-mackerel-plugin-helper [github.com/mackerelio/go-mackerel-plugin-helper.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mackerelio/go-mackerel-plugin-helper@v0.1.2/mackerel-plugin_test.go:203:1","message":"ExampleFormatValues refers to unknown identifier: FormatValues","source":"\nfunc ExampleFormatValues() {\n\tvar mp MackerelPlugin"},{"package_id":"github.com/mackerelio/go-mackerel-plugin-helper [github.com/mackerelio/go-mackerel-plugin-helper.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mackerelio/go-mackerel-plugin-helper@v0.1.2/mackerel-plugin_test.go:222:1","message":"ExampleFormatValuesAbsoluteName refers to unknown identifier: FormatValuesAbsoluteName","source":"\nfunc ExampleFormatValuesAbsoluteName() {\n\tvar mp MackerelPlugin"},{"package_id":"github.com/mackerelio/go-mackerel-plugin-helper [github.com/mackerelio/go-mackerel-plugin-helper.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mackerelio/go-mackerel-plugin-helper@v0.1.2/mackerel-plugin_test.go:245:1","message":"ExampleFormatValuesAbsoluteNameButNoPrefix refers to unknown identifier: FormatValuesAbsoluteNameButNoPrefix","source":"\nfunc ExampleFormatValuesAbsoluteNameButNoPrefix() {\n\tvar mp MackerelPlugin"},{"package_id":"github.com/mackerelio/go-mackerel-plugin-helper [github.com/mackerelio/go-mackerel-plugin-helper.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mackerelio/go-mackerel-plugin-helper@v0.1.2/mackerel-plugin_test.go:264:1","message":"ExampleFormatValuesWithCounterReset refers to unknown identifier: FormatValuesWithCounterReset","source":"\nfunc ExampleFormatValuesWithCounterReset() {\n\tvar mp MackerelPlugin"},{"package_id":"github.com/mackerelio/go-mackerel-plugin-helper [github.com/mackerelio/go-mackerel-plugin-helper.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mackerelio/go-mackerel-plugin-helper@v0.1.2/mackerel-plugin_test.go:282:1","message":"ExampleFormatFloatValuesWithCounterReset refers to unknown identifier: FormatFloatValuesWithCounterReset","source":"\nfunc ExampleFormatFloatValuesWithCounterReset() {\n\tvar mp MackerelPlugin"},{"package_id":"github.com/mackerelio/go-mackerel-plugin-helper [github.com/mackerelio/go-mackerel-plugin-helper.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mackerelio/go-mackerel-plugin-helper@v0.1.2/mackerel-plugin_test.go:300:1","message":"ExampleFormatValuesWithOverflow refers to unknown identifier: FormatValuesWithOverflow","source":"\nfunc ExampleFormatValuesWithOverflow() {\n\tvar mp MackerelPlugin"},{"package_id":"github.com/mackerelio/go-mackerel-plugin-helper [github.com/mackerelio/go-mackerel-plugin-helper.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mackerelio/go-mackerel-plugin-helper@v0.1.2/mackerel-plugin_test.go:319:1","message":"ExampleFormatValuesWithOverflowAndTooHighDifference refers to unknown identifier: FormatValuesWithOverflowAndTooHighDifference","source":"\nfunc ExampleFormatValuesWithOverflowAndTooHighDifference() {\n\tvar mp MackerelPlugin"},{"package_id":"github.com/mackerelio/go-mackerel-plugin-helper [github.com/mackerelio/go-mackerel-plugin-helper.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mackerelio/go-mackerel-plugin-helper@v0.1.2/mackerel-plugin_test.go:337:1","message":"ExampleFormatValuesWithOverflowAndNoLastDiff refers to unknown identifier: FormatValuesWithOverflowAndNoLastDiff","source":"\nfunc ExampleFormatValuesWithOverflowAndNoLastDiff() {\n\tvar mp MackerelPlugin"},{"package_id":"github.com/mackerelio/go-mackerel-plugin-helper [github.com/mackerelio/go-mackerel-plugin-helper.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mackerelio/go-mackerel-plugin-helper@v0.1.2/mackerel-plugin_test.go:355:1","message":"ExampleFormatValuesWithWildcard refers to unknown identifier: FormatValuesWithWildcard","source":"\nfunc ExampleFormatValuesWithWildcard() {\n\tvar mp MackerelPlugin"},{"package_id":"github.com/mackerelio/go-mackerel-plugin-helper [github.com/mackerelio/go-mackerel-plugin-helper.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mackerelio/go-mackerel-plugin-helper@v0.1.2/mackerel-plugin_test.go:374:1","message":"ExampleFormatValuesWithWildcardAndAbsoluteName refers to unknown identifier: FormatValuesWithWildcardAndAbsoluteName","source":"\nfunc ExampleFormatValuesWithWildcardAndAbsoluteName() {\n\t// AbsoluteName should be ignored with WildCard"},{"package_id":"github.com/mackerelio/go-mackerel-plugin-helper [github.com/mackerelio/go-mackerel-plugin-helper.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mackerelio/go-mackerel-plugin-helper@v0.1.2/mackerel-plugin_test.go:394:1","message":"ExampleFormatValuesWithWildcardAndNoDiff refers to unknown identifier: FormatValuesWithWildcardAndNoDiff","source":"\nfunc ExampleFormatValuesWithWildcardAndNoDiff() {\n\tvar mp MackerelPlugin"},{"package_id":"github.com/mackerelio/go-mackerel-plugin-helper [github.com/mackerelio/go-mackerel-plugin-helper.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mackerelio/go-mackerel-plugin-helper@v0.1.2/mackerel-plugin_test.go:413:1","message":"ExampleFormatValuesWithWildcardAstarisk refers to unknown identifier: FormatValuesWithWildcardAstarisk","source":"\nfunc ExampleFormatValuesWithWildcardAstarisk() {\n\tvar mp MackerelPlugin"},{"package_id":"github.com/mackerelio/go-mackerel-plugin-helper [github.com/mackerelio/go-mackerel-plugin-helper.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mackerelio/go-mackerel-plugin-helper@v0.1.2/mackerel-plugin_test.go:455:1","message":"ExampleOutputDefinitions refers to unknown identifier: OutputDefinitions","source":"\nfunc ExampleOutputDefinitions() {\n\tvar mp MemcachedPlugin"},{"package_id":"github.com/mackerelio/go-mackerel-plugin-helper [github.com/mackerelio/go-mackerel-plugin-helper.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mackerelio/go-mackerel-plugin-helper@v0.1.2/mackerel-plugin_test.go:632:1","message":"ExamplePluginWithPrefixOutputDefinitions refers to unknown identifier: PluginWithPrefixOutputDefinitions","source":"\nfunc ExamplePluginWithPrefixOutputDefinitions() {\n\thelper := NewMackerelPlugin(testP{})"},{"package_id":"github.com/mackerelio/go-mackerel-plugin-helper [github.com/mackerelio/go-mackerel-plugin-helper.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mackerelio/go-mackerel-plugin-helper@v0.1.2/mackerel-plugin_test.go:641:1","message":"ExamplePluginWithPrefixOutputValues refers to unknown identifier: PluginWithPrefixOutputValues","source":"\nfunc ExamplePluginWithPrefixOutputValues() {\n\thelper := NewMackerelPlugin(testP{})"},{"package_id":"github.com/mackerelio/go-mackerel-plugin-helper [github.com/mackerelio/go-mackerel-plugin-helper.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mackerelio/go-mackerel-plugin-helper@v0.1.2/mackerel-plugin_test.go:655:1","message":"ExamplePluginWithPrefixOutputValues2 refers to unknown identifier: PluginWithPrefixOutputValues2","source":"\nfunc ExamplePluginWithPrefixOutputValues2() {\n\thelper := NewMackerelPlugin(testP{})"}]}
{"created_at":"2023-06-22 17:26:43.976092 UTC","module_path":"github.com/couchbase/moss","version":"v0.3.0","sort_version":"0,3,0~","commit_time":"2021-12-09 07:40:08 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/segment_index_test.go:209:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\n\tgo runTest(\"WITHOUT SEG INDEX\", 100, 0, 0)\n\tgo runTest(\"WITH SEG INDEX\", 100, 100000, 1000000)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/segment_index_test.go:209:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\n\tgo runTest(\"WITHOUT SEG INDEX\", 100, 0, 0)\n\tgo runTest(\"WITH SEG INDEX\", 100, 100000, 1000000)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/segment_index_test.go:209:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\n\tgo runTest(\"WITHOUT SEG INDEX\", 100, 0, 0)\n\tgo runTest(\"WITH SEG INDEX\", 100, 100000, 1000000)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/segment_index_test.go:209:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\n\tgo runTest(\"WITHOUT SEG INDEX\", 100, 0, 0)\n\tgo runTest(\"WITH SEG INDEX\", 100, 100000, 1000000)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/segment_index_test.go:209:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\n\tgo runTest(\"WITHOUT SEG INDEX\", 100, 0, 0)\n\tgo runTest(\"WITH SEG INDEX\", 100, 100000, 1000000)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/segment_index_test.go:210:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITHOUT SEG INDEX\", 100, 0, 0)\n\tgo runTest(\"WITH SEG INDEX\", 100, 100000, 1000000)\n\tgo runTest(\"WITHOUT SEG INDEX\", 10000, 0, 0)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/segment_index_test.go:210:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITHOUT SEG INDEX\", 100, 0, 0)\n\tgo runTest(\"WITH SEG INDEX\", 100, 100000, 1000000)\n\tgo runTest(\"WITHOUT SEG INDEX\", 10000, 0, 0)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/segment_index_test.go:210:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITHOUT SEG INDEX\", 100, 0, 0)\n\tgo runTest(\"WITH SEG INDEX\", 100, 100000, 1000000)\n\tgo runTest(\"WITHOUT SEG INDEX\", 10000, 0, 0)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/segment_index_test.go:210:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITHOUT SEG INDEX\", 100, 0, 0)\n\tgo runTest(\"WITH SEG INDEX\", 100, 100000, 1000000)\n\tgo runTest(\"WITHOUT SEG INDEX\", 10000, 0, 0)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/segment_index_test.go:210:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITHOUT SEG INDEX\", 100, 0, 0)\n\tgo runTest(\"WITH SEG INDEX\", 100, 100000, 1000000)\n\tgo runTest(\"WITHOUT SEG INDEX\", 10000, 0, 0)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/segment_index_test.go:211:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITH SEG INDEX\", 100, 100000, 1000000)\n\tgo runTest(\"WITHOUT SEG INDEX\", 10000, 0, 0)\n\tgo runTest(\"WITH SEG INDEX\", 10000, 100000, 1000000)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/segment_index_test.go:211:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITH SEG INDEX\", 100, 100000, 1000000)\n\tgo runTest(\"WITHOUT SEG INDEX\", 10000, 0, 0)\n\tgo runTest(\"WITH SEG INDEX\", 10000, 100000, 1000000)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/segment_index_test.go:211:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITH SEG INDEX\", 100, 100000, 1000000)\n\tgo runTest(\"WITHOUT SEG INDEX\", 10000, 0, 0)\n\tgo runTest(\"WITH SEG INDEX\", 10000, 100000, 1000000)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/segment_index_test.go:211:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITH SEG INDEX\", 100, 100000, 1000000)\n\tgo runTest(\"WITHOUT SEG INDEX\", 10000, 0, 0)\n\tgo runTest(\"WITH SEG INDEX\", 10000, 100000, 1000000)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/segment_index_test.go:211:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITH SEG INDEX\", 100, 100000, 1000000)\n\tgo runTest(\"WITHOUT SEG INDEX\", 10000, 0, 0)\n\tgo runTest(\"WITH SEG INDEX\", 10000, 100000, 1000000)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/segment_index_test.go:212:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITHOUT SEG INDEX\", 10000, 0, 0)\n\tgo runTest(\"WITH SEG INDEX\", 10000, 100000, 1000000)\n"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/segment_index_test.go:212:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITHOUT SEG INDEX\", 10000, 0, 0)\n\tgo runTest(\"WITH SEG INDEX\", 10000, 100000, 1000000)\n"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/segment_index_test.go:212:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITHOUT SEG INDEX\", 10000, 0, 0)\n\tgo runTest(\"WITH SEG INDEX\", 10000, 100000, 1000000)\n"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/segment_index_test.go:212:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITHOUT SEG INDEX\", 10000, 0, 0)\n\tgo runTest(\"WITH SEG INDEX\", 10000, 100000, 1000000)\n"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/segment_index_test.go:212:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITHOUT SEG INDEX\", 10000, 0, 0)\n\tgo runTest(\"WITH SEG INDEX\", 10000, 100000, 1000000)\n"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2333:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t// Initial load\n\t\tgo load()\n\t\t\u003c-loadComplete"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2333:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t// Initial load\n\t\tgo load()\n\t\t\u003c-loadComplete"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2333:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t// Initial load\n\t\tgo load()\n\t\t\u003c-loadComplete"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2337:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t// Concurrent load \u0026 fetch\n\t\tgo load()\n\t\tgo fetch()"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2337:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t// Concurrent load \u0026 fetch\n\t\tgo load()\n\t\tgo fetch()"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2337:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t// Concurrent load \u0026 fetch\n\t\tgo load()\n\t\tgo fetch()"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2338:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tgo load()\n\t\tgo fetch()\n"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2356:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\n\tgo runTest(\"WITHOUT REGULAR SYNC\", 100, 0)\n\tgo runTest(\"WITH REGULAR SYNC\", 100, 1000000)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2356:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\n\tgo runTest(\"WITHOUT REGULAR SYNC\", 100, 0)\n\tgo runTest(\"WITH REGULAR SYNC\", 100, 1000000)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2356:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\n\tgo runTest(\"WITHOUT REGULAR SYNC\", 100, 0)\n\tgo runTest(\"WITH REGULAR SYNC\", 100, 1000000)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2356:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\n\tgo runTest(\"WITHOUT REGULAR SYNC\", 100, 0)\n\tgo runTest(\"WITH REGULAR SYNC\", 100, 1000000)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2356:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\n\tgo runTest(\"WITHOUT REGULAR SYNC\", 100, 0)\n\tgo runTest(\"WITH REGULAR SYNC\", 100, 1000000)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2357:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITHOUT REGULAR SYNC\", 100, 0)\n\tgo runTest(\"WITH REGULAR SYNC\", 100, 1000000)\n\tgo runTest(\"WITHOUT REGULAR SYNC\", 10000, 0)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2357:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITHOUT REGULAR SYNC\", 100, 0)\n\tgo runTest(\"WITH REGULAR SYNC\", 100, 1000000)\n\tgo runTest(\"WITHOUT REGULAR SYNC\", 10000, 0)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2357:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITHOUT REGULAR SYNC\", 100, 0)\n\tgo runTest(\"WITH REGULAR SYNC\", 100, 1000000)\n\tgo runTest(\"WITHOUT REGULAR SYNC\", 10000, 0)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2357:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITHOUT REGULAR SYNC\", 100, 0)\n\tgo runTest(\"WITH REGULAR SYNC\", 100, 1000000)\n\tgo runTest(\"WITHOUT REGULAR SYNC\", 10000, 0)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2357:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITHOUT REGULAR SYNC\", 100, 0)\n\tgo runTest(\"WITH REGULAR SYNC\", 100, 1000000)\n\tgo runTest(\"WITHOUT REGULAR SYNC\", 10000, 0)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2358:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITH REGULAR SYNC\", 100, 1000000)\n\tgo runTest(\"WITHOUT REGULAR SYNC\", 10000, 0)\n\tgo runTest(\"WITH REGULAR SYNC\", 10000, 1000000)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2358:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITH REGULAR SYNC\", 100, 1000000)\n\tgo runTest(\"WITHOUT REGULAR SYNC\", 10000, 0)\n\tgo runTest(\"WITH REGULAR SYNC\", 10000, 1000000)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2358:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITH REGULAR SYNC\", 100, 1000000)\n\tgo runTest(\"WITHOUT REGULAR SYNC\", 10000, 0)\n\tgo runTest(\"WITH REGULAR SYNC\", 10000, 1000000)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2358:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITH REGULAR SYNC\", 100, 1000000)\n\tgo runTest(\"WITHOUT REGULAR SYNC\", 10000, 0)\n\tgo runTest(\"WITH REGULAR SYNC\", 10000, 1000000)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2358:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITH REGULAR SYNC\", 100, 1000000)\n\tgo runTest(\"WITHOUT REGULAR SYNC\", 10000, 0)\n\tgo runTest(\"WITH REGULAR SYNC\", 10000, 1000000)"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2359:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITHOUT REGULAR SYNC\", 10000, 0)\n\tgo runTest(\"WITH REGULAR SYNC\", 10000, 1000000)\n"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2359:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITHOUT REGULAR SYNC\", 10000, 0)\n\tgo runTest(\"WITH REGULAR SYNC\", 10000, 1000000)\n"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2359:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITHOUT REGULAR SYNC\", 10000, 0)\n\tgo runTest(\"WITH REGULAR SYNC\", 10000, 1000000)\n"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2359:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITHOUT REGULAR SYNC\", 10000, 0)\n\tgo runTest(\"WITH REGULAR SYNC\", 10000, 1000000)\n"},{"package_id":"github.com/couchbase/moss [github.com/couchbase/moss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/couchbase/moss@v0.3.0/store_test.go:2359:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTest(\"WITHOUT REGULAR SYNC\", 10000, 0)\n\tgo runTest(\"WITH REGULAR SYNC\", 10000, 1000000)\n"}]}
{"created_at":"2023-06-22 17:20:53.901062 UTC","module_path":"github.com/oracle/oci-go-sdk","version":"v24.3.0+incompatible","sort_version":"a24,3,0~","commit_time":"2020-09-08 15:57:42 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_audit_test.go:18:1","message":"ExampleListEvents refers to unknown identifier: ListEvents","source":"\nfunc ExampleListEvents() {\n\tc, clerr := audit.NewAuditClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_backup_destination_test.go:24:1","message":"ExampleCreateNFSBackupDestination refers to unknown identifier: CreateNFSBackupDestination","source":"\nfunc ExampleCreateNFSBackupDestination() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_backup_destination_test.go:49:1","message":"ExampleGetBackupDestination refers to unknown identifier: GetBackupDestination","source":"\nfunc ExampleGetBackupDestination() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_backup_destination_test.go:66:1","message":"ExampleUpdateBackupDestination refers to unknown identifier: UpdateBackupDestination","source":"\nfunc ExampleUpdateBackupDestination() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_backup_destination_test.go:88:1","message":"ExampleUpdateDbBackupBackupDestination refers to unknown identifier: UpdateDbBackupBackupDestination","source":"\nfunc ExampleUpdateDbBackupBackupDestination() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_backup_destination_test.go:119:1","message":"ExampleCreateDbHomeBackupDestination refers to unknown identifier: CreateDbHomeBackupDestination","source":"\nfunc ExampleCreateDbHomeBackupDestination() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_backup_destination_test.go:167:1","message":"ExampleDeleteBackupDestination refers to unknown identifier: DeleteBackupDestination","source":"\nfunc ExampleDeleteBackupDestination() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_blockstorage_test.go:20:1","message":"ExampleCopyVolumeBackup refers to unknown identifier: CopyVolumeBackup","source":"// Polls the copied volume backup in the destination region until it's lifecycle is Available.\nfunc ExampleCopyVolumeBackup() {\n\tsourceBackupId := \"REPLACE_WITH_VOLUME_BACKUP_OCID\""},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_change_compartment_test.go:47:1","message":"ExampleChangeCompartment refers to unknown identifier: ChangeCompartment","source":"\nfunc ExampleChangeCompartment() {\n"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_change_nat_gateway_compartment_test.go:43:1","message":"ExampleChangeNatGatewayCompartment refers to unknown identifier: ChangeNatGatewayCompartment","source":"\nfunc ExampleChangeNatGatewayCompartment() {\n"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_change_service_gateway_compartment_test.go:43:1","message":"ExampleChangeServiceGatewayCompartment refers to unknown identifier: ChangeServiceGatewayCompartment","source":"\nfunc ExampleChangeServiceGatewayCompartment() {\n"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_cluster_network_test.go:30:1","message":"ExampleCreateAndWaitForRunningClusterNetwork refers to unknown identifier: CreateAndWaitForRunningClusterNetwork","source":"// Example to showcase cluster network creation, and eventual teardown\nfunc ExampleCreateAndWaitForRunningClusterNetwork() {\n\tClusterNetworkParseEnvironmentVariables()"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_compartment_test.go:25:1","message":"ExampleMoveCompartment refers to unknown identifier: MoveCompartment","source":"// ExampleMoveCompartment Moves an active compartment under a different parent\nfunc ExampleMoveCompartment() {\n\tc, err := identity.NewIdentityClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_containerengine_test.go:22:1","message":"ExampleClusterCRUD refers to unknown identifier: ClusterCRUD","source":"// how to work with WorkRequest\nfunc ExampleClusterCRUD() {\n\tctx := context.Background()"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_containerengine_test.go:88:1","message":"ExampleNodePoolCRUD refers to unknown identifier: NodePoolCRUD","source":"// Example for NodePool\nfunc ExampleNodePoolCRUD() {\n\tctx := context.Background()"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_containerengine_test.go:181:1","message":"ExampleKubeConfig refers to unknown identifier: KubeConfig","source":"\nfunc ExampleKubeConfig() {\n\tctx := context.Background()"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_containerengine_test.go:200:1","message":"ExampleWorkRequestQuery refers to unknown identifier: WorkRequestQuery","source":"// Example for work request query\nfunc ExampleWorkRequestQuery() {\n\tctx := context.Background()"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_core_pagination_test.go:19:1","message":"ExampleListShapes_Pagination refers to unknown identifier: ListShapes","source":"// ExampleListShapes_Pagination demostrate how to use page parameter\nfunc ExampleListShapes_Pagination() {\n\tc, err := core.NewComputeClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_core_test.go:34:1","message":"ExampleLaunchInstance refers to unknown identifier: LaunchInstance","source":"// after execute this sample code, otherwise, you will be charged for the running instance\nfunc ExampleLaunchInstance() {\n\tc, err := core.NewComputeClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_core_test.go:146:1","message":"ExampleCreateImageDetails_Polymorphic refers to unknown field or method: CreateImageDetails.Polymorphic","source":"// imports an exported image from the Oracle Cloud Infrastructure Object Storage service.\nfunc ExampleCreateImageDetails_Polymorphic() {\n\trequest := core.CreateImageRequest{}"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_create_servicegateway_test.go:18:1","message":"ExampleCreateServiceGateway refers to unknown identifier: CreateServiceGateway","source":"\nfunc ExampleCreateServiceGateway() {\n\tdisplayName := \"OCI-GOSDK-CreateServiceGateway-Example\" // displayName for created VCN and ServiceGateway"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_create_vcn_test.go:18:1","message":"ExampleCreateVcn refers to unknown identifier: CreateVcn","source":"\nfunc ExampleCreateVcn() {\n\tdisplayName := \"OCI-GOSDK-CreateVcn-Example\""},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_database_test.go:33:1","message":"ExampleCreateAdb refers to unknown identifier: CreateAdb","source":"\nfunc ExampleCreateAdb() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_database_test.go:59:1","message":"ExampleCreateFreeAdb refers to unknown identifier: CreateFreeAdb","source":"\nfunc ExampleCreateFreeAdb() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_database_test.go:85:1","message":"ExampleCreateAdbPreview refers to unknown identifier: CreateAdbPreview","source":"\nfunc ExampleCreateAdbPreview() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_database_test.go:112:1","message":"ExampleUpdateAdb refers to unknown identifier: UpdateAdb","source":"\nfunc ExampleUpdateAdb() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_database_test.go:135:1","message":"ExampleUpdateAdbAcl refers to unknown identifier: UpdateAdbAcl","source":"\nfunc ExampleUpdateAdbAcl() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_database_test.go:156:1","message":"ExampleUpdateAdbLisenceType refers to unknown identifier: UpdateAdbLisenceType","source":"\nfunc ExampleUpdateAdbLisenceType() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_dns_test.go:22:1","message":"ExampleDnsZone refers to unknown identifier: DnsZone","source":"// If optional TARGET_COMPARTMENT_ID env var is set, it will also move the DNS Zone to the compartment.\nfunc ExampleDnsZone() {\n\tclient, err := dns.NewDnsClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_dns_test.go:101:1","message":"ExampleDnsSteeringPolicy refers to unknown identifier: DnsSteeringPolicy","source":"// If optional TARGET_COMPARTMENT_ID env var is set, it will also move the DNS Steering Policy to the compartment.\nfunc ExampleDnsSteeringPolicy() {\n\tclient, err := dns.NewDnsClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_email_test.go:23:1","message":"ExampleEmailSender refers to unknown identifier: EmailSender","source":"\nfunc ExampleEmailSender() {\n\tclient, err := email.NewEmailClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_functions_test.go:48:1","message":"ExampleFunctionInvoke refers to unknown identifier: FunctionInvoke","source":"*/\nfunc ExampleFunctionInvoke() {\n\tmanagementClient, err := functions.NewFunctionsManagementClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_healthchecks_test.go:134:1","message":"ExampleHealthChecksHttpSamples refers to unknown identifier: HealthChecksHttpSamples","source":"\nfunc ExampleHealthChecksHttpSamples() {\n\tctx := context.Background()"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_healthchecks_test.go:265:1","message":"ExampleHealthChecksPingSamples refers to unknown identifier: HealthChecksPingSamples","source":"\nfunc ExampleHealthChecksPingSamples() {\n\tctx := context.Background()"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_identity_test.go:22:1","message":"ExampleListAvailabilityDomains refers to unknown identifier: ListAvailabilityDomains","source":"// the value for the compartment ID (remember that the tenancy is simply the root compartment).\nfunc ExampleListAvailabilityDomains() {\n\tc, err := identity.NewIdentityClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_identity_test.go:45:1","message":"ExampleListGroupsWithCustomSignedHeader refers to unknown identifier: ListGroupsWithCustomSignedHeader","source":"// ExampleListGroupsWithCustomSignedHeader Lists groups by passing a custom signed header in the request\nfunc ExampleListGroupsWithCustomSignedHeader() {\n\tprovider := common.DefaultConfigProvider()"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_instance_configs_test.go:26:1","message":"ExampleCreateAndUseInstanceConfiguration refers to unknown identifier: CreateAndUseInstanceConfiguration","source":"// Example to showcase instance configuration create and operations, and eventual teardown\nfunc ExampleCreateAndUseInstanceConfiguration() {\n\tInstanceConfigsParseEnvironmentVariables()"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_instance_pools_test.go:34:1","message":"ExampleCreateAndWaitForRunningInstancePool refers to unknown identifier: CreateAndWaitForRunningInstancePool","source":"// Example to showcase instance pool create and operations, and eventual teardown\nfunc ExampleCreateAndWaitForRunningInstancePool() {\n\tInstancePoolsParseEnvironmentVariables()"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_instance_principals_test.go:26:1","message":"ExampleInstancePrincipals refers to unknown identifier: InstancePrincipals","source":"\nfunc ExampleInstancePrincipals() {\n"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_instance_principals_test.go:54:1","message":"ExampleInstancePrincipalsWithCustomClient refers to unknown identifier: InstancePrincipalsWithCustomClient","source":"// Similar to the example above, this example shows how to customize the client.\nfunc ExampleInstancePrincipalsWithCustomClient() {\n"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_keymanagement_test.go:21:1","message":"ExampleVaultOperations refers to unknown identifier: VaultOperations","source":"// and cancel a scheduled deletion of a KMS vault\nfunc ExampleVaultOperations() {\n\tvaultClient, clientError := keymanagement.NewKmsVaultClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_keymanagement_test.go:58:1","message":"ExampleKeyOperations refers to unknown identifier: KeyOperations","source":"// ExampleKeyManagement_KeyOperations shows how to create, enable and disable a KMS key\nfunc ExampleKeyOperations() {\n\tvaultClient, clientError := keymanagement.NewKmsVaultClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_keymanagement_test.go:162:1","message":"ExampleCryptoOperations refers to unknown identifier: CryptoOperations","source":"\nfunc ExampleCryptoOperations() {\n\tvaultClient, clientError := keymanagement.NewKmsVaultClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_loadbalancer_test.go:30:1","message":"ExampleCreateLoadbalancer refers to unknown identifier: CreateLoadbalancer","source":"\nfunc ExampleCreateLoadbalancer() {\n\tc, clerr := loadbalancer.NewLoadBalancerClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_objectstorage_test.go:23:1","message":"ExampleObjectStorage_UploadFile refers to unknown identifier: ObjectStorage","source":"// ExampleObjectStorage_UploadFile shows how to create a bucket and upload a file\nfunc ExampleObjectStorage_UploadFile() {\n\tc, clerr := objectstorage.NewObjectStorageClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_objectstorage_test.go:57:1","message":"ExampleObjectStorage_UploadManager_UploadFile refers to unknown identifier: ObjectStorage","source":"\nfunc ExampleObjectStorage_UploadManager_UploadFile() {\n\tc, clerr := objectstorage.NewObjectStorageClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_objectstorage_test.go:124:1","message":"ExampleObjectStorage_UploadManager_Stream refers to unknown identifier: ObjectStorage","source":"\nfunc ExampleObjectStorage_UploadManager_Stream() {\n\tc, clerr := objectstorage.NewObjectStorageClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_objectstorage_test.go:198:1","message":"ExampleObjectStorage_GetNamespace refers to unknown identifier: ObjectStorage","source":"// ExampleObjectStorage_GetNamespace shows how to get namespace providing compartmentId.\nfunc ExampleObjectStorage_GetNamespace() {\n\tc, clerr := objectstorage.NewObjectStorageClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_quotas_test.go:83:1","message":"ExampleQuotas refers to unknown identifier: Quotas","source":"// ExampleQuotas runs an example demonstrating the use of OCI Golang SDK for managing Quotas\nfunc ExampleQuotas() {\n"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_rawrequest_test.go:20:1","message":"ExampleListUsers_RawRequest refers to unknown identifier: ListUsers","source":"// ExampleRawRequest compose a request, sign it and send to server\nfunc ExampleListUsers_RawRequest() {\n\t// build the url"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_resourcemanager_test.go:19:1","message":"ExampleResourceManager refers to unknown identifier: ResourceManager","source":"// The comparement id is read from the environment variable OCI_COMPARTMENT_ID\nfunc ExampleResourceManager() {\n\tprovider := common.DefaultConfigProvider()"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_resourcesearch_test.go:19:1","message":"Example_ResourceSearch has malformed example suffix: ResourceSearch","source":"\nfunc Example_ResourceSearch() {\n\tclient, err := resourcesearch.NewResourceSearchClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_securityTokenBasedAuth_test.go:31:1","message":"ExampleCreateAndUseSecurityTokenBasedConfiguration refers to unknown identifier: CreateAndUseSecurityTokenBasedConfiguration","source":"\nfunc ExampleCreateAndUseSecurityTokenBasedConfiguration() {\n\thomeFolder := getHomeFolder()"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_tagging_test.go:20:1","message":"ExampleTagging refers to unknown identifier: Tagging","source":"// ExampleTagging shows the sample for tag and tagNamespace operations: create, update, get, list etc...\nfunc ExampleTagging() {\n\tc, err := identity.NewIdentityClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_tagging_test.go:117:1","message":"ExampleFreeformAndDefinedTag refers to unknown identifier: FreeformAndDefinedTag","source":"// ExampleFreeformAndDefinedTag shows how to use freeform and defined tags\nfunc ExampleFreeformAndDefinedTag() {\n\t// create a tag namespace and two tags"},{"package_id":"synthetic/example [synthetic/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk@v24.3.0+incompatible/example/example_work_request_test.go:32:1","message":"ExampleWorkRequests refers to unknown identifier: WorkRequests","source":"\nfunc ExampleWorkRequests() {\n\tclient, err := workrequests.NewWorkRequestClientWithConfigurationProvider(common.DefaultConfigProvider())"}]}
{"created_at":"2023-06-22 17:44:58.580328 UTC","module_path":"gitlab.com/SiaPrime/SiaPrime","version":"v1.4.1","sort_version":"1,4,1~","commit_time":"2019-10-12 19:29:58 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager [gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/host/contractmanager/persist_test.go:306:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager [gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/host/contractmanager/sectorupdate_test.go:227:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager [gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/host/contractmanager/sectorupdate_test.go:308:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager [gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/host/contractmanager/sectorupdate_test.go:686:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager [gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/host/contractmanager/sectorupdate_test.go:693:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager [gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/host/contractmanager/sectorupdate_test.go:834:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager [gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/host/contractmanager/sectorupdate_test.go:1553:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager [gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/host/contractmanager/sectorupdate_test.go:1732:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager [gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/host/contractmanager/sectorupdate_test.go:1785:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager [gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/host/contractmanager/storagefolderadd_test.go:205:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager [gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/host/contractmanager/storagefolderadd_test.go:212:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager [gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/host/contractmanager/storagefolderadd_test.go:219:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager [gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/host/contractmanager/storagefolderadd_test.go:330:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager [gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/host/contractmanager/storagefolderadd_test.go:360:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager [gitlab.com/SiaPrime/SiaPrime/modules/host/contractmanager.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/host/contractmanager/storagefolderadd_test.go:367:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/miner [gitlab.com/SiaPrime/SiaPrime/modules/miner.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/miner/miner_test.go:346:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := mt.miner.Close(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/miningpool [gitlab.com/SiaPrime/SiaPrime/modules/miningpool.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/miningpool/stratum_test.go:155:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\tfor i := 1; i \u003c num+1; i++ {\n\t\tgo createAuthorizeRequest(t, port, waitchan, uint64(i), true)\n\t\t// If we don't sleep for a ms here, we get a deadlock."},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/miningpool [gitlab.com/SiaPrime/SiaPrime/modules/miningpool.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/miningpool/stratum_test.go:155:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\tfor i := 1; i \u003c num+1; i++ {\n\t\tgo createAuthorizeRequest(t, port, waitchan, uint64(i), true)\n\t\t// If we don't sleep for a ms here, we get a deadlock."},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/miningpool [gitlab.com/SiaPrime/SiaPrime/modules/miningpool.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/miningpool/stratum_test.go:155:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\tfor i := 1; i \u003c num+1; i++ {\n\t\tgo createAuthorizeRequest(t, port, waitchan, uint64(i), true)\n\t\t// If we don't sleep for a ms here, we get a deadlock."},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/miningpool [gitlab.com/SiaPrime/SiaPrime/modules/miningpool.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/miningpool/stratum_test.go:155:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\tfor i := 1; i \u003c num+1; i++ {\n\t\tgo createAuthorizeRequest(t, port, waitchan, uint64(i), true)\n\t\t// If we don't sleep for a ms here, we get a deadlock."},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/miningpool [gitlab.com/SiaPrime/SiaPrime/modules/miningpool.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/miningpool/stratum_test.go:155:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\tfor i := 1; i \u003c num+1; i++ {\n\t\tgo createAuthorizeRequest(t, port, waitchan, uint64(i), true)\n\t\t// If we don't sleep for a ms here, we get a deadlock."},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/miningpool [gitlab.com/SiaPrime/SiaPrime/modules/miningpool.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/miningpool/stratum_test.go:155:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\tfor i := 1; i \u003c num+1; i++ {\n\t\tgo createAuthorizeRequest(t, port, waitchan, uint64(i), true)\n\t\t// If we don't sleep for a ms here, we get a deadlock."},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/miningpool [gitlab.com/SiaPrime/SiaPrime/modules/miningpool.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/miningpool/stratum_test.go:280:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tsocket := createAuthorizeRequest(t, port, nil, uint64(i), false)\n\t\tgo createSubscribeRequest(t, socket, waitchan, uint64(i), true)\n\t\t// If we don't sleep for a ms here, we get a deadlock."},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/miningpool [gitlab.com/SiaPrime/SiaPrime/modules/miningpool.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/miningpool/stratum_test.go:280:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tsocket := createAuthorizeRequest(t, port, nil, uint64(i), false)\n\t\tgo createSubscribeRequest(t, socket, waitchan, uint64(i), true)\n\t\t// If we don't sleep for a ms here, we get a deadlock."},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/miningpool [gitlab.com/SiaPrime/SiaPrime/modules/miningpool.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/miningpool/stratum_test.go:280:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tsocket := createAuthorizeRequest(t, port, nil, uint64(i), false)\n\t\tgo createSubscribeRequest(t, socket, waitchan, uint64(i), true)\n\t\t// If we don't sleep for a ms here, we get a deadlock."},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/miningpool [gitlab.com/SiaPrime/SiaPrime/modules/miningpool.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/miningpool/stratum_test.go:280:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tsocket := createAuthorizeRequest(t, port, nil, uint64(i), false)\n\t\tgo createSubscribeRequest(t, socket, waitchan, uint64(i), true)\n\t\t// If we don't sleep for a ms here, we get a deadlock."},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/renter/siadir [gitlab.com/SiaPrime/SiaPrime/modules/renter/siadir.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/renter/siadir/siadirset_test.go:332:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\twg.Add(1)\n\t\t\tgo f(entry)\n\t\t} else {"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/renter/siafile [gitlab.com/SiaPrime/SiaPrime/modules/renter/siafile.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/renter/siafile/siafileset_test.go:583:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\twg.Add(1)\n\t\t\tgo f(sf)\n\t\t} else {"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/renter/siafile [gitlab.com/SiaPrime/SiaPrime/modules/renter/siafile.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/renter/siafile/siafileset_test.go:703:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\twg.Add(1)\n\t\t\tgo f(sf)\n\t\t} else {"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/wallet [gitlab.com/SiaPrime/SiaPrime/modules/wallet.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/wallet/defrag_test.go:166:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/wallet [gitlab.com/SiaPrime/SiaPrime/modules/wallet.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/wallet/defrag_test.go:174:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/wallet [gitlab.com/SiaPrime/SiaPrime/modules/wallet.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/wallet/defrag_test.go:198:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/wallet [gitlab.com/SiaPrime/SiaPrime/modules/wallet.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/wallet/transactionbuilder_test.go:473:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/wallet [gitlab.com/SiaPrime/SiaPrime/modules/wallet.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/wallet/transactionbuilder_test.go:477:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/wallet [gitlab.com/SiaPrime/SiaPrime/modules/wallet.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/wallet/transactionbuilder_test.go:487:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/modules/wallet [gitlab.com/SiaPrime/SiaPrime/modules/wallet.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/modules/wallet/transactionbuilder_test.go:491:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:77:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:82:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:92:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:96:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil \u0026\u0026 !strings.Contains(err.Error(), siafile.ErrUnknownPath.Error()) \u0026\u0026 !errors.Contains(err, siatest.ErrFileNotTracked) {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:99:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err := r.WaitForUploadHealth(rf); err != nil \u0026\u0026 !errors.Contains(err, siatest.ErrFileNotTracked) {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:117:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:133:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:137:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil \u0026\u0026 !strings.Contains(err.Error(), siafile.ErrUnknownPath.Error()) \u0026\u0026 !errors.Contains(err, siatest.ErrFileNotTracked) {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:140:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err := r.WaitForUploadHealth(rf); err != nil \u0026\u0026 !errors.Contains(err, siatest.ErrFileNotTracked) {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:159:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:169:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil \u0026\u0026 !strings.Contains(err.Error(), siafile.ErrUnknownPath.Error()) {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:175:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:179:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil \u0026\u0026 !strings.Contains(err.Error(), siafile.ErrPathOverload.Error()) {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:198:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:208:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil \u0026\u0026 !strings.Contains(err.Error(), siafile.ErrUnknownPath.Error()) {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:232:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:237:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:240:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err := r.RenterDirCreatePost(sp); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:265:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:275:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err := r.RenterDirDeletePost(dir); err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:282:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil \u0026\u0026 !strings.Contains(err.Error(), siadir.ErrPathOverload.Error()) {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:290:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:296:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err := r.RenterDirRenamePost(dir, newDir); err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/siatest/renter [gitlab.com/SiaPrime/SiaPrime/siatest/renter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/siatest/renter/renter_vlong_test.go:321:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err := tg.RemoveNode(host); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/sync [gitlab.com/SiaPrime/SiaPrime/sync.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/sync/lock_test.go:27:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif value != 1 {\n\t\t\tt.Fatal(\"Lock was grabbed incorrectly\")\n\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/sync [gitlab.com/SiaPrime/SiaPrime/sync.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/sync/lock_test.go:56:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif value != 1 {\n\t\t\t\t\tt.Fatal(\"Lock was grabbed incorrectly\")\n\t\t\t\t}"},{"package_id":"gitlab.com/SiaPrime/SiaPrime/sync [gitlab.com/SiaPrime/SiaPrime/sync.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/SiaPrime/SiaPrime@v1.4.1/sync/threadgroup_test.go:443:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:42:56.308344 UTC","module_path":"github.com/kuzzleio/sdk-go","version":"v0.0.0-20211026124834-25659d3c6fbe","sort_version":"0,0,0,~20211026124834-25659d3c6fbe","commit_time":"2021-10-26 12:48:34 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/kuzzleio/sdk-go/auth_test [github.com/kuzzleio/sdk-go/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/auth/checkToken_test.go:62:1","message":"ExampleKuzzle_CheckToken refers to unknown field or method: Kuzzle.CheckToken","source":"\nfunc ExampleKuzzle_CheckToken() {\n\tconn := websocket.NewWebSocket(\"localhost:7512\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/auth_test [github.com/kuzzleio/sdk-go/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/auth/createMyCredentials_test.go:86:1","message":"ExampleKuzzle_CreateMyCredentials refers to unknown field or method: Kuzzle.CreateMyCredentials","source":"\nfunc ExampleKuzzle_CreateMyCredentials() {\n\tconn := websocket.NewWebSocket(\"localhost:7512\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/auth_test [github.com/kuzzleio/sdk-go/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/auth/credentialsExist_test.go:71:1","message":"ExampleAdminExists refers to unknown identifier: AdminExists","source":"\nfunc ExampleAdminExists() {\n\tc := websocket.NewWebSocket(\"localhost\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/auth_test [github.com/kuzzleio/sdk-go/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/auth/deleteMyCredentials_test.go:79:1","message":"ExampleKuzzle_DeleteMyCredentials refers to unknown field or method: Kuzzle.DeleteMyCredentials","source":"\nfunc ExampleKuzzle_DeleteMyCredentials() {\n\tconn := websocket.NewWebSocket(\"localhost:7512\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/auth_test [github.com/kuzzleio/sdk-go/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/auth/getCurrentUser_test.go:66:1","message":"ExampleKuzzle_GetCurrentUser refers to unknown field or method: Kuzzle.GetCurrentUser","source":"\nfunc ExampleKuzzle_GetCurrentUser() {\n\tconn := websocket.NewWebSocket(\"localhost\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/auth_test [github.com/kuzzleio/sdk-go/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/auth/getMyCredentials_test.go:89:1","message":"ExampleKuzzle_GetMyCredentials refers to unknown field or method: Kuzzle.GetMyCredentials","source":"\nfunc ExampleKuzzle_GetMyCredentials() {\n\tconn := websocket.NewWebSocket(\"localhost\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/auth_test [github.com/kuzzleio/sdk-go/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/auth/getMyRights_test.go:90:1","message":"ExampleKuzzle_GetMyRights refers to unknown field or method: Kuzzle.GetMyRights","source":"\nfunc ExampleKuzzle_GetMyRights() {\n\tconn := websocket.NewWebSocket(\"localhost:7512\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/auth_test [github.com/kuzzleio/sdk-go/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/auth/getStrategies_test.go:65:1","message":"ExampleSecurity_GetStrategies refers to unknown identifier: Security","source":"\nfunc ExampleSecurity_GetStrategies() {\n\tc := websocket.NewWebSocket(\"localhost\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/auth_test [github.com/kuzzleio/sdk-go/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/auth/login_test.go:88:1","message":"ExampleKuzzle_Login refers to unknown field or method: Kuzzle.Login","source":"\nfunc ExampleKuzzle_Login() {\n\tconn := websocket.NewWebSocket(\"localhost:7512\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/auth_test [github.com/kuzzleio/sdk-go/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/auth/logout_test.go:64:1","message":"ExampleKuzzle_Logout refers to unknown field or method: Kuzzle.Logout","source":"\nfunc ExampleKuzzle_Logout() {\n\tconn := websocket.NewWebSocket(\"localhost:7512\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/auth_test [github.com/kuzzleio/sdk-go/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/auth/update_my_credentials_test.go:86:1","message":"ExampleKuzzle_UpdateMyCredentials refers to unknown field or method: Kuzzle.UpdateMyCredentials","source":"\nfunc ExampleKuzzle_UpdateMyCredentials() {\n\tconn := websocket.NewWebSocket(\"localhost:7512\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/auth_test [github.com/kuzzleio/sdk-go/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/auth/update_self_test.go:62:1","message":"ExampleKuzzle_UpdateSelf refers to unknown field or method: Kuzzle.UpdateSelf","source":"\nfunc ExampleKuzzle_UpdateSelf() {\n\tconn := websocket.NewWebSocket(\"localhost:7512\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/auth_test [github.com/kuzzleio/sdk-go/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/auth/validate_my_credentials_test.go:75:1","message":"ExampleKuzzle_ValidateMyCredentials refers to unknown field or method: Kuzzle.ValidateMyCredentials","source":"\nfunc ExampleKuzzle_ValidateMyCredentials() {\n\tconn := websocket.NewWebSocket(\"localhost:7512\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/ms_test [github.com/kuzzleio/sdk-go/ms.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/ms/georadius_test.go:211:1","message":"ExampleMs_GeoradiusWithCoord refers to unknown field or method: Ms.GeoradiusWithCoord","source":"\nfunc ExampleMs_GeoradiusWithCoord() {\n\tc := websocket.NewWebSocket(\"localhost:7512\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/ms_test [github.com/kuzzleio/sdk-go/ms.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/ms/georadius_test.go:304:1","message":"ExampleMs_GeoradiusWithDist refers to unknown field or method: Ms.GeoradiusWithDist","source":"\nfunc ExampleMs_GeoradiusWithDist() {\n\tc := websocket.NewWebSocket(\"localhost:7512\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/ms_test [github.com/kuzzleio/sdk-go/ms.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/ms/georadius_test.go:364:1","message":"ExampleMs_GeoradiusWithCoordAndDist refers to unknown field or method: Ms.GeoradiusWithCoordAndDist","source":"\nfunc ExampleMs_GeoradiusWithCoordAndDist() {\n\tc := websocket.NewWebSocket(\"localhost:7512\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/ms_test [github.com/kuzzleio/sdk-go/ms.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/ms/georadiusbymember_test.go:211:1","message":"ExampleMs_GeoradiusbymemberWithCoord refers to unknown field or method: Ms.GeoradiusbymemberWithCoord","source":"\nfunc ExampleMs_GeoradiusbymemberWithCoord() {\n\tc := websocket.NewWebSocket(\"localhost:7512\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/ms_test [github.com/kuzzleio/sdk-go/ms.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/ms/georadiusbymember_test.go:304:1","message":"ExampleMs_GeoradiusbymemberWithDist refers to unknown field or method: Ms.GeoradiusbymemberWithDist","source":"\nfunc ExampleMs_GeoradiusbymemberWithDist() {\n\tc := websocket.NewWebSocket(\"localhost:7512\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/ms_test [github.com/kuzzleio/sdk-go/ms.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/ms/georadiusbymember_test.go:364:1","message":"ExampleMs_GeoradiusbymemberWithCoordAndDist refers to unknown field or method: Ms.GeoradiusbymemberWithCoordAndDist","source":"\nfunc ExampleMs_GeoradiusbymemberWithCoordAndDist() {\n\tc := websocket.NewWebSocket(\"localhost:7512\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/ms_test [github.com/kuzzleio/sdk-go/ms.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/ms/randomkey_test.go:59:1","message":"ExampleMs_RandomKey refers to unknown field or method: Ms.RandomKey","source":"\nfunc ExampleMs_RandomKey() {\n\tc := websocket.NewWebSocket(\"localhost:7512\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/ms_test [github.com/kuzzleio/sdk-go/ms.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/ms/setex_test.go:62:1","message":"ExampleMs_SetEx refers to unknown field or method: Ms.SetEx","source":"\nfunc ExampleMs_SetEx() {\n\tc := websocket.NewWebSocket(\"localhost:7512\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/security_test [github.com/kuzzleio/sdk-go/security.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/security/getProfile_test.go:81:1","message":"ExampleGetProfile refers to unknown identifier: GetProfile","source":"\nfunc ExampleGetProfile() {\n\tid := \"profileId\""},{"package_id":"github.com/kuzzleio/sdk-go/security_test [github.com/kuzzleio/sdk-go/security.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/security/getRole_test.go:103:1","message":"ExampleSecurityRole_Fetch refers to unknown identifier: SecurityRole","source":"\nfunc ExampleSecurityRole_Fetch() {\n\tid := \"roleId\""},{"package_id":"github.com/kuzzleio/sdk-go/security_test [github.com/kuzzleio/sdk-go/security.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/security/getUser_test.go:96:1","message":"ExampleUser_Fetch refers to unknown field or method: User.Fetch","source":"\nfunc ExampleUser_Fetch() {\n\tid := \"userId\""},{"package_id":"github.com/kuzzleio/sdk-go/security_test [github.com/kuzzleio/sdk-go/security.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/security/mGetProfiles_test.go:93:1","message":"ExampleMGetProfiles refers to unknown identifier: MGetProfiles","source":"\nfunc ExampleMGetProfiles() {\n\tc := websocket.NewWebSocket(\"localhost:7512\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/security_test [github.com/kuzzleio/sdk-go/security.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/security/mGetRoles_test.go:92:1","message":"ExampleMGetRoles refers to unknown identifier: MGetRoles","source":"\nfunc ExampleMGetRoles() {\n\tc := websocket.NewWebSocket(\"localhost:7512\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/security_test [github.com/kuzzleio/sdk-go/security.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/security/searchProfiles_test.go:71:1","message":"ExampleSearchProfiles refers to unknown identifier: SearchProfiles","source":"\nfunc ExampleSearchProfiles() {\n\tc := websocket.NewWebSocket(\"localhost:7512\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/security_test [github.com/kuzzleio/sdk-go/security.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/security/searchRoles_test.go:65:1","message":"ExampleSecurityRole_Search refers to unknown identifier: SecurityRole","source":"\nfunc ExampleSecurityRole_Search() {\n\tc := websocket.NewWebSocket(\"localhost:7512\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/security_test [github.com/kuzzleio/sdk-go/security.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/security/searchUsers_test.go:141:1","message":"ExampleSearchUsers refers to unknown identifier: SearchUsers","source":"\nfunc ExampleSearchUsers() {\n\tc := websocket.NewWebSocket(\"localhost:7512\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/server_test [github.com/kuzzleio/sdk-go/server.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/server/adminExists_test.go:66:1","message":"ExampleAdminExists refers to unknown identifier: AdminExists","source":"\nfunc ExampleAdminExists() {\n\tc := websocket.NewWebSocket(\"localhost\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/server_test [github.com/kuzzleio/sdk-go/server.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/server/getAllStats_test.go:62:1","message":"ExampleKuzzle_GetAllStats refers to unknown field or method: Kuzzle.GetAllStats","source":"\nfunc ExampleKuzzle_GetAllStats() {\n\tconn := websocket.NewWebSocket(\"localhost\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/server_test [github.com/kuzzleio/sdk-go/server.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/server/getConfig_test.go:62:1","message":"ExampleGetConfig refers to unknown identifier: GetConfig","source":"\nfunc ExampleGetConfig() {\n\tc := websocket.NewWebSocket(\"localhost\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/server_test [github.com/kuzzleio/sdk-go/server.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/server/getLastStats_test.go:62:1","message":"ExampleKuzzle_GetLastStats refers to unknown field or method: Kuzzle.GetLastStats","source":"\nfunc ExampleKuzzle_GetLastStats() {\n\tconn := websocket.NewWebSocket(\"localhost\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/server_test [github.com/kuzzleio/sdk-go/server.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/server/getStats_test.go:63:1","message":"ExampleKuzzle_GetStats refers to unknown field or method: Kuzzle.GetStats","source":"\nfunc ExampleKuzzle_GetStats() {\n\tconn := websocket.NewWebSocket(\"localhost\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/server_test [github.com/kuzzleio/sdk-go/server.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/server/info_test.go:62:1","message":"ExampleInfo refers to unknown identifier: Info","source":"\nfunc ExampleInfo() {\n\tc := websocket.NewWebSocket(\"localhost\", nil)"},{"package_id":"github.com/kuzzleio/sdk-go/server_test [github.com/kuzzleio/sdk-go/server.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kuzzleio/sdk-go@v0.0.0-20211026124834-25659d3c6fbe/server/now_test.go:60:1","message":"ExampleKuzzle_Now refers to unknown field or method: Kuzzle.Now","source":"\nfunc ExampleKuzzle_Now() {\n\tconn := websocket.NewWebSocket(\"localhost:7512\", nil)"}]}
{"created_at":"2023-06-22 17:19:57.530126 UTC","module_path":"github.com/gogf/gf/v2","version":"v2.4.4","sort_version":"2,4,4~","commit_time":"2023-06-19 12:47:32 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/gogf/gf/v2/container/gring_test [github.com/gogf/gf/v2/container/gring.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/container/gring/gring_z_example_test.go:144:1","message":"ExampleRing_Link_Common has malformed example suffix: Common","source":"\nfunc ExampleRing_Link_Common() {\n\tr := gring.New(10)"},{"package_id":"github.com/gogf/gf/v2/container/gring_test [github.com/gogf/gf/v2/container/gring.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/container/gring/gring_z_example_test.go:170:1","message":"ExampleRing_Link_SameRing has malformed example suffix: SameRing","source":"\nfunc ExampleRing_Link_SameRing() {\n\tr := gring.New(10)"},{"package_id":"github.com/gogf/gf/v2/container/gset_test [github.com/gogf/gf/v2/container/gset.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/container/gset/gset_z_example_any_test.go:156:1","message":"ExampleSet_ContainsI refers to unknown field or method: Set.ContainsI","source":"\nfunc ExampleSet_ContainsI() {\n\tvar set gset.StrSet"},{"package_id":"github.com/gogf/gf/v2/container/gtree_test [github.com/gogf/gf/v2/container/gtree.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/container/gtree/gtree_z_example_avltree_test.go:635:1","message":"ExampleAVLTree_IteratorAscFrom_Normal has malformed example suffix: Normal","source":"\nfunc ExampleAVLTree_IteratorAscFrom_Normal() {\n\tm := make(map[interface{}]interface{})"},{"package_id":"github.com/gogf/gf/v2/container/gtree_test [github.com/gogf/gf/v2/container/gtree.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/container/gtree/gtree_z_example_avltree_test.go:655:1","message":"ExampleAVLTree_IteratorAscFrom_NoExistKey has malformed example suffix: NoExistKey","source":"\nfunc ExampleAVLTree_IteratorAscFrom_NoExistKey() {\n\tm := make(map[interface{}]interface{})"},{"package_id":"github.com/gogf/gf/v2/container/gtree_test [github.com/gogf/gf/v2/container/gtree.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/container/gtree/gtree_z_example_avltree_test.go:670:1","message":"ExampleAVLTree_IteratorAscFrom_NoExistKeyAndMatchFalse has malformed example suffix: NoExistKeyAndMatchFalse","source":"\nfunc ExampleAVLTree_IteratorAscFrom_NoExistKeyAndMatchFalse() {\n\tm := make(map[interface{}]interface{})"},{"package_id":"github.com/gogf/gf/v2/container/gtree_test [github.com/gogf/gf/v2/container/gtree.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/container/gtree/gtree_z_example_btree_test.go:561:1","message":"ExampleBTree_IteratorAscFrom_Normal has malformed example suffix: Normal","source":"\nfunc ExampleBTree_IteratorAscFrom_Normal() {\n\tm := make(map[interface{}]interface{})"},{"package_id":"github.com/gogf/gf/v2/container/gtree_test [github.com/gogf/gf/v2/container/gtree.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/container/gtree/gtree_z_example_btree_test.go:581:1","message":"ExampleBTree_IteratorAscFrom_NoExistKey has malformed example suffix: NoExistKey","source":"\nfunc ExampleBTree_IteratorAscFrom_NoExistKey() {\n\tm := make(map[interface{}]interface{})"},{"package_id":"github.com/gogf/gf/v2/container/gtree_test [github.com/gogf/gf/v2/container/gtree.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/container/gtree/gtree_z_example_btree_test.go:596:1","message":"ExampleBTree_IteratorAscFrom_NoExistKeyAndMatchFalse has malformed example suffix: NoExistKeyAndMatchFalse","source":"\nfunc ExampleBTree_IteratorAscFrom_NoExistKeyAndMatchFalse() {\n\tm := make(map[interface{}]interface{})"},{"package_id":"github.com/gogf/gf/v2/container/gtree_test [github.com/gogf/gf/v2/container/gtree.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/container/gtree/gtree_z_example_redblacktree_test.go:547:1","message":"ExampleRedBlackTree_IteratorAscFrom_Normal has malformed example suffix: Normal","source":"\nfunc ExampleRedBlackTree_IteratorAscFrom_Normal() {\n\tm := make(map[interface{}]interface{})"},{"package_id":"github.com/gogf/gf/v2/container/gtree_test [github.com/gogf/gf/v2/container/gtree.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/container/gtree/gtree_z_example_redblacktree_test.go:567:1","message":"ExampleRedBlackTree_IteratorAscFrom_NoExistKey has malformed example suffix: NoExistKey","source":"\nfunc ExampleRedBlackTree_IteratorAscFrom_NoExistKey() {\n\tm := make(map[interface{}]interface{})"},{"package_id":"github.com/gogf/gf/v2/container/gtree_test [github.com/gogf/gf/v2/container/gtree.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/container/gtree/gtree_z_example_redblacktree_test.go:582:1","message":"ExampleRedBlackTree_IteratorAscFrom_NoExistKeyAndMatchFalse has malformed example suffix: NoExistKeyAndMatchFalse","source":"\nfunc ExampleRedBlackTree_IteratorAscFrom_NoExistKeyAndMatchFalse() {\n\tm := make(map[interface{}]interface{})"},{"package_id":"github.com/gogf/gf/v2/container/gvar_test [github.com/gogf/gf/v2/container/gvar.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/container/gvar/gvar_z_example_test.go:18:1","message":"ExampleVarNew refers to unknown identifier: VarNew","source":"// New\nfunc ExampleVarNew() {\n\tv := gvar.New(400)"},{"package_id":"github.com/gogf/gf/v2/database/gdb_test [github.com/gogf/gf/v2/database/gdb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/database/gdb/gdb_z_example_test.go:16:1","message":"ExampleTransaction refers to unknown identifier: Transaction","source":"\nfunc ExampleTransaction() {\n\tg.DB().Transaction(context.TODO(), func(ctx context.Context, tx gdb.TX) error {"},{"package_id":"github.com/gogf/gf/v2/encoding/gjson_test [github.com/gogf/gf/v2/encoding/gjson.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/encoding/gjson/gjson_z_example_conversion_test.go:15:1","message":"ExampleConversionNormalFormats refers to unknown identifier: ConversionNormalFormats","source":"\nfunc ExampleConversionNormalFormats() {\n\tdata :="},{"package_id":"github.com/gogf/gf/v2/encoding/gjson_test [github.com/gogf/gf/v2/encoding/gjson.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/encoding/gjson/gjson_z_example_conversion_test.go:64:1","message":"ExampleJson_ConversionGetStruct refers to unknown field or method: Json.ConversionGetStruct","source":"\nfunc ExampleJson_ConversionGetStruct() {\n\tdata :="},{"package_id":"github.com/gogf/gf/v2/encoding/gjson_test [github.com/gogf/gf/v2/encoding/gjson.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/encoding/gjson/gjson_z_example_conversion_test.go:90:1","message":"ExampleJson_ConversionToStruct refers to unknown field or method: Json.ConversionToStruct","source":"\nfunc ExampleJson_ConversionToStruct() {\n\tdata :="},{"package_id":"github.com/gogf/gf/v2/encoding/gjson_test [github.com/gogf/gf/v2/encoding/gjson.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/encoding/gjson/gjson_z_example_dataset_test.go:15:1","message":"ExampleJson_Set_DataSetCreate1 has malformed example suffix: DataSetCreate1","source":"\nfunc ExampleJson_Set_DataSetCreate1() {\n\tj := gjson.New(nil)"},{"package_id":"github.com/gogf/gf/v2/encoding/gjson_test [github.com/gogf/gf/v2/encoding/gjson.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/encoding/gjson/gjson_z_example_dataset_test.go:31:1","message":"ExampleJson_Set_DataSetCreate2 has malformed example suffix: DataSetCreate2","source":"\nfunc ExampleJson_Set_DataSetCreate2() {\n\tj := gjson.New(nil)"},{"package_id":"github.com/gogf/gf/v2/encoding/gjson_test [github.com/gogf/gf/v2/encoding/gjson.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/encoding/gjson/gjson_z_example_dataset_test.go:43:1","message":"ExampleJson_DataSetRuntimeEdit refers to unknown field or method: Json.DataSetRuntimeEdit","source":"\nfunc ExampleJson_DataSetRuntimeEdit() {\n\tdata :="},{"package_id":"github.com/gogf/gf/v2/encoding/gjson_test [github.com/gogf/gf/v2/encoding/gjson.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/encoding/gjson/gjson_z_example_load_test.go:115:1","message":"ExampleLoadContent_UTF8BOM refers to unknown field or method: LoadContent.UTF8BOM","source":"\nfunc ExampleLoadContent_UTF8BOM() {\n\tjsonContent := `{\"name\":\"john\", \"score\":\"100\"}`"},{"package_id":"github.com/gogf/gf/v2/encoding/gjson_test [github.com/gogf/gf/v2/encoding/gjson.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/encoding/gjson/gjson_z_example_load_test.go:134:1","message":"ExampleLoadContent_Xml refers to unknown field or method: LoadContent.Xml","source":"\nfunc ExampleLoadContent_Xml() {\n\txmlContent := `\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e"},{"package_id":"github.com/gogf/gf/v2/encoding/gjson_test [github.com/gogf/gf/v2/encoding/gjson.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/encoding/gjson/gjson_z_example_load_test.go:199:1","message":"ExampleLoad_Xml refers to unknown field or method: Load.Xml","source":"\nfunc ExampleLoad_Xml() {\n\tjsonFilePath := gtest.DataPath(\"xml\", \"data1.xml\")"},{"package_id":"github.com/gogf/gf/v2/encoding/gjson_test [github.com/gogf/gf/v2/encoding/gjson.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/encoding/gjson/gjson_z_example_load_test.go:206:1","message":"ExampleLoad_Properties refers to unknown field or method: Load.Properties","source":"\nfunc ExampleLoad_Properties() {\n\tjsonFilePath := gtest.DataPath(\"properties\", \"data1.properties\")"},{"package_id":"github.com/gogf/gf/v2/encoding/gjson_test [github.com/gogf/gf/v2/encoding/gjson.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/encoding/gjson/gjson_z_example_new_test.go:73:1","message":"ExampleNewWithOptions_UTF8BOM refers to unknown field or method: NewWithOptions.UTF8BOM","source":"\nfunc ExampleNewWithOptions_UTF8BOM() {\n\tjsonContent := `{\"name\":\"john\", \"score\":\"100\"}`"},{"package_id":"github.com/gogf/gf/v2/encoding/gjson_test [github.com/gogf/gf/v2/encoding/gjson.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/encoding/gjson/gjson_z_example_new_test.go:93:1","message":"ExampleNew_Xml refers to unknown field or method: New.Xml","source":"\nfunc ExampleNew_Xml() {\n\tjsonContent := `\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003cdoc\u003e\u003cname\u003ejohn\u003c/name\u003e\u003cscore\u003e100\u003c/score\u003e\u003c/doc\u003e`"},{"package_id":"github.com/gogf/gf/v2/encoding/gjson_test [github.com/gogf/gf/v2/encoding/gjson.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/encoding/gjson/gjson_z_example_new_test.go:104:1","message":"ExampleNew_Struct refers to unknown field or method: New.Struct","source":"\nfunc ExampleNew_Struct() {\n\ttype Me struct {"},{"package_id":"github.com/gogf/gf/v2/encoding/gjson_test [github.com/gogf/gf/v2/encoding/gjson.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/encoding/gjson/gjson_z_example_pattern_test.go:15:1","message":"ExampleDecodeToJson_PatternGet refers to unknown field or method: DecodeToJson.PatternGet","source":"\nfunc ExampleDecodeToJson_PatternGet() {\n\tdata :="},{"package_id":"github.com/gogf/gf/v2/encoding/gjson_test [github.com/gogf/gf/v2/encoding/gjson.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/encoding/gjson/gjson_z_example_pattern_test.go:35:1","message":"ExampleDecodeToJson_PatternViolenceCheck refers to unknown field or method: DecodeToJson.PatternViolenceCheck","source":"\nfunc ExampleDecodeToJson_PatternViolenceCheck() {\n\tdata :="},{"package_id":"github.com/gogf/gf/v2/encoding/gjson_test [github.com/gogf/gf/v2/encoding/gjson.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/encoding/gjson/gjson_z_example_pattern_test.go:53:1","message":"ExampleJson_Get_MapSliceChange has malformed example suffix: MapSliceChange","source":"\nfunc ExampleJson_Get_MapSliceChange() {\n\tjsonContent := `{\"map\":{\"key\":\"value\"}, \"slice\":[59,90]}`"},{"package_id":"github.com/gogf/gf/v2/encoding/gjson_test [github.com/gogf/gf/v2/encoding/gjson.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/encoding/gjson/gjson_z_example_test.go:749:1","message":"ExampleJson_UnmarshalValue_Yaml has malformed example suffix: Yaml","source":"\nfunc ExampleJson_UnmarshalValue_Yaml() {\n\tyamlContent :="},{"package_id":"github.com/gogf/gf/v2/encoding/gjson_test [github.com/gogf/gf/v2/encoding/gjson.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/encoding/gjson/gjson_z_example_test.go:763:1","message":"ExampleJson_UnmarshalValue_Xml has malformed example suffix: Xml","source":"\nfunc ExampleJson_UnmarshalValue_Xml() {\n\txmlStr := `\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003cdoc\u003e\u003cname\u003ejohn\u003c/name\u003e\u003cscore\u003e100\u003c/score\u003e\u003c/doc\u003e`"},{"package_id":"github.com/gogf/gf/v2/net/gclient_test [github.com/gogf/gf/v2/net/gclient.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/net/gclient/gclient_z_example_test.go:185:1","message":"ExampleNew_MultiConn_Recommend refers to unknown field or method: New.MultiConn","source":"\nfunc ExampleNew_MultiConn_Recommend() {\n\tvar ("},{"package_id":"github.com/gogf/gf/v2/net/gclient_test [github.com/gogf/gf/v2/net/gclient.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/net/gclient/gclient_z_example_test.go:185:1","message":"ExampleNew_MultiConn_Recommend has malformed example suffix: Recommend","source":"\nfunc ExampleNew_MultiConn_Recommend() {\n\tvar ("},{"package_id":"github.com/gogf/gf/v2/net/gclient_test [github.com/gogf/gf/v2/net/gclient.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/net/gclient/gclient_z_example_test.go:887:1","message":"ExampleClient_RawRequest refers to unknown field or method: Client.RawRequest","source":"\nfunc ExampleClient_RawRequest() {\n\turl := \"http://127.0.0.1:8999\""},{"package_id":"github.com/gogf/gf/v2/os/gcmd_test [github.com/gogf/gf/v2/os/gcmd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/os/gcmd/gcmd_z_example_test.go:58:1","message":"ExampleGetOpt_Def refers to unknown field or method: GetOpt.Def","source":"\nfunc ExampleGetOpt_Def() {\n\tgcmd.Init(\"gf\", \"build\", \"main.go\", \"-o=gf.exe\", \"-y\")"},{"package_id":"github.com/gogf/gf/v2/os/gcmd_test [github.com/gogf/gf/v2/os/gcmd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/os/gcmd/gcmd_z_example_test.go:149:1","message":"ExampleCommand_AddCommand_Repeat has malformed example suffix: Repeat","source":"\nfunc ExampleCommand_AddCommand_Repeat() {\n\tcommandRoot := \u0026gcmd.Command{"},{"package_id":"github.com/gogf/gf/v2/os/gcmd_test [github.com/gogf/gf/v2/os/gcmd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/os/gcmd/gcmd_z_example_test.go:186:1","message":"ExampleCommand_AddObject_Error has malformed example suffix: Error","source":"\nfunc ExampleCommand_AddObject_Error() {\n\tvar ("},{"package_id":"github.com/gogf/gf/v2/os/gcron_test [github.com/gogf/gf/v2/os/gcron.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/os/gcron/gcron_z_example_1_test.go:17:1","message":"ExampleCronAddSingleton refers to unknown identifier: CronAddSingleton","source":"\nfunc ExampleCronAddSingleton() {\n\tgcron.AddSingleton(ctx, \"* * * * * *\", func(ctx context.Context) {"},{"package_id":"github.com/gogf/gf/v2/os/gtime_test [github.com/gogf/gf/v2/os/gtime.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/os/gtime/gtime_z_example_time_test.go:18:1","message":"ExampleNew_Basic refers to unknown field or method: New.Basic","source":"\nfunc ExampleNew_Basic() {\n\tcurTime := \"2018-08-08 08:08:08\""},{"package_id":"github.com/gogf/gf/v2/os/gtime_test [github.com/gogf/gf/v2/os/gtime.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/os/gtime/gtime_z_example_time_test.go:41:1","message":"ExampleNew_WithFormat refers to unknown field or method: New.WithFormat","source":"\nfunc ExampleNew_WithFormat() {\n\tfmt.Println(gtime.New(\"20220629133225\", \"YmdHis\").Format(\"Y-m-d H:i:s\"))"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:17:1","message":"ExampleRule_Required refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Required() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:36:1","message":"ExampleRule_RequiredIf refers to unknown identifier: Rule","source":"\nfunc ExampleRule_RequiredIf() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:60:1","message":"ExampleRule_RequiredUnless refers to unknown identifier: Rule","source":"\nfunc ExampleRule_RequiredUnless() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:84:1","message":"ExampleRule_RequiredWith refers to unknown identifier: Rule","source":"\nfunc ExampleRule_RequiredWith() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:109:1","message":"ExampleRule_RequiredWithAll refers to unknown identifier: Rule","source":"\nfunc ExampleRule_RequiredWithAll() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:134:1","message":"ExampleRule_RequiredWithout refers to unknown identifier: Rule","source":"\nfunc ExampleRule_RequiredWithout() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:158:1","message":"ExampleRule_RequiredWithoutAll refers to unknown identifier: Rule","source":"\nfunc ExampleRule_RequiredWithoutAll() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:181:1","message":"ExampleRule_Bail refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Bail() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:205:1","message":"ExampleRule_CaseInsensitive refers to unknown identifier: Rule","source":"\nfunc ExampleRule_CaseInsensitive() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:226:1","message":"ExampleRule_Date refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Date() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:255:1","message":"ExampleRule_Datetime refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Datetime() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:282:1","message":"ExampleRule_DateFormat refers to unknown identifier: Rule","source":"\nfunc ExampleRule_DateFormat() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:308:1","message":"ExampleRule_Email refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Email() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:334:1","message":"ExampleRule_Phone refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Phone() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:361:1","message":"ExampleRule_PhoneLoose refers to unknown identifier: Rule","source":"\nfunc ExampleRule_PhoneLoose() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:387:1","message":"ExampleRule_Telephone refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Telephone() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:413:1","message":"ExampleRule_Passport refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Passport() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:440:1","message":"ExampleRule_Password refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Password() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:461:1","message":"ExampleRule_Password2 refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Password2() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:488:1","message":"ExampleRule_Password3 refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Password3() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:512:1","message":"ExampleRule_Postcode refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Postcode() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:536:1","message":"ExampleRule_ResidentId refers to unknown identifier: Rule","source":"\nfunc ExampleRule_ResidentId() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:555:1","message":"ExampleRule_BankCard refers to unknown identifier: Rule","source":"\nfunc ExampleRule_BankCard() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:574:1","message":"ExampleRule_QQ refers to unknown identifier: Rule","source":"\nfunc ExampleRule_QQ() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:598:1","message":"ExampleRule_IP refers to unknown identifier: Rule","source":"\nfunc ExampleRule_IP() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:624:1","message":"ExampleRule_IPV4 refers to unknown identifier: Rule","source":"\nfunc ExampleRule_IPV4() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:645:1","message":"ExampleRule_IPV6 refers to unknown identifier: Rule","source":"\nfunc ExampleRule_IPV6() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:666:1","message":"ExampleRule_Mac refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Mac() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:687:1","message":"ExampleRule_Url refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Url() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:710:1","message":"ExampleRule_Domain refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Domain() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:736:1","message":"ExampleRule_Size refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Size() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:757:1","message":"ExampleRule_Length refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Length() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:778:1","message":"ExampleRule_MinLength refers to unknown identifier: Rule","source":"\nfunc ExampleRule_MinLength() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:799:1","message":"ExampleRule_MaxLength refers to unknown identifier: Rule","source":"\nfunc ExampleRule_MaxLength() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:820:1","message":"ExampleRule_Between refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Between() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:846:1","message":"ExampleRule_Min refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Min() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:872:1","message":"ExampleRule_Max refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Max() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:898:1","message":"ExampleRule_Json refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Json() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:919:1","message":"ExampleRule_Integer refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Integer() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:943:1","message":"ExampleRule_Float refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Float() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:966:1","message":"ExampleRule_Boolean refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Boolean() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:996:1","message":"ExampleRule_Same refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Same() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:1018:1","message":"ExampleRule_Different refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Different() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:1040:1","message":"ExampleRule_In refers to unknown identifier: Rule","source":"\nfunc ExampleRule_In() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:1062:1","message":"ExampleRule_NotIn refers to unknown identifier: Rule","source":"\nfunc ExampleRule_NotIn() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:1084:1","message":"ExampleRule_Regex refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Regex() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:1107:1","message":"ExampleRule_NotRegex refers to unknown identifier: Rule","source":"\nfunc ExampleRule_NotRegex() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:1127:1","message":"ExampleRule_After refers to unknown identifier: Rule","source":"\nfunc ExampleRule_After() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:1149:1","message":"ExampleRule_AfterEqual refers to unknown identifier: Rule","source":"\nfunc ExampleRule_AfterEqual() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:1171:1","message":"ExampleRule_Before refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Before() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:1193:1","message":"ExampleRule_BeforeEqual refers to unknown identifier: Rule","source":"\nfunc ExampleRule_BeforeEqual() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:1215:1","message":"ExampleRule_Array refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Array() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:1239:1","message":"ExampleRule_EQ refers to unknown identifier: Rule","source":"\nfunc ExampleRule_EQ() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:1261:1","message":"ExampleRule_NotEQ refers to unknown identifier: Rule","source":"\nfunc ExampleRule_NotEQ() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:1283:1","message":"ExampleRule_GT refers to unknown identifier: Rule","source":"\nfunc ExampleRule_GT() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:1305:1","message":"ExampleRule_GTE refers to unknown identifier: Rule","source":"\nfunc ExampleRule_GTE() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:1327:1","message":"ExampleRule_LT refers to unknown identifier: Rule","source":"\nfunc ExampleRule_LT() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:1349:1","message":"ExampleRule_LTE refers to unknown identifier: Rule","source":"\nfunc ExampleRule_LTE() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_feature_rule_test.go:1371:1","message":"ExampleRule_Foreach refers to unknown identifier: Rule","source":"\nfunc ExampleRule_Foreach() {\n\ttype BizReq struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_test.go:193:1","message":"ExampleValidator_Data_Value has malformed example suffix: Value","source":"\nfunc ExampleValidator_Data_Value() {\n\terr := g.Validator().Rules(\"min:18\")."},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_test.go:203:1","message":"ExampleValidator_Data_Map1 has malformed example suffix: Map1","source":"\nfunc ExampleValidator_Data_Map1() {\n\tparams := map[string]interface{}{"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_test.go:225:1","message":"ExampleValidator_Data_Map2 has malformed example suffix: Map2","source":"\nfunc ExampleValidator_Data_Map2() {\n\tparams := map[string]interface{}{"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_test.go:247:1","message":"ExampleValidator_Data_Map3 has malformed example suffix: Map3","source":"\nfunc ExampleValidator_Data_Map3() {\n\tparams := map[string]interface{}{"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_test.go:286:1","message":"ExampleValidator_Data_Struct1 has malformed example suffix: Struct1","source":"// Empty string attribute.\nfunc ExampleValidator_Data_Struct1() {\n\ttype Params struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_test.go:303:1","message":"ExampleValidator_Data_Struct2 has malformed example suffix: Struct2","source":"// Empty pointer attribute.\nfunc ExampleValidator_Data_Struct2() {\n\ttype Params struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_test.go:320:1","message":"ExampleValidator_Data_Struct3 has malformed example suffix: Struct3","source":"// Empty integer attribute.\nfunc ExampleValidator_Data_Struct3() {\n\ttype Params struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_test.go:336:1","message":"ExampleValidator_Data_Struct4 has malformed example suffix: Struct4","source":"\nfunc ExampleValidator_Data_Struct4() {\n\ttype User struct {"},{"package_id":"github.com/gogf/gf/v2/util/gvalid_test [github.com/gogf/gf/v2/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf/v2@v2.4.4/util/gvalid/gvalid_z_example_test.go:494:1","message":"ExampleValidator_RegisterRule refers to unknown field or method: Validator.RegisterRule","source":"\nfunc ExampleValidator_RegisterRule() {\n\ttype User struct {"}]}
{"created_at":"2023-06-22 18:00:36.235801 UTC","module_path":"github.com/gotemplates/host","version":"v0.0.0-20230319151318-0c24a9a4937b","sort_version":"0,0,0,~20230319151318-0c24a9a4937b","commit_time":"2023-03-19 15:13:18 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/gotemplates/host/accessdata [github.com/gotemplates/host/accessdata.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/accessdata/entry_test.go:24:1","message":"Example_Value_Controller has malformed example suffix: Value_Controller","source":"\nfunc Example_Value_Controller() {\n\tname := \"test-route\""},{"package_id":"github.com/gotemplates/host/accessdata [github.com/gotemplates/host/accessdata.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/accessdata/entry_test.go:49:1","message":"Example_Value_Request has malformed example suffix: Value_Request","source":"\nfunc Example_Value_Request() {\n\top := RequestMethodOperator"},{"package_id":"github.com/gotemplates/host/accessdata [github.com/gotemplates/host/accessdata.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/accessdata/entry_test.go:71:1","message":"Example_Value_Response has malformed example suffix: Value_Response","source":"\nfunc Example_Value_Response() {\n\top := ResponseStatusCodeOperator"},{"package_id":"github.com/gotemplates/host/accessdata [github.com/gotemplates/host/accessdata.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/accessdata/entry_test.go:87:1","message":"Example_Value_Request_Header has malformed example suffix: Value_Request_Header","source":"\nfunc Example_Value_Request_Header() {\n\treq, _ := http.NewRequest(\"\", \"www.google.com\", nil)"},{"package_id":"github.com/gotemplates/host/accessdata [github.com/gotemplates/host/accessdata.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/accessdata/entry_test.go:98:1","message":"Example_EgressEntry has malformed example suffix: EgressEntry","source":"\nfunc Example_EgressEntry() {\n\tvar start time.Time"},{"package_id":"github.com/gotemplates/host/accessdata [github.com/gotemplates/host/accessdata.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/accessdata/init_test.go:78:1","message":"Example_CreateOperators has malformed example suffix: CreateOperators","source":"\nfunc Example_CreateOperators() {\n\tvar items []Operator"},{"package_id":"github.com/gotemplates/host/accessdata [github.com/gotemplates/host/accessdata.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/accessdata/init_test.go:92:1","message":"Example_InitOperators has malformed example suffix: InitOperators","source":"\nfunc Example_InitOperators() {\n\tvar items []Operator"},{"package_id":"github.com/gotemplates/host/accessdata [github.com/gotemplates/host/accessdata.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/accessdata/operator_test.go:7:1","message":"Example_IsDirectOperator has malformed example suffix: IsDirectOperator","source":"\nfunc Example_IsDirectOperator() {\n\top := Operator{Name: \"test\", Value: \"   %\"}"},{"package_id":"github.com/gotemplates/host/accessdata [github.com/gotemplates/host/accessdata.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/accessdata/operator_test.go:19:1","message":"Example_IsRequestOperator has malformed example suffix: IsRequestOperator","source":"\nfunc Example_IsRequestOperator() {\n\top := Operator{}"},{"package_id":"github.com/gotemplates/host/accessdata [github.com/gotemplates/host/accessdata.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/accessdata/operator_test.go:64:1","message":"Example_RequestOperatorHeaderName has malformed example suffix: RequestOperatorHeaderName","source":"\nfunc Example_RequestOperatorHeaderName() {\n\top := Operator{}"},{"package_id":"github.com/gotemplates/host/accessdata [github.com/gotemplates/host/accessdata.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/accessdata/operator_test.go:99:1","message":"Example_IsStringValue has malformed example suffix: IsStringValue","source":"\nfunc Example_IsStringValue() {\n\top := Operator{Name: \"test\", Value: \"   %\"}"},{"package_id":"github.com/gotemplates/host/accessdata [github.com/gotemplates/host/accessdata.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/accessdata/writer_test.go:8:1","message":"Example_WriteJson has malformed example suffix: WriteJson","source":"\nfunc Example_WriteJson() {\n\tsb := strings.Builder{}"},{"package_id":"github.com/gotemplates/host/accesslog [github.com/gotemplates/host/accesslog.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/accesslog/write_test.go:11:1","message":"ExampleLog_Error refers to unknown identifier: Log","source":"\nfunc ExampleLog_Error() {\n\tstart := time.Now()"},{"package_id":"github.com/gotemplates/host/accesslog [github.com/gotemplates/host/accesslog.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/accesslog/write_test.go:71:1","message":"ExampleLog_Timeout refers to unknown identifier: Log","source":"*/\nfunc ExampleLog_Timeout() {\n\tstart := time.Now()"},{"package_id":"github.com/gotemplates/host/accesslog [github.com/gotemplates/host/accesslog.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/accesslog/write_test.go:88:1","message":"ExampleLog_RateLimiter_500 refers to unknown identifier: Log","source":"\nfunc ExampleLog_RateLimiter_500() {\n\tstart := time.Now()"},{"package_id":"github.com/gotemplates/host/accesslog [github.com/gotemplates/host/accesslog.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/accesslog/write_test.go:105:1","message":"ExampleLog_Failover refers to unknown identifier: Log","source":"\nfunc ExampleLog_Failover() {\n\tstart := time.Now()"},{"package_id":"github.com/gotemplates/host/accesslog [github.com/gotemplates/host/accesslog.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/accesslog/write_test.go:122:1","message":"ExampleLog_Retry refers to unknown identifier: Log","source":"\nfunc ExampleLog_Retry() {\n\tstart := time.Now()"},{"package_id":"github.com/gotemplates/host/accesslog [github.com/gotemplates/host/accesslog.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/accesslog/write_test.go:140:1","message":"ExampleLog_Request refers to unknown identifier: Log","source":"\nfunc ExampleLog_Request() {\n\treq, _ := http.NewRequest(\"\", \"www.google.com/search/documents\", nil)"},{"package_id":"github.com/gotemplates/host/accesslog [github.com/gotemplates/host/accesslog.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/accesslog/write_test.go:160:1","message":"ExampleLog_Response refers to unknown identifier: Log","source":"\nfunc ExampleLog_Response() {\n\tresp := \u0026http.Response{StatusCode: 404, ContentLength: 1234}"},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/apply_test.go:65:1","message":"ExampleEgressApply_RateLimit refers to unknown field or method: EgressApply.RateLimit","source":"\nfunc ExampleEgressApply_RateLimit() {\n\tname := \"rate-limit-route\""},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/apply_test.go:82:1","message":"ExampleEgressApply_Timeout refers to unknown field or method: EgressApply.Timeout","source":"\nfunc ExampleEgressApply_Timeout() {\n\tname := \"timeout-route\""},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/controller_test.go:58:1","message":"ExampleController_newController_Error has malformed example suffix: Error","source":"\nfunc ExampleController_newController_Error() {\n\tt := newTable(false, false)"},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/failover_test.go:41:1","message":"Example_Failover_Status has malformed example suffix: Failover_Status","source":"\nfunc Example_Failover_Status() {\n\tprevEnabled := false"},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/failover_test.go:82:1","message":"Example_Failover_Invoke has malformed example suffix: Failover_Invoke","source":"\nfunc Example_Failover_Invoke() {\n\tname := \"failover-test\""},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/fmt_test.go:5:1","message":"Example_ParseState has malformed example suffix: ParseState","source":"\nfunc Example_ParseState() {\n\ts := \"  timeout : 35, statusCode : 504 \""},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/fmt_test.go:15:1","message":"Example_ExtractState has malformed example suffix: ExtractState","source":"\nfunc Example_ExtractState() {\n\tname := \"invalid\""},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/proxy_test.go:57:1","message":"Example_Proxy_State has malformed example suffix: Proxy_State","source":"\nfunc Example_Proxy_State() {\n\tt := newTable(true, false)"},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/proxy_test.go:74:1","message":"Example_Proxy_SetPattern has malformed example suffix: Proxy_SetPattern","source":"\nfunc Example_Proxy_SetPattern() {\n\tname := \"test-route\""},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/proxy_test.go:99:1","message":"Example_Proxy_Enable has malformed example suffix: Proxy_Enable","source":"\nfunc Example_Proxy_Enable() {\n\tname := \"test-route\""},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/ratelimiter_test.go:59:1","message":"Example_RateLimiter_Set has malformed example suffix: RateLimiter_Set","source":"\nfunc Example_RateLimiter_Set() {\n\tname := \"test-route\""},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/ratelimiter_test.go:85:1","message":"Example_RateLimiter_Adjust has malformed example suffix: RateLimiter_Adjust","source":"\nfunc Example_RateLimiter_Adjust() {\n\tname := \"test-route\""},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/retry_test.go:38:1","message":"Example_Status has malformed example suffix: Status","source":"\nfunc Example_Status() {\n\tname := \"test-route\""},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/retry_test.go:67:1","message":"Example_IsRetryable_Disabled has malformed example suffix: IsRetryable_Disabled","source":"\nfunc Example_IsRetryable_Disabled() {\n\tname := \"test-route\""},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/retry_test.go:94:1","message":"Example_IsRetryable_StatusCode has malformed example suffix: IsRetryable_StatusCode","source":"\nfunc Example_IsRetryable_StatusCode() {\n\tname := \"test-route\""},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/retry_test.go:133:1","message":"Example_IsRetryable_RateLimit has malformed example suffix: IsRetryable_RateLimit","source":"\nfunc Example_IsRetryable_RateLimit() {\n\tname := \"test-route\""},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/route_test.go:50:1","message":"ExampleConfig_Marshal refers to unknown identifier: Config","source":"\nfunc ExampleConfig_Marshal() {\n\tconfig := Route{Name: \"test-route\", Pattern: \"google.com\", Traffic: IngressTraffic, Protocol: \"HTTP11\", Ping: true,"},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/table_test.go:9:1","message":"ExampleTable_SetDefaultController_Egress has malformed example suffix: Egress","source":"\nfunc ExampleTable_SetDefaultController_Egress() {\n\tt := newTable(true, false)"},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/table_test.go:29:1","message":"ExampleTable_SetDefaultController_Ingress has malformed example suffix: Ingress","source":"\nfunc ExampleTable_SetDefaultController_Ingress() {\n\tt := newTable(false, false)"},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/table_test.go:49:1","message":"ExampleTable_SetHostController_Egress has malformed example suffix: Egress","source":"\nfunc ExampleTable_SetHostController_Egress() {\n\tt := newTable(true, false)"},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/table_test.go:65:1","message":"ExampleTable_SetHostController_Ingress has malformed example suffix: Ingress","source":"\nfunc ExampleTable_SetHostController_Ingress() {\n\tt := newTable(false, false)"},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/table_test.go:83:1","message":"ExampleTable_Add_Exists_LookupByName refers to unknown field or method: Table.Add","source":"\nfunc ExampleTable_Add_Exists_LookupByName() {\n\tname := \"test-route\""},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/table_test.go:83:1","message":"ExampleTable_Add_Exists_LookupByName has malformed example suffix: Exists_LookupByName","source":"\nfunc ExampleTable_Add_Exists_LookupByName() {\n\tname := \"test-route\""},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/table_test.go:171:1","message":"ExampleTable_Lookup_Name_Default refers to unknown field or method: Table.Lookup","source":"\nfunc ExampleTable_Lookup_Name_Default() {\n\t//name := \"test-route\""},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/table_test.go:171:1","message":"ExampleTable_Lookup_Name_Default has malformed example suffix: Name_Default","source":"\nfunc ExampleTable_Lookup_Name_Default() {\n\t//name := \"test-route\""},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/table_test.go:189:1","message":"ExampleTable_Add_Ingress refers to unknown field or method: Table.Add","source":"\nfunc ExampleTable_Add_Ingress() {\n\tt := newTable(false, false)"},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/table_test.go:189:1","message":"ExampleTable_Add_Ingress has malformed example suffix: Ingress","source":"\nfunc ExampleTable_Add_Ingress() {\n\tt := newTable(false, false)"},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/timeout_test.go:26:1","message":"Example_Timeout_State has malformed example suffix: Timeout_State","source":"\nfunc Example_Timeout_State() {\n\tt := newTimeout(\"test-route\", newTable(true, false), NewTimeoutConfig(time.Millisecond*2000, 0))"},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/timeout_test.go:48:1","message":"Example_Timeout_SetTimeout has malformed example suffix: Timeout_SetTimeout","source":"\nfunc Example_Timeout_SetTimeout() {\n\tname := \"test-route\""},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/uri_test.go:5:1","message":"ExampleParseUri_Url refers to unknown field or method: ParseUri.Url","source":"\nfunc ExampleParseUri_Url() {\n\turi := \"www.google.com\""},{"package_id":"github.com/gotemplates/host/controller [github.com/gotemplates/host/controller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/controller/uri_test.go:25:1","message":"ExampleParseUri_Urn refers to unknown field or method: ParseUri.Urn","source":"\nfunc ExampleParseUri_Urn() {\n\turi := \"urn\""},{"package_id":"github.com/gotemplates/host/messaging [github.com/gotemplates/host/messaging.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/messaging/content_test.go:63:1","message":"ExampleNewStatusCodeFny refers to unknown identifier: NewStatusCodeFny","source":"\nfunc ExampleNewStatusCodeFny() {\n\tvar status *runtime.Status"},{"package_id":"github.com/gotemplates/host/messaging [github.com/gotemplates/host/messaging.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/messaging/directory_test.go:54:1","message":"ExampleEntryDirectory_SendError refers to unknown field or method: EntryDirectory.SendError","source":"\nfunc ExampleEntryDirectory_SendError() {\n\turi := \"urn:test\""},{"package_id":"github.com/gotemplates/host/messaging [github.com/gotemplates/host/messaging.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/messaging/startup_test.go:16:1","message":"ExampleCreateToSend refers to unknown identifier: CreateToSend","source":"\nfunc ExampleCreateToSend() {\n\tnone := \"/resource/none\""},{"package_id":"github.com/gotemplates/host/messaging [github.com/gotemplates/host/messaging.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/messaging/startup_test.go:38:1","message":"ExampleStartup_Success refers to unknown field or method: Startup.Success","source":"\nfunc ExampleStartup_Success() {\n\turi1 := \"urn:startup:good\""},{"package_id":"github.com/gotemplates/host/messaging [github.com/gotemplates/host/messaging.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/messaging/startup_test.go:67:1","message":"ExampleStartup_Failure refers to unknown field or method: Startup.Failure","source":"\nfunc ExampleStartup_Failure() {\n\turi1 := \"urn:startup:good\""},{"package_id":"github.com/gotemplates/host/middleware [github.com/gotemplates/host/middleware.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/middleware/roundtrip2_test.go:108:1","message":"Example_Controller_Default_Controller has malformed example suffix: Controller_Default_Controller","source":"\nfunc Example_Controller_Default_Controller() {\n\tact := controller.EgressTable().LookupHttp(nil)"},{"package_id":"github.com/gotemplates/host/middleware [github.com/gotemplates/host/middleware.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/middleware/roundtrip2_test.go:117:1","message":"Example_Controller_No_Wrapper has malformed example suffix: Controller_No_Wrapper","source":"\nfunc Example_Controller_No_Wrapper() {\n\treq, _ := http.NewRequest(\"GET\", googleUrl, nil)"},{"package_id":"github.com/gotemplates/host/middleware [github.com/gotemplates/host/middleware.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/middleware/roundtrip2_test.go:135:1","message":"Example_Controller_Default has malformed example suffix: Controller_Default","source":"\nfunc Example_Controller_Default() {\n\treq, _ := http.NewRequest(\"GET\", \"https://www.google.com\", nil)"},{"package_id":"github.com/gotemplates/host/middleware [github.com/gotemplates/host/middleware.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/middleware/roundtrip2_test.go:151:1","message":"Example_Controller_Default_Timeout has malformed example suffix: Controller_Default_Timeout","source":"\nfunc Example_Controller_Default_Timeout() {\n\treq, _ := http.NewRequest(\"GET\", googleUrl, nil)"},{"package_id":"github.com/gotemplates/host/middleware [github.com/gotemplates/host/middleware.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/middleware/roundtrip2_test.go:167:1","message":"Example_Controller_Default_RateLimit has malformed example suffix: Controller_Default_RateLimit","source":"\nfunc Example_Controller_Default_RateLimit() {\n\treq, _ := http.NewRequest(\"GET\", twitterUrl, nil)"},{"package_id":"github.com/gotemplates/host/middleware [github.com/gotemplates/host/middleware.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/middleware/roundtrip2_test.go:183:1","message":"Example_Controller_Default_Retry_NotEnabled has malformed example suffix: Controller_Default_Retry_NotEnabled","source":"\nfunc Example_Controller_Default_Retry_NotEnabled() {\n\treq, _ := http.NewRequest(\"GET\", facebookUrl, nil)"},{"package_id":"github.com/gotemplates/host/middleware [github.com/gotemplates/host/middleware.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/middleware/roundtrip2_test.go:205:1","message":"Example_Controller_Default_Retry_RateLimited has malformed example suffix: Controller_Default_Retry_RateLimited","source":"\nfunc Example_Controller_Default_Retry_RateLimited() {\n\treq, _ := http.NewRequest(\"GET\", facebookUrl, nil)"},{"package_id":"github.com/gotemplates/host/middleware [github.com/gotemplates/host/middleware.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/middleware/roundtrip2_test.go:227:1","message":"Example_Controller_Default_Retry has malformed example suffix: Controller_Default_Retry","source":"\nfunc Example_Controller_Default_Retry() {\n\treq, _ := http.NewRequest(\"GET\", facebookUrl, nil)"},{"package_id":"github.com/gotemplates/host/middleware [github.com/gotemplates/host/middleware.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/middleware/roundtrip2_test.go:254:1","message":"Example_Controller_Proxy has malformed example suffix: Controller_Proxy","source":"\nfunc Example_Controller_Proxy() {\n\treq, _ := http.NewRequest(\"GET\", instagramUrl, nil)"},{"package_id":"github.com/gotemplates/host/middleware [github.com/gotemplates/host/middleware.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/middleware/roundtrip_test.go:35:1","message":"Example_AccessLog_No_Wrapper has malformed example suffix: AccessLog_No_Wrapper","source":"\nfunc Example_AccessLog_No_Wrapper() {\n\treq, _ := http.NewRequest(\"GET\", googleUrl, nil)"},{"package_id":"github.com/gotemplates/host/middleware [github.com/gotemplates/host/middleware.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/middleware/roundtrip_test.go:53:1","message":"Example_AccessLog_Default has malformed example suffix: AccessLog_Default","source":"\nfunc Example_AccessLog_Default() {\n\treq, _ := http.NewRequest(\"GET\", instagramUrl, nil)"},{"package_id":"github.com/gotemplates/host/runtime_test [github.com/gotemplates/host/runtime.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/host@v0.0.0-20230319151318-0c24a9a4937b/runtime/environment_test.go:80:1","message":"ExampleExpand refers to unknown identifier: Expand","source":"\nfunc ExampleExpand() {\n\truntime.SetRuntimeEnv(\"dev\")"}]}
{"created_at":"2023-06-22 17:32:07.273755 UTC","module_path":"github.com/erikdubbelboer/fasthttp","version":"v1.1.0","sort_version":"1,1,0~","commit_time":"2018-06-23 07:58:47 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/client_test.go:307:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := s.Serve(ln); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/client_test.go:360:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := s.Serve(ln); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/client_test.go:460:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := s.Serve(ln); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/client_test.go:490:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\t}\n\t\t\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/client_test.go:496:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif resp.StatusCode() != StatusOK {\n\t\t\t\tt.Fatalf(\"unexpected status code %d. Expecting %d\", resp.StatusCode(), StatusOK)\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/client_test.go:501:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif string(body) != \"foo\" {\n\t\t\t\tt.Fatalf(\"unexpected body %q. Expecting %q\", body, \"abcd\")\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/client_test.go:536:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := s.Serve(ln); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/client_test.go:589:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := s.Serve(ln); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/client_test.go:657:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := s.Serve(ln); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:254:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := s.Serve(ln); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:263:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:266:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err = c.Write([]byte(\"GET / HTTP/1.1\\r\\nHost: aa\\r\\n\\r\\n\")); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:271:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err = resp.Read(br); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:275:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif resp.StatusCode() != StatusNotFound {\n\t\t\tt.Fatalf(\"unexpected status code: %d. Expecting %d\", resp.StatusCode(), StatusNotFound)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:278:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif string(resp.Body()) != \"404 Page not found\" {\n\t\t\tt.Fatalf(\"unexpected body: %q. Expecting %q\", resp.Body(), \"404 Page not found\")\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:281:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif string(resp.Header.Server()) != serverName {\n\t\t\tt.Fatalf(\"unexpected server header: %q. Expecting %q\", resp.Header.Server(), serverName)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:284:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err = c.Close(); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:333:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := Serve(ln, h); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:342:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:345:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err = c.Write([]byte(\"GET / HTTP/1.1\\r\\nHost: aa\\r\\n\\r\\n\")); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:350:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err = respH.Read(br); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:353:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif respH.StatusCode() != StatusOK {\n\t\t\tt.Fatalf(\"unexpected status code: %d. Expecting %d\", respH.StatusCode(), StatusOK)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:359:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:363:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif string(b) != \"5\\r\\nfirst\\r\\n\" {\n\t\t\tt.Fatalf(\"unexpected result %q. Expecting %q\", b, \"5\\r\\nfirst\\r\\n\")\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:369:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:372:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif string(tail) != \"6\\r\\nsecond\\r\\n0\\r\\n\\r\\n\" {\n\t\t\tt.Fatalf(\"unexpected tail %q. Expecting %q\", tail, \"6\\r\\nsecond\\r\\n0\\r\\n\\r\\n\")\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:408:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := s.Serve(ln); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:417:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:420:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err = c.Write([]byte(\"GET / HTTP/1.1\\r\\nHost: aa\\r\\n\\r\\n\")); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:425:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err = resp.Read(br); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:428:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif resp.StatusCode() != StatusOK {\n\t\t\tt.Fatalf(\"unexpected status code: %d. Expecting %d\", resp.StatusCode(), StatusOK)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:431:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif !resp.ConnectionClose() {\n\t\t\tt.Fatalf(\"expecting 'Connection: close' response header\")\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:434:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif string(resp.Body()) != \"OK\" {\n\t\t\tt.Fatalf(\"unexpected body: %q. Expecting %q\", resp.Body(), \"OK\")\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:440:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:443:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif len(data) \u003e 0 {\n\t\t\tt.Fatalf(\"unexpected data read from the connection: %q. Expecting empty data\", data)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:483:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := s.Serve(fakeLN); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:492:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:496:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:501:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err = resp.Read(br); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:504:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif resp.StatusCode() != StatusTooManyRequests {\n\t\t\tt.Fatalf(\"unexpected status code for the second connection: %d. Expecting %d\",\n\t\t\t\tresp.StatusCode(), StatusTooManyRequests)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:509:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err = c1.Write([]byte(\"GET / HTTP/1.1\\r\\nHost: aa\\r\\n\\r\\n\")); err != nil {\n\t\t\tt.Fatalf(\"unexpected error when writing to the first connection: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:513:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err = resp.Read(br); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:516:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif resp.StatusCode() != StatusOK {\n\t\t\tt.Fatalf(\"unexpected status code for the first connection: %d. Expecting %d\",\n\t\t\t\tresp.StatusCode(), StatusOK)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:520:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif string(resp.Body()) != \"OK\" {\n\t\t\tt.Fatalf(\"unexpected body for the first connection: %q. Expecting %q\", resp.Body(), \"OK\")\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:582:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := s.Serve(ln); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:591:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:595:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:600:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err = resp.Read(br); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:603:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif resp.StatusCode() != StatusServiceUnavailable {\n\t\t\tt.Fatalf(\"unexpected status code for the second connection: %d. Expecting %d\",\n\t\t\t\tresp.StatusCode(), StatusServiceUnavailable)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:608:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err = c1.Write([]byte(\"GET / HTTP/1.1\\r\\nHost: aa\\r\\n\\r\\n\")); err != nil {\n\t\t\tt.Fatalf(\"unexpected error when writing to the first connection: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:612:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err = resp.Read(br); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:615:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif resp.StatusCode() != StatusOK {\n\t\t\tt.Fatalf(\"unexpected status code for the first connection: %d. Expecting %d\",\n\t\t\t\tresp.StatusCode(), StatusOK)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:619:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif string(resp.Body()) != \"OK\" {\n\t\t\tt.Fatalf(\"unexpected body for the first connection: %q. Expecting %q\", resp.Body(), \"OK\")\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:694:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:751:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:776:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := resp.Read(br); err != nil {\n\t\t\tt.Fatalf(\"unexpected error\")\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:780:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif string(body) != \"success\" {\n\t\t\tt.Fatalf(\"unexpected response body %q. Expecting %q\", body, \"success\")\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:859:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := s.Serve(ln); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:877:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := resp.Read(br); err != nil {\n\t\t\tt.Fatalf(\"error when reading response: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:880:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif resp.StatusCode() != StatusSeeOther {\n\t\t\tt.Fatalf(\"unexpected status code %d. Expecting %d\", resp.StatusCode(), StatusSeeOther)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:884:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif string(loc) != \"http://qwerty.com/\" {\n\t\t\tt.Fatalf(\"unexpected location %q. Expecting %q\", loc, \"http://qwerty.com/\")\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:888:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := resp.Read(br); err != nil {\n\t\t\tt.Fatalf(\"error when reading the second response: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:891:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif resp.StatusCode() != StatusOK {\n\t\t\tt.Fatalf(\"unexpected status code: %d. Expecting %d\", resp.StatusCode(), StatusOK)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:895:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif string(body) != \"non-upload\" {\n\t\t\tt.Fatalf(\"unexpected body %q. Expecting %q\", body, \"non-upload\")\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:1014:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := s.Serve(ln); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:1043:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := s.Serve(ln); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:1117:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:1154:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"error when reading tail: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:1157:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif len(tail) \u003e 0 {\n\t\t\tt.Fatalf(\"unexpected non-zero tail %q\", tail)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:1199:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:1227:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"error when reading tail: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:1230:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif len(tail) \u003e 0 {\n\t\t\tt.Fatalf(\"unexpected non-zero tail %q\", tail)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:1547:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"unexpected error in ServeConn: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:1875:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := s.Serve(ln); err != nil {\n\t\t\tt.Fatalf(\"unexepcted error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:1886:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"unexepcted error: %s\", err)\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:1889:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif _, err = conn.Write([]byte(\"GET / HTTP/1.1\\r\\nHost: google.com\\r\\n\\r\\n\")); err != nil {\n\t\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:1931:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := s.Serve(ln); err != nil {\n\t\t\tt.Fatalf(\"unexepcted error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:1942:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"unexepcted error: %s\", err)\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:1945:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif _, err = conn.Write([]byte(\"GET / HTTP/1.1\\r\\nHost: google.com\\r\\n\\r\\n\")); err != nil {\n\t\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:2634:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := s.Serve(ln); err != nil {\n\t\t\tt.Fatalf(\"unexepcted error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:2638:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err == nil {\n\t\t\tt.Fatalf(\"server is still listening\")\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:2647:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"unexepcted error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:2650:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err = conn.Write([]byte(\"GET / HTTP/1.1\\r\\nHost: google.com\\r\\n\\r\\n\")); err != nil {\n\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:2662:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := s.Shutdown(); err != nil {\n\t\t\tt.Fatalf(\"unexepcted error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:2696:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := s.Serve(ln); err != nil {\n\t\t\tt.Fatalf(\"unexepcted error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/server_test.go:2718:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := s.Serve(ln); err != nil {\n\t\t\tt.Fatalf(\"unexepcted error: %s\", err)\n\t\t}"},{"package_id":"synthetic/fasthttputil [synthetic/fasthttputil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/fasthttputil/inmemory_listener_test.go:18:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t\t}"},{"package_id":"synthetic/fasthttputil [synthetic/fasthttputil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/fasthttputil/inmemory_listener_test.go:24:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t\t}"},{"package_id":"synthetic/fasthttputil [synthetic/fasthttputil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/fasthttputil/inmemory_listener_test.go:27:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif nn != len(req) {\n\t\t\t\tt.Fatalf(\"unexpected number of bytes written: %d. Expecting %d\", nn, len(req))\n\t\t\t}"},{"package_id":"synthetic/fasthttputil [synthetic/fasthttputil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/fasthttputil/inmemory_listener_test.go:32:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t\t}"},{"package_id":"synthetic/fasthttputil [synthetic/fasthttputil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/fasthttputil/inmemory_listener_test.go:37:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif nn != len(resp) {\n\t\t\t\tt.Fatalf(\"unexpected number of bytes read: %d. Expecting %d\", nn, len(resp))\n\t\t\t}"},{"package_id":"synthetic/fasthttputil [synthetic/fasthttputil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/fasthttputil/inmemory_listener_test.go:40:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif string(buf) != resp {\n\t\t\t\tt.Fatalf(\"unexpected response %q. Expecting %q\", buf, resp)\n\t\t\t}"},{"package_id":"synthetic/fasthttputil [synthetic/fasthttputil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/fasthttputil/inmemory_listener_test.go:58:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t\t}"},{"package_id":"synthetic/fasthttputil [synthetic/fasthttputil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/fasthttputil/inmemory_listener_test.go:62:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif !bytes.HasPrefix(buf, []byte(\"request_\")) {\n\t\t\t\tt.Fatalf(\"unexpected request prefix %q. Expecting %q\", buf, \"request_\")\n\t\t\t}"},{"package_id":"synthetic/fasthttputil [synthetic/fasthttputil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/fasthttputil/inmemory_listener_test.go:67:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t\t}"},{"package_id":"synthetic/fasthttputil [synthetic/fasthttputil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/erikdubbelboer/fasthttp@v1.1.0/fasthttputil/inmemory_listener_test.go:70:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif n != len(resp) {\n\t\t\t\tt.Fatalf(\"unexpected number of bytes written: %d. Expecting %d\", n, len(resp))\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:45:43.525666 UTC","module_path":"leb.io/hrff","version":"v0.1.0","sort_version":"0,1,0~","commit_time":"2021-03-07 01:41:27 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:70:1","message":"Example001 refers to unknown identifier: 001","source":"\nfunc Example001() {\n\tvar i1 = Int64{2000000, \"bps\"}"},{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:92:1","message":"Example002 refers to unknown identifier: 002","source":"\nfunc Example002() {\n\tvar size = Int64{3 * 1024 * 1024 * 1024, \"B\"}"},{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:99:1","message":"Example003 refers to unknown identifier: 003","source":"}\nfunc Example003() {\n\tvar v = Int64{0, \"B\"}"},{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:105:1","message":"Example004 refers to unknown identifier: 004","source":"}\nfunc Example004() {\n\tvar v = Int64{1, \"B\"}"},{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:112:1","message":"Example005 refers to unknown identifier: 005","source":"\nfunc Example005() {\n\tvar v = Float64{0, \"B\"}"},{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:119:1","message":"Example006 refers to unknown identifier: 006","source":"\nfunc Example006() {\n\tvar v = Float64{1, \"B\"}"},{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:126:1","message":"Example007 refers to unknown identifier: 007","source":"\nfunc Example007() {\n\tvar v = Float64{1024 * 1024 * 1024, \"B\"}"},{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:133:1","message":"Example008 refers to unknown identifier: 008","source":"\nfunc Example008() {\n\tvar v = Int64{1000, \"B\"}"},{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:139:1","message":"Example009 refers to unknown identifier: 009","source":"\nfunc Example009() {\n\tvar v = Int{1000, \"B\"}"},{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:145:1","message":"Example010 refers to unknown identifier: 010","source":"\nfunc Example010() {\n\tvar v = Int{-100, \"B\"}"},{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:151:1","message":"Example011 refers to unknown identifier: 011","source":"\nfunc Example011() {\n\tvar v = Int{-1000, \"B\"}"},{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:157:1","message":"Example012 refers to unknown identifier: 012","source":"\nfunc Example012() {\n\tvar v = Int{1234567, \"B\"}"},{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:163:1","message":"Example013 refers to unknown identifier: 013","source":"\nfunc Example013() {\n\tvar v = Int{-1234567, \"B\"}"},{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:169:1","message":"Example015a refers to unknown identifier: 015a","source":"\nfunc Example015a() {\n\tvar v = Float64{0, \"B\"}"},{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:175:1","message":"Example014 refers to unknown identifier: 014","source":"\nfunc Example014() {\n\tfmt.Printf(\"%h\\n\", Int64{V: 0, U: \"foobars\"})"},{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:180:1","message":"Example015 refers to unknown identifier: 015","source":"\nfunc Example015() {\n\tfmt.Printf(\"%h\\n\", Float64{V: 0, U: \"foobars\"})"},{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:185:1","message":"Example016 refers to unknown identifier: 016","source":"\nfunc Example016() {\n\tfmt.Printf(\"%h\\n\", Int64{V: 11, U: \"foobars\"})"},{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:190:1","message":"Example017 refers to unknown identifier: 017","source":"\nfunc Example017() {\n\tfmt.Printf(\"%h\\n\", Float64{V: 11, U: \"foobars\"})"},{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:195:1","message":"Example018 refers to unknown identifier: 018","source":"\nfunc Example018() {\n\tfmt.Printf(\"%h\\n\", Int64{V: 999, U: \"foobars\"})"},{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:200:1","message":"Example019 refers to unknown identifier: 019","source":"\nfunc Example019() {\n\tfmt.Printf(\"%h\\n\", Float64{V: 999, U: \"foobars\"})"},{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:205:1","message":"Example020 refers to unknown identifier: 020","source":"\nfunc Example020() {\n\tfmt.Printf(\"%h\\n\", Int64{V: 1000, U: \"foobars\"})"},{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:210:1","message":"Example021 refers to unknown identifier: 021","source":"\nfunc Example021() {\n\tfmt.Printf(\"%h\\n\", Float64{V: 1000, U: \"foobars\"})"},{"package_id":"leb.io/hrff_test [leb.io/hrff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/leb.io/hrff@v0.1.0/hrff_test.go:215:1","message":"Example022 refers to unknown identifier: 022","source":"\nfunc Example022() {\n\tfmt.Printf(\"%D\\n\", Int64{V: 1000000, U: \"foobars\"})"}]}
{"created_at":"2023-06-22 17:52:59.28357 UTC","module_path":"github.com/tidwall/resp","version":"v0.1.1","sort_version":"0,1,1~","commit_time":"2022-09-16 21:24:24 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/tidwall/resp [github.com/tidwall/resp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tidwall/resp@v0.1.1/resp_test.go:158:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif _, err := pw.Write(cmd[:frag]); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/tidwall/resp [github.com/tidwall/resp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tidwall/resp@v0.1.1/resp_test.go:164:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif _, err := pw.Write(cmd); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/tidwall/resp [github.com/tidwall/resp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tidwall/resp@v0.1.1/server_test.go:34:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/tidwall/resp [github.com/tidwall/resp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tidwall/resp@v0.1.1/server_test.go:41:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err := conn.WriteMultiBulk(\"PING\"); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/tidwall/resp [github.com/tidwall/resp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tidwall/resp@v0.1.1/server_test.go:45:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/tidwall/resp [github.com/tidwall/resp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tidwall/resp@v0.1.1/server_test.go:48:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif val.String() != \"PONG\" {\n\t\t\t\tt.Fatalf(\"expecting 'PONG', got '%s'\", val)\n\t\t\t}"},{"package_id":"github.com/tidwall/resp [github.com/tidwall/resp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tidwall/resp@v0.1.1/server_test.go:55:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err := conn.WriteMultiBulk(\"SET\", key, 123.4); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/tidwall/resp [github.com/tidwall/resp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tidwall/resp@v0.1.1/server_test.go:59:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/tidwall/resp [github.com/tidwall/resp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tidwall/resp@v0.1.1/server_test.go:62:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif val.String() != \"OK\" {\n\t\t\t\tt.Fatalf(\"expecting 'OK', got '%s'\", val)\n\t\t\t}"},{"package_id":"github.com/tidwall/resp [github.com/tidwall/resp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tidwall/resp@v0.1.1/server_test.go:67:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err := conn.WriteMultiBulk(\"GET\", key); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/tidwall/resp [github.com/tidwall/resp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tidwall/resp@v0.1.1/server_test.go:71:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/tidwall/resp [github.com/tidwall/resp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tidwall/resp@v0.1.1/server_test.go:74:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif val.Float() != 123.4 {\n\t\t\t\tt.Fatalf(\"expecting '123.4', got '%s'\", val)\n\t\t\t}"},{"package_id":"github.com/tidwall/resp [github.com/tidwall/resp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tidwall/resp@v0.1.1/server_test.go:79:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err := conn.WriteMultiBulk(\"QUIT\"); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/tidwall/resp [github.com/tidwall/resp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tidwall/resp@v0.1.1/server_test.go:83:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/tidwall/resp [github.com/tidwall/resp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tidwall/resp@v0.1.1/server_test.go:86:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif val.String() != \"OK\" {\n\t\t\t\tt.Fatalf(\"expecting 'OK', got '%s'\", val)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:49:45.970523 UTC","module_path":"github.com/databricks/databricks-sdk-go","version":"v0.10.1","sort_version":"0,a10,1~","commit_time":"2023-06-21 11:39:49 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/databricks/databricks-sdk-go/service/catalog_test [github.com/databricks/databricks-sdk-go/service/catalog.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/catalog/tables_usage_test.go:131:1","message":"ExampleTablesAPI_ListSummaries_tables refers to unknown field or method: TablesAPI.ListSummaries","source":"\nfunc ExampleTablesAPI_ListSummaries_tables() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/compute_test [github.com/databricks/databricks-sdk-go/service/compute.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/compute/clusters_usage_test.go:242:1","message":"ExampleClustersAPI_Events_clustersApiIntegration refers to unknown field or method: ClustersAPI.Events","source":"\nfunc ExampleClustersAPI_Events_clustersApiIntegration() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/compute_test [github.com/databricks/databricks-sdk-go/service/compute.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/compute/libraries_usage_test.go:14:1","message":"ExampleLibrariesAPI_Update_libraries refers to unknown field or method: LibrariesAPI.Update","source":"\nfunc ExampleLibrariesAPI_Update_libraries() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/ml_test [github.com/databricks/databricks-sdk-go/service/ml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/ml/experiments_usage_test.go:145:1","message":"ExampleExperimentsAPI_ListExperiments_experiments refers to unknown field or method: ExperimentsAPI.ListExperiments","source":"\nfunc ExampleExperimentsAPI_ListExperiments_experiments() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/ml_test [github.com/databricks/databricks-sdk-go/service/ml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/ml/model_registry_usage_test.go:219:1","message":"ExampleModelRegistryAPI_ListModels_models refers to unknown field or method: ModelRegistryAPI.ListModels","source":"\nfunc ExampleModelRegistryAPI_ListModels_models() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/ml_test [github.com/databricks/databricks-sdk-go/service/ml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/ml/model_registry_usage_test.go:234:1","message":"ExampleModelRegistryAPI_ListWebhooks_registryWebhooks refers to unknown field or method: ModelRegistryAPI.ListWebhooks","source":"\nfunc ExampleModelRegistryAPI_ListWebhooks_registryWebhooks() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/pipelines_test [github.com/databricks/databricks-sdk-go/service/pipelines.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/pipelines/pipelines_usage_test.go:112:1","message":"ExamplePipelinesAPI_ListPipelineEvents_pipelines refers to unknown field or method: PipelinesAPI.ListPipelineEvents","source":"\nfunc ExamplePipelinesAPI_ListPipelineEvents_pipelines() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/pipelines_test [github.com/databricks/databricks-sdk-go/service/pipelines.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/pipelines/pipelines_usage_test.go:164:1","message":"ExamplePipelinesAPI_ListPipelines_pipelines refers to unknown field or method: PipelinesAPI.ListPipelines","source":"\nfunc ExamplePipelinesAPI_ListPipelines_pipelines() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/provisioning_test [github.com/databricks/databricks-sdk-go/service/provisioning.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/provisioning/credentials_usage_test.go:139:1","message":"ExampleCredentialsAPI_ListAll_credentials refers to unknown field or method: CredentialsAPI.ListAll","source":"\nfunc ExampleCredentialsAPI_ListAll_credentials() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/provisioning_test [github.com/databricks/databricks-sdk-go/service/provisioning.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/provisioning/encryption_keys_usage_test.go:77:1","message":"ExampleEncryptionKeysAPI_ListAll_encryptionKeys refers to unknown field or method: EncryptionKeysAPI.ListAll","source":"\nfunc ExampleEncryptionKeysAPI_ListAll_encryptionKeys() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/provisioning_test [github.com/databricks/databricks-sdk-go/service/provisioning.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/provisioning/networks_usage_test.go:62:1","message":"ExampleNetworksAPI_ListAll_networks refers to unknown field or method: NetworksAPI.ListAll","source":"\nfunc ExampleNetworksAPI_ListAll_networks() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/provisioning_test [github.com/databricks/databricks-sdk-go/service/provisioning.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/provisioning/private_access_usage_test.go:73:1","message":"ExamplePrivateAccessAPI_ListAll_privateAccess refers to unknown field or method: PrivateAccessAPI.ListAll","source":"\nfunc ExamplePrivateAccessAPI_ListAll_privateAccess() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/provisioning_test [github.com/databricks/databricks-sdk-go/service/provisioning.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/provisioning/storage_usage_test.go:117:1","message":"ExampleStorageAPI_ListAll_storage refers to unknown field or method: StorageAPI.ListAll","source":"\nfunc ExampleStorageAPI_ListAll_storage() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/provisioning_test [github.com/databricks/databricks-sdk-go/service/provisioning.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/provisioning/vpc_endpoints_usage_test.go:75:1","message":"ExampleVpcEndpointsAPI_ListAll_vpcEndpoints refers to unknown field or method: VpcEndpointsAPI.ListAll","source":"\nfunc ExampleVpcEndpointsAPI_ListAll_vpcEndpoints() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/provisioning_test [github.com/databricks/databricks-sdk-go/service/provisioning.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/provisioning/workspaces_usage_test.go:141:1","message":"ExampleWorkspacesAPI_ListAll_workspaces refers to unknown field or method: WorkspacesAPI.ListAll","source":"\nfunc ExampleWorkspacesAPI_ListAll_workspaces() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/settings_test [github.com/databricks/databricks-sdk-go/service/settings.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/settings/tokens_usage_test.go:41:1","message":"ExampleTokensAPI_Get_tokens refers to unknown field or method: TokensAPI.Get","source":"\nfunc ExampleTokensAPI_Get_tokens() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/sharing_test [github.com/databricks/databricks-sdk-go/service/sharing.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/sharing/providers_usage_test.go:100:1","message":"ExampleProvidersAPI_ListShares_providers refers to unknown field or method: ProvidersAPI.ListShares","source":"\nfunc ExampleProvidersAPI_ListShares_providers() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/sql_test [github.com/databricks/databricks-sdk-go/service/sql.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/sql/alerts_usage_test.go:124:1","message":"ExampleAlertsAPI_ListAll_alerts refers to unknown field or method: AlertsAPI.ListAll","source":"\nfunc ExampleAlertsAPI_ListAll_alerts() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/sql_test [github.com/databricks/databricks-sdk-go/service/sql.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/sql/data_sources_usage_test.go:12:1","message":"ExampleDataSourcesAPI_ListAll_queries refers to unknown field or method: DataSourcesAPI.ListAll","source":"\nfunc ExampleDataSourcesAPI_ListAll_queries() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/sql_test [github.com/databricks/databricks-sdk-go/service/sql.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/sql/data_sources_usage_test.go:27:1","message":"ExampleDataSourcesAPI_ListAll_alerts refers to unknown field or method: DataSourcesAPI.ListAll","source":"\nfunc ExampleDataSourcesAPI_ListAll_alerts() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/sql_test [github.com/databricks/databricks-sdk-go/service/sql.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/sql/statement_execution_usage_test.go:18:1","message":"ExampleStatementExecutionAPI_Execute_tables refers to unknown field or method: StatementExecutionAPI.Execute","source":"\nfunc ExampleStatementExecutionAPI_Execute_tables() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/sql_test [github.com/databricks/databricks-sdk-go/service/sql.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/sql/statement_execution_usage_test.go:70:1","message":"ExampleStatementExecutionAPI_Execute_shares refers to unknown field or method: StatementExecutionAPI.Execute","source":"\nfunc ExampleStatementExecutionAPI_Execute_shares() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/workspace_test [github.com/databricks/databricks-sdk-go/service/workspace.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/workspace/secrets_usage_test.go:51:1","message":"ExampleSecretsAPI_ListAcls_secrets refers to unknown field or method: SecretsAPI.ListAcls","source":"\nfunc ExampleSecretsAPI_ListAcls_secrets() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/workspace_test [github.com/databricks/databricks-sdk-go/service/workspace.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/workspace/secrets_usage_test.go:91:1","message":"ExampleSecretsAPI_ListScopes_secrets refers to unknown field or method: SecretsAPI.ListScopes","source":"\nfunc ExampleSecretsAPI_ListScopes_secrets() {\n\tctx := context.Background()"},{"package_id":"github.com/databricks/databricks-sdk-go/service/workspace_test [github.com/databricks/databricks-sdk-go/service/workspace.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/databricks/databricks-sdk-go@v0.10.1/service/workspace/secrets_usage_test.go:106:1","message":"ExampleSecretsAPI_ListSecrets_secrets refers to unknown field or method: SecretsAPI.ListSecrets","source":"\nfunc ExampleSecretsAPI_ListSecrets_secrets() {\n\tctx := context.Background()"}]}
{"created_at":"2023-06-22 17:28:56.311631 UTC","module_path":"github.com/oracle/oci-go-sdk/v46","version":"v46.2.0","sort_version":"a46,2,0~","commit_time":"2021-08-31 17:21:34 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_audit_test.go:18:1","message":"ExampleListEvents refers to unknown identifier: ListEvents","source":"\nfunc ExampleListEvents() {\n\tc, clerr := audit.NewAuditClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_backup_destination_test.go:24:1","message":"ExampleCreateNFSBackupDestination refers to unknown identifier: CreateNFSBackupDestination","source":"\nfunc ExampleCreateNFSBackupDestination() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_backup_destination_test.go:49:1","message":"ExampleGetBackupDestination refers to unknown identifier: GetBackupDestination","source":"\nfunc ExampleGetBackupDestination() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_backup_destination_test.go:66:1","message":"ExampleUpdateBackupDestination refers to unknown identifier: UpdateBackupDestination","source":"\nfunc ExampleUpdateBackupDestination() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_backup_destination_test.go:88:1","message":"ExampleUpdateDbBackupBackupDestination refers to unknown identifier: UpdateDbBackupBackupDestination","source":"\nfunc ExampleUpdateDbBackupBackupDestination() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_backup_destination_test.go:119:1","message":"ExampleCreateDbHomeBackupDestination refers to unknown identifier: CreateDbHomeBackupDestination","source":"\nfunc ExampleCreateDbHomeBackupDestination() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_backup_destination_test.go:167:1","message":"ExampleDeleteBackupDestination refers to unknown identifier: DeleteBackupDestination","source":"\nfunc ExampleDeleteBackupDestination() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_blockstorage_test.go:20:1","message":"ExampleCopyVolumeBackup refers to unknown identifier: CopyVolumeBackup","source":"// Polls the copied volume backup in the destination region until it's lifecycle is Available.\nfunc ExampleCopyVolumeBackup() {\n\tsourceBackupId := \"REPLACE_WITH_VOLUME_BACKUP_OCID\""},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_change_compartment_test.go:47:1","message":"ExampleChangeCompartment refers to unknown identifier: ChangeCompartment","source":"\nfunc ExampleChangeCompartment() {\n"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_change_nat_gateway_compartment_test.go:43:1","message":"ExampleChangeNatGatewayCompartment refers to unknown identifier: ChangeNatGatewayCompartment","source":"\nfunc ExampleChangeNatGatewayCompartment() {\n"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_change_service_gateway_compartment_test.go:43:1","message":"ExampleChangeServiceGatewayCompartment refers to unknown identifier: ChangeServiceGatewayCompartment","source":"\nfunc ExampleChangeServiceGatewayCompartment() {\n"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_cluster_network_test.go:30:1","message":"ExampleCreateAndWaitForRunningClusterNetwork refers to unknown identifier: CreateAndWaitForRunningClusterNetwork","source":"// Example to showcase cluster network creation, and eventual teardown\nfunc ExampleCreateAndWaitForRunningClusterNetwork() {\n\tClusterNetworkParseEnvironmentVariables()"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_compartment_test.go:25:1","message":"ExampleMoveCompartment refers to unknown identifier: MoveCompartment","source":"// ExampleMoveCompartment Moves an active compartment under a different parent\nfunc ExampleMoveCompartment() {\n\tc, err := identity.NewIdentityClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_containerengine_test.go:22:1","message":"ExampleClusterCRUD refers to unknown identifier: ClusterCRUD","source":"// how to work with WorkRequest\nfunc ExampleClusterCRUD() {\n\tctx := context.Background()"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_containerengine_test.go:88:1","message":"ExampleNodePoolCRUD refers to unknown identifier: NodePoolCRUD","source":"// Example for NodePool\nfunc ExampleNodePoolCRUD() {\n\tctx := context.Background()"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_containerengine_test.go:181:1","message":"ExampleKubeConfig refers to unknown identifier: KubeConfig","source":"\nfunc ExampleKubeConfig() {\n\tctx := context.Background()"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_containerengine_test.go:200:1","message":"ExampleWorkRequestQuery refers to unknown identifier: WorkRequestQuery","source":"// Example for work request query\nfunc ExampleWorkRequestQuery() {\n\tctx := context.Background()"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_core_pagination_test.go:19:1","message":"ExampleListShapes_Pagination refers to unknown identifier: ListShapes","source":"// ExampleListShapes_Pagination demostrate how to use page parameter\nfunc ExampleListShapes_Pagination() {\n\tc, err := core.NewComputeClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_core_test.go:34:1","message":"ExampleLaunchInstance refers to unknown identifier: LaunchInstance","source":"// after execute this sample code, otherwise, you will be charged for the running instance\nfunc ExampleLaunchInstance() {\n\tc, err := core.NewComputeClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_core_test.go:146:1","message":"ExampleCreateImageDetails_Polymorphic refers to unknown field or method: CreateImageDetails.Polymorphic","source":"// imports an exported image from the Oracle Cloud Infrastructure Object Storage service.\nfunc ExampleCreateImageDetails_Polymorphic() {\n\trequest := core.CreateImageRequest{}"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_create_servicegateway_test.go:18:1","message":"ExampleCreateServiceGateway refers to unknown identifier: CreateServiceGateway","source":"\nfunc ExampleCreateServiceGateway() {\n\tdisplayName := \"OCI-GOSDK-CreateServiceGateway-Example\" // displayName for created VCN and ServiceGateway"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_create_vcn_test.go:18:1","message":"ExampleCreateVcn refers to unknown identifier: CreateVcn","source":"\nfunc ExampleCreateVcn() {\n\tdisplayName := \"OCI-GOSDK-CreateVcn-Example\""},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_database_test.go:33:1","message":"ExampleCreateAdb refers to unknown identifier: CreateAdb","source":"\nfunc ExampleCreateAdb() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_database_test.go:59:1","message":"ExampleCreateFreeAdb refers to unknown identifier: CreateFreeAdb","source":"\nfunc ExampleCreateFreeAdb() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_database_test.go:85:1","message":"ExampleCreateAdbPreview refers to unknown identifier: CreateAdbPreview","source":"\nfunc ExampleCreateAdbPreview() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_database_test.go:112:1","message":"ExampleUpdateAdb refers to unknown identifier: UpdateAdb","source":"\nfunc ExampleUpdateAdb() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_database_test.go:135:1","message":"ExampleUpdateAdbAcl refers to unknown identifier: UpdateAdbAcl","source":"\nfunc ExampleUpdateAdbAcl() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_database_test.go:156:1","message":"ExampleUpdateAdbLisenceType refers to unknown identifier: UpdateAdbLisenceType","source":"\nfunc ExampleUpdateAdbLisenceType() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_dns_test.go:22:1","message":"ExampleDnsZone refers to unknown identifier: DnsZone","source":"// If optional TARGET_COMPARTMENT_ID env var is set, it will also move the DNS Zone to the compartment.\nfunc ExampleDnsZone() {\n\tclient, err := dns.NewDnsClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_dns_test.go:101:1","message":"ExampleDnsSteeringPolicy refers to unknown identifier: DnsSteeringPolicy","source":"// If optional TARGET_COMPARTMENT_ID env var is set, it will also move the DNS Steering Policy to the compartment.\nfunc ExampleDnsSteeringPolicy() {\n\tclient, err := dns.NewDnsClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_email_test.go:23:1","message":"ExampleEmailSender refers to unknown identifier: EmailSender","source":"\nfunc ExampleEmailSender() {\n\tclient, err := email.NewEmailClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_eventually_consistent_retry_behavior_test.go:34:1","message":"ExampleEventuallyConsistentRetryBehavior_Default refers to unknown identifier: EventuallyConsistentRetryBehavior","source":"// been changed to prevent the example from automatically running as a test.\nfunc ExampleEventuallyConsistentRetryBehavior_Default() {\n\t// setup"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_eventually_consistent_retry_behavior_test.go:119:1","message":"ExampleEventuallyConsistentRetryBehavior_UnlimitedAttempts refers to unknown identifier: EventuallyConsistentRetryBehavior","source":"// been changed to prevent the example from automatically running as a test.\nfunc ExampleEventuallyConsistentRetryBehavior_UnlimitedAttempts() {\n\t// setup"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_functions_test.go:48:1","message":"ExampleFunctionInvoke refers to unknown identifier: FunctionInvoke","source":"*/\nfunc ExampleFunctionInvoke() {\n\tmanagementClient, err := functions.NewFunctionsManagementClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_healthchecks_test.go:134:1","message":"ExampleHealthChecksHttpSamples refers to unknown identifier: HealthChecksHttpSamples","source":"\nfunc ExampleHealthChecksHttpSamples() {\n\tctx := context.Background()"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_healthchecks_test.go:265:1","message":"ExampleHealthChecksPingSamples refers to unknown identifier: HealthChecksPingSamples","source":"\nfunc ExampleHealthChecksPingSamples() {\n\tctx := context.Background()"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_identity_test.go:22:1","message":"ExampleListAvailabilityDomains refers to unknown identifier: ListAvailabilityDomains","source":"// the value for the compartment ID (remember that the tenancy is simply the root compartment).\nfunc ExampleListAvailabilityDomains() {\n\tc, err := identity.NewIdentityClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_identity_test.go:45:1","message":"ExampleListGroupsWithCustomSignedHeader refers to unknown identifier: ListGroupsWithCustomSignedHeader","source":"// ExampleListGroupsWithCustomSignedHeader Lists groups by passing a custom signed header in the request\nfunc ExampleListGroupsWithCustomSignedHeader() {\n\tprovider := common.DefaultConfigProvider()"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_instance_configs_test.go:26:1","message":"ExampleCreateAndUseInstanceConfiguration refers to unknown identifier: CreateAndUseInstanceConfiguration","source":"// Example to showcase instance configuration create and operations, and eventual teardown\nfunc ExampleCreateAndUseInstanceConfiguration() {\n\tInstanceConfigsParseEnvironmentVariables()"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_instance_pools_test.go:34:1","message":"ExampleCreateAndWaitForRunningInstancePool refers to unknown identifier: CreateAndWaitForRunningInstancePool","source":"// Example to showcase instance pool create and operations, and eventual teardown\nfunc ExampleCreateAndWaitForRunningInstancePool() {\n\tInstancePoolsParseEnvironmentVariables()"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_instance_principals_test.go:26:1","message":"ExampleInstancePrincipals refers to unknown identifier: InstancePrincipals","source":"\nfunc ExampleInstancePrincipals() {\n"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_instance_principals_test.go:54:1","message":"ExampleInstancePrincipalsWithCustomClient refers to unknown identifier: InstancePrincipalsWithCustomClient","source":"// Similar to the example above, this example shows how to customize the client.\nfunc ExampleInstancePrincipalsWithCustomClient() {\n"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_keymanagement_test.go:21:1","message":"ExampleVaultOperations refers to unknown identifier: VaultOperations","source":"// and cancel a scheduled deletion of a KMS vault\nfunc ExampleVaultOperations() {\n\tvaultClient, clientError := keymanagement.NewKmsVaultClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_keymanagement_test.go:58:1","message":"ExampleKeyOperations refers to unknown identifier: KeyOperations","source":"// ExampleKeyManagement_KeyOperations shows how to create, enable and disable a KMS key\nfunc ExampleKeyOperations() {\n\tvaultClient, clientError := keymanagement.NewKmsVaultClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_keymanagement_test.go:162:1","message":"ExampleCryptoOperations refers to unknown identifier: CryptoOperations","source":"\nfunc ExampleCryptoOperations() {\n\tvaultClient, clientError := keymanagement.NewKmsVaultClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_loadbalancer_test.go:40:1","message":"ExampleCreateLoadbalancer refers to unknown identifier: CreateLoadbalancer","source":"\nfunc ExampleCreateLoadbalancer() {\n\tc, clerr := loadbalancer.NewLoadBalancerClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_objectstorage_multi_download_test.go:22:1","message":"ExampleMultipartDownload refers to unknown identifier: MultipartDownload","source":"// ExampleMultipartDownload shows how to use get object API to perform multi-part download operation\nfunc ExampleMultipartDownload() {\n\tc, err := objectstorage.NewObjectStorageClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_objectstorage_test.go:24:1","message":"ExampleObjectStorage_UploadFile refers to unknown identifier: ObjectStorage","source":"// ExampleObjectStorage_UploadFile shows how to create a bucket and upload a file\nfunc ExampleObjectStorage_UploadFile() {\n\tc, clerr := objectstorage.NewObjectStorageClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_objectstorage_test.go:58:1","message":"ExampleObjectStorage_UploadManager_UploadFile refers to unknown identifier: ObjectStorage","source":"\nfunc ExampleObjectStorage_UploadManager_UploadFile() {\n\tc, clerr := objectstorage.NewObjectStorageClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_objectstorage_test.go:128:1","message":"ExampleObjectStorage_UploadManager_Stream refers to unknown identifier: ObjectStorage","source":"\nfunc ExampleObjectStorage_UploadManager_Stream() {\n\tc, clerr := objectstorage.NewObjectStorageClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_objectstorage_test.go:202:1","message":"ExampleObjectStorage_GetNamespace refers to unknown identifier: ObjectStorage","source":"// ExampleObjectStorage_GetNamespace shows how to get namespace providing compartmentId.\nfunc ExampleObjectStorage_GetNamespace() {\n\tc, clerr := objectstorage.NewObjectStorageClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_quotas_test.go:83:1","message":"ExampleQuotas refers to unknown identifier: Quotas","source":"// ExampleQuotas runs an example demonstrating the use of OCI Golang SDK for managing Quotas\nfunc ExampleQuotas() {\n"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_rawrequest_test.go:20:1","message":"ExampleListUsers_RawRequest refers to unknown identifier: ListUsers","source":"// ExampleRawRequest compose a request, sign it and send to server\nfunc ExampleListUsers_RawRequest() {\n\t// build the url"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_resourcemanager_test.go:19:1","message":"ExampleResourceManager refers to unknown identifier: ResourceManager","source":"// The comparement id is read from the environment variable OCI_COMPARTMENT_ID\nfunc ExampleResourceManager() {\n\tprovider := common.DefaultConfigProvider()"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_resourcesearch_test.go:19:1","message":"Example_ResourceSearch has malformed example suffix: ResourceSearch","source":"\nfunc Example_ResourceSearch() {\n\tclient, err := resourcesearch.NewResourceSearchClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_retry_test.go:103:1","message":"ExampleCustomRetry refers to unknown identifier: CustomRetry","source":"// refer to example_core_test.go-\u003eExampleLaunchInstance for more examples\nfunc ExampleCustomRetry() {\n\t// create and delete group with retry"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_retry_test.go:194:1","message":"ExampleUnlimitedAttemptsRetry refers to unknown identifier: UnlimitedAttemptsRetry","source":"// for Create and Delete groups, please refer to example_core_test.go-\u003eExampleLaunchInstance for more examples\nfunc ExampleUnlimitedAttemptsRetry() {\n\t// create and delete group with retry"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_securityTokenBasedAuth_test.go:31:1","message":"ExampleCreateAndUseSecurityTokenBasedConfiguration refers to unknown identifier: CreateAndUseSecurityTokenBasedConfiguration","source":"\nfunc ExampleCreateAndUseSecurityTokenBasedConfiguration() {\n\thomeFolder := getHomeFolder()"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_tagging_test.go:20:1","message":"ExampleTagging refers to unknown identifier: Tagging","source":"// ExampleTagging shows the sample for tag and tagNamespace operations: create, update, get, list etc...\nfunc ExampleTagging() {\n\tc, err := identity.NewIdentityClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_tagging_test.go:117:1","message":"ExampleFreeformAndDefinedTag refers to unknown identifier: FreeformAndDefinedTag","source":"// ExampleFreeformAndDefinedTag shows how to use freeform and defined tags\nfunc ExampleFreeformAndDefinedTag() {\n\t// create a tag namespace and two tags"},{"package_id":"github.com/oracle/oci-go-sdk/v46/example [github.com/oracle/oci-go-sdk/v46/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v46@v46.2.0/example/example_work_request_test.go:32:1","message":"ExampleWorkRequests refers to unknown identifier: WorkRequests","source":"\nfunc ExampleWorkRequests() {\n\tclient, err := workrequests.NewWorkRequestClientWithConfigurationProvider(common.DefaultConfigProvider())"}]}
{"created_at":"2023-06-22 17:31:23.055278 UTC","module_path":"github.com/oracle/oci-go-sdk/v65","version":"v65.41.1","sort_version":"a65,a41,1~","commit_time":"2023-06-20 17:17:54 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_audit_test.go:18:1","message":"ExampleListEvents refers to unknown identifier: ListEvents","source":"\nfunc ExampleListEvents() {\n\tc, clerr := audit.NewAuditClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_backup_destination_test.go:25:1","message":"ExampleCreateNFSBackupDestination refers to unknown identifier: CreateNFSBackupDestination","source":"\nfunc ExampleCreateNFSBackupDestination() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_backup_destination_test.go:50:1","message":"ExampleGetBackupDestination refers to unknown identifier: GetBackupDestination","source":"\nfunc ExampleGetBackupDestination() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_backup_destination_test.go:67:1","message":"ExampleUpdateBackupDestination refers to unknown identifier: UpdateBackupDestination","source":"\nfunc ExampleUpdateBackupDestination() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_backup_destination_test.go:89:1","message":"ExampleUpdateDbBackupBackupDestination refers to unknown identifier: UpdateDbBackupBackupDestination","source":"\nfunc ExampleUpdateDbBackupBackupDestination() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_backup_destination_test.go:120:1","message":"ExampleCreateDbHomeBackupDestination refers to unknown identifier: CreateDbHomeBackupDestination","source":"\nfunc ExampleCreateDbHomeBackupDestination() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_backup_destination_test.go:168:1","message":"ExampleDeleteBackupDestination refers to unknown identifier: DeleteBackupDestination","source":"\nfunc ExampleDeleteBackupDestination() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_blockstorage_test.go:20:1","message":"ExampleCopyVolumeBackup refers to unknown identifier: CopyVolumeBackup","source":"// Polls the copied volume backup in the destination region until it's lifecycle is Available.\nfunc ExampleCopyVolumeBackup() {\n\tsourceBackupId := \"REPLACE_WITH_VOLUME_BACKUP_OCID\""},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_change_compartment_test.go:48:1","message":"ExampleChangeCompartment refers to unknown identifier: ChangeCompartment","source":"\nfunc ExampleChangeCompartment() {\n"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_change_nat_gateway_compartment_test.go:44:1","message":"ExampleChangeNatGatewayCompartment refers to unknown identifier: ChangeNatGatewayCompartment","source":"\nfunc ExampleChangeNatGatewayCompartment() {\n"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_change_service_gateway_compartment_test.go:44:1","message":"ExampleChangeServiceGatewayCompartment refers to unknown identifier: ChangeServiceGatewayCompartment","source":"\nfunc ExampleChangeServiceGatewayCompartment() {\n"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_circuitbreaker_test.go:17:1","message":"ExampleConfigureCircuitBreaker refers to unknown identifier: ConfigureCircuitBreaker","source":"// Example shows how to configure circuit breaker\nfunc ExampleConfigureCircuitBreaker() {\n\t// If need to disable all service default circuit breaker, there are two ways: set circuit breaker environment variable to false"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_cluster_network_test.go:30:1","message":"ExampleCreateAndWaitForRunningClusterNetwork refers to unknown identifier: CreateAndWaitForRunningClusterNetwork","source":"// Example to showcase cluster network creation, and eventual teardown\nfunc ExampleCreateAndWaitForRunningClusterNetwork() {\n\tClusterNetworkParseEnvironmentVariables()"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_compartment_test.go:25:1","message":"ExampleMoveCompartment refers to unknown identifier: MoveCompartment","source":"// ExampleMoveCompartment Moves an active compartment under a different parent\nfunc ExampleMoveCompartment() {\n\tc, err := identity.NewIdentityClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_containerengine_test.go:23:1","message":"ExampleClusterCRUD refers to unknown identifier: ClusterCRUD","source":"// how to work with WorkRequest\nfunc ExampleClusterCRUD() {\n\tctx := context.Background()"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_containerengine_test.go:89:1","message":"ExampleNodePoolCRUD refers to unknown identifier: NodePoolCRUD","source":"// Example for NodePool\nfunc ExampleNodePoolCRUD() {\n\tctx := context.Background()"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_containerengine_test.go:182:1","message":"ExampleKubeConfig refers to unknown identifier: KubeConfig","source":"\nfunc ExampleKubeConfig() {\n\tctx := context.Background()"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_containerengine_test.go:201:1","message":"ExampleWorkRequestQuery refers to unknown identifier: WorkRequestQuery","source":"// Example for work request query\nfunc ExampleWorkRequestQuery() {\n\tctx := context.Background()"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_core_pagination_test.go:19:1","message":"ExampleListShapes_Pagination refers to unknown identifier: ListShapes","source":"// ExampleListShapes_Pagination demostrate how to use page parameter\nfunc ExampleListShapes_Pagination() {\n\tc, err := core.NewComputeClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_core_test.go:34:1","message":"ExampleLaunchInstance refers to unknown identifier: LaunchInstance","source":"// after execute this sample code, otherwise, you will be charged for the running instance\nfunc ExampleLaunchInstance() {\n\tc, err := core.NewComputeClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_core_test.go:146:1","message":"ExampleCreateImageDetails_Polymorphic refers to unknown field or method: CreateImageDetails.Polymorphic","source":"// imports an exported image from the Oracle Cloud Infrastructure Object Storage service.\nfunc ExampleCreateImageDetails_Polymorphic() {\n\trequest := core.CreateImageRequest{}"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_create_servicegateway_test.go:18:1","message":"ExampleCreateServiceGateway refers to unknown identifier: CreateServiceGateway","source":"\nfunc ExampleCreateServiceGateway() {\n\tdisplayName := \"OCI-GOSDK-CreateServiceGateway-Example\" // displayName for created VCN and ServiceGateway"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_create_vcn_test.go:18:1","message":"ExampleCreateVcn refers to unknown identifier: CreateVcn","source":"\nfunc ExampleCreateVcn() {\n\tdisplayName := \"OCI-GOSDK-CreateVcn-Example\""},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_database_test.go:33:1","message":"ExampleCreateAdb refers to unknown identifier: CreateAdb","source":"\nfunc ExampleCreateAdb() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_database_test.go:59:1","message":"ExampleCreateFreeAdb refers to unknown identifier: CreateFreeAdb","source":"\nfunc ExampleCreateFreeAdb() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_database_test.go:85:1","message":"ExampleCreateAdbPreview refers to unknown identifier: CreateAdbPreview","source":"\nfunc ExampleCreateAdbPreview() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_database_test.go:112:1","message":"ExampleUpdateAdb refers to unknown identifier: UpdateAdb","source":"\nfunc ExampleUpdateAdb() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_database_test.go:135:1","message":"ExampleUpdateAdbAcl refers to unknown identifier: UpdateAdbAcl","source":"\nfunc ExampleUpdateAdbAcl() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_database_test.go:156:1","message":"ExampleUpdateAdbLisenceType refers to unknown identifier: UpdateAdbLisenceType","source":"\nfunc ExampleUpdateAdbLisenceType() {\n\tc, clerr := database.NewDatabaseClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_databasetools_test.go:143:1","message":"ExampleCreateADBsConnectionWithPublicIp refers to unknown identifier: CreateADBsConnectionWithPublicIp","source":"//\t+---------------------------------+\nfunc ExampleCreateADBsConnectionWithPublicIp() {\n\t// Parses environment variables, .oci/config, and sets up the SDK clients"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_databasetools_test.go:256:1","message":"ExampleCreateADBsConnectionWithPrivateEndpoint refers to unknown identifier: CreateADBsConnectionWithPrivateEndpoint","source":"//\t+---------------------------------+\nfunc ExampleCreateADBsConnectionWithPrivateEndpoint() {\n\t// Parses environment variables, .oci/config, and sets up the SDK clients"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_databasetools_test.go:347:1","message":"ExampleCreateMySqlConnectionWithPublicIp refers to unknown identifier: CreateMySqlConnectionWithPublicIp","source":"//\t+---------------------------------+\nfunc ExampleCreateMySqlConnectionWithPublicIp() {\n\t// Parses environment variables, .oci/config, and sets up the SDK clients"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_databasetools_test.go:439:1","message":"ExampleCreateMySqlDbSystemConnectionWithPrivateEndpoint refers to unknown identifier: CreateMySqlDbSystemConnectionWithPrivateEndpoint","source":"//\t+---------------------------------+\nfunc ExampleCreateMySqlDbSystemConnectionWithPrivateEndpoint() {\n\t// Parses environment variables, .oci/config, and sets up the SDK clients"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_datalabelingservice_test.go:16:1","message":"ExampleCreateDataset refers to unknown identifier: CreateDataset","source":"// ExampleCreateDataset to create a dataset in a given compartment Id.\nfunc ExampleCreateDataset() {\n\tcompartment := \"REPLACE_WITH_COMPARTMENT_OCID\""},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_datalabelingservice_test.go:61:1","message":"ExampleGetDataset refers to unknown identifier: GetDataset","source":"// ExampleGetDataset to get dataset details from a given dataset Id.\nfunc ExampleGetDataset() {\n\tdatasetId := \"REPLACE_WITH_DATASET_OCID\""},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_datalabelingservice_test.go:82:1","message":"ExampleListDataset refers to unknown identifier: ListDataset","source":"// ExampleListDataset is to list all dataset in a given compartment Id.\nfunc ExampleListDataset() {\n\tcompartment := \"REPLACE_WITH_COMPARTMENT_OCID\""},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_datalabelingservice_test.go:105:1","message":"ExampleDeleteDataset refers to unknown identifier: DeleteDataset","source":"// ExampleDeleteDataset to  delete a existing dataset.\nfunc ExampleDeleteDataset() {\n\tdatasetId := \"REPLACE_WITH_DATASET_OCID\""},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_datalabelingservicedataplane_test.go:17:1","message":"ExampleCreateRecord refers to unknown identifier: CreateRecord","source":"\nfunc ExampleCreateRecord() {\n\tdatasetId := \"REPLACE_WITH_DATASET_OCID\""},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_datalabelingservicedataplane_test.go:63:1","message":"ExampleGetRecords refers to unknown identifier: GetRecords","source":"\nfunc ExampleGetRecords() {\n\trecordId := \"REPLACE_WITH_RECORD_OCID\""},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_datalabelingservicedataplane_test.go:92:1","message":"ExampleListRecords refers to unknown identifier: ListRecords","source":"\nfunc ExampleListRecords() {\n\tdatasetId := \"REPLACE_WITH_DATASET_OCID\""},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_datalabelingservicedataplane_test.go:123:1","message":"ExampleDeleteRecord refers to unknown identifier: DeleteRecord","source":"\nfunc ExampleDeleteRecord() {\n\trecordId := \"REPLACE_WITH_RECORD_OCID\""},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_dns_test.go:22:1","message":"ExampleDnsZone refers to unknown identifier: DnsZone","source":"// If optional TARGET_COMPARTMENT_ID env var is set, it will also move the DNS Zone to the compartment.\nfunc ExampleDnsZone() {\n\tclient, err := dns.NewDnsClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_dns_test.go:101:1","message":"ExampleDnsSteeringPolicy refers to unknown identifier: DnsSteeringPolicy","source":"// If optional TARGET_COMPARTMENT_ID env var is set, it will also move the DNS Steering Policy to the compartment.\nfunc ExampleDnsSteeringPolicy() {\n\tclient, err := dns.NewDnsClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_email_test.go:23:1","message":"ExampleEmailSender refers to unknown identifier: EmailSender","source":"\nfunc ExampleEmailSender() {\n\tclient, err := email.NewEmailClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_eventually_consistent_retry_behavior_test.go:34:1","message":"ExampleEventuallyConsistentRetryBehavior_Default refers to unknown identifier: EventuallyConsistentRetryBehavior","source":"// been changed to prevent the example from automatically running as a test.\nfunc ExampleEventuallyConsistentRetryBehavior_Default() {\n\t// setup"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_eventually_consistent_retry_behavior_test.go:119:1","message":"ExampleEventuallyConsistentRetryBehavior_UnlimitedAttempts refers to unknown identifier: EventuallyConsistentRetryBehavior","source":"// been changed to prevent the example from automatically running as a test.\nfunc ExampleEventuallyConsistentRetryBehavior_UnlimitedAttempts() {\n\t// setup"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_eventually_consistent_retry_behavior_test.go:213:1","message":"ExampleEventuallyConsistentRetryBehavior_MakeEventuallyConsistentChange refers to unknown identifier: EventuallyConsistentRetryBehavior","source":"// by setting the OCI_GO_SDK_EC_CONFIG environment variable to \"file,\u003ctimestampFile\u003e\"\nfunc ExampleEventuallyConsistentRetryBehavior_MakeEventuallyConsistentChange() {\n\t// setup"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_eventually_consistent_retry_behavior_test.go:242:1","message":"ExampleEventuallyConsistentRetryBehavior_RetryIfEventuallyConsistentChangeMade refers to unknown identifier: EventuallyConsistentRetryBehavior","source":"// That's why the \"Output:\" line has been changed to prevent the example from automatically running as a test.\nfunc ExampleEventuallyConsistentRetryBehavior_RetryIfEventuallyConsistentChangeMade() {\n\t// setup"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_functions_test.go:47:1","message":"ExampleFunctionInvoke refers to unknown identifier: FunctionInvoke","source":"*/\nfunc ExampleFunctionInvoke() {\n\tmanagementClient, err := functions.NewFunctionsManagementClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_healthchecks_test.go:134:1","message":"ExampleHealthChecksHttpSamples refers to unknown identifier: HealthChecksHttpSamples","source":"\nfunc ExampleHealthChecksHttpSamples() {\n\tctx := context.Background()"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_healthchecks_test.go:265:1","message":"ExampleHealthChecksPingSamples refers to unknown identifier: HealthChecksPingSamples","source":"\nfunc ExampleHealthChecksPingSamples() {\n\tctx := context.Background()"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_identity_test.go:23:1","message":"ExampleListAvailabilityDomains refers to unknown identifier: ListAvailabilityDomains","source":"// the value for the compartment ID (remember that the tenancy is simply the root compartment).\nfunc ExampleListAvailabilityDomains() {\n\tc, err := identity.NewIdentityClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_identity_test.go:46:1","message":"ExampleListGroupsWithCustomSignedHeader refers to unknown identifier: ListGroupsWithCustomSignedHeader","source":"// ExampleListGroupsWithCustomSignedHeader Lists groups by passing a custom signed header in the request\nfunc ExampleListGroupsWithCustomSignedHeader() {\n\tprovider := common.DefaultConfigProvider()"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_instance_configs_test.go:26:1","message":"ExampleCreateAndUseInstanceConfiguration refers to unknown identifier: CreateAndUseInstanceConfiguration","source":"// Example to showcase instance configuration create and operations, and eventual teardown\nfunc ExampleCreateAndUseInstanceConfiguration() {\n\tInstanceConfigsParseEnvironmentVariables()"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_instance_pools_test.go:34:1","message":"ExampleCreateAndWaitForRunningInstancePool refers to unknown identifier: CreateAndWaitForRunningInstancePool","source":"// Example to showcase instance pool create and operations, and eventual teardown\nfunc ExampleCreateAndWaitForRunningInstancePool() {\n\tInstancePoolsParseEnvironmentVariables()"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_instance_principals_test.go:26:1","message":"ExampleInstancePrincipals refers to unknown identifier: InstancePrincipals","source":"\nfunc ExampleInstancePrincipals() {\n"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_instance_principals_test.go:54:1","message":"ExampleInstancePrincipalsWithCustomClient refers to unknown identifier: InstancePrincipalsWithCustomClient","source":"// Similar to the example above, this example shows how to customize the client.\nfunc ExampleInstancePrincipalsWithCustomClient() {\n"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_keymanagement_test.go:21:1","message":"ExampleVaultOperations refers to unknown identifier: VaultOperations","source":"// and cancel a scheduled deletion of a KMS vault\nfunc ExampleVaultOperations() {\n\tvaultClient, clientError := keymanagement.NewKmsVaultClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_keymanagement_test.go:58:1","message":"ExampleKeyOperations refers to unknown identifier: KeyOperations","source":"// ExampleKeyManagement_KeyOperations shows how to create, enable and disable a KMS key\nfunc ExampleKeyOperations() {\n\tvaultClient, clientError := keymanagement.NewKmsVaultClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_keymanagement_test.go:162:1","message":"ExampleCryptoOperations refers to unknown identifier: CryptoOperations","source":"\nfunc ExampleCryptoOperations() {\n\tvaultClient, clientError := keymanagement.NewKmsVaultClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_loadbalancer_test.go:40:1","message":"ExampleCreateLoadbalancer refers to unknown identifier: CreateLoadbalancer","source":"\nfunc ExampleCreateLoadbalancer() {\n\tc, clerr := loadbalancer.NewLoadBalancerClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_objectstorage_multi_download_test.go:22:1","message":"ExampleMultipartDownload refers to unknown identifier: MultipartDownload","source":"// ExampleMultipartDownload shows how to use get object API to perform multi-part download operation\nfunc ExampleMultipartDownload() {\n\tc, err := objectstorage.NewObjectStorageClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_objectstorage_test.go:24:1","message":"ExampleObjectStorage_UploadFile refers to unknown identifier: ObjectStorage","source":"// ExampleObjectStorage_UploadFile shows how to create a bucket and upload a file\nfunc ExampleObjectStorage_UploadFile() {\n\tc, clerr := objectstorage.NewObjectStorageClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_objectstorage_test.go:58:1","message":"ExampleObjectStorage_UploadManager_UploadFile refers to unknown identifier: ObjectStorage","source":"\nfunc ExampleObjectStorage_UploadManager_UploadFile() {\n\tc, clerr := objectstorage.NewObjectStorageClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_objectstorage_test.go:128:1","message":"ExampleObjectStorage_UploadManager_Stream refers to unknown identifier: ObjectStorage","source":"\nfunc ExampleObjectStorage_UploadManager_Stream() {\n\tc, clerr := objectstorage.NewObjectStorageClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_objectstorage_test.go:202:1","message":"ExampleObjectStorage_GetNamespace refers to unknown identifier: ObjectStorage","source":"// ExampleObjectStorage_GetNamespace shows how to get namespace providing compartmentId.\nfunc ExampleObjectStorage_GetNamespace() {\n\tc, clerr := objectstorage.NewObjectStorageClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_objectstorage_test.go:222:1","message":"ExampleObjectStorage_GetObjectUsingRealmSpecificEndpoint refers to unknown identifier: ObjectStorage","source":"\nfunc ExampleObjectStorage_GetObjectUsingRealmSpecificEndpoint() {\n\t// This example shows how to use realm specific endpoint to get object."},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_quotas_test.go:84:1","message":"ExampleQuotas refers to unknown identifier: Quotas","source":"// ExampleQuotas runs an example demonstrating the use of OCI Golang SDK for managing Quotas\nfunc ExampleQuotas() {\n"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_rawrequest_test.go:20:1","message":"ExampleListUsers_RawRequest refers to unknown identifier: ListUsers","source":"// ExampleRawRequest compose a request, sign it and send to server\nfunc ExampleListUsers_RawRequest() {\n\t// build the url"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_resourcemanager_test.go:19:1","message":"ExampleResourceManager refers to unknown identifier: ResourceManager","source":"// The comparement id is read from the environment variable OCI_COMPARTMENT_ID\nfunc ExampleResourceManager() {\n\tprovider := common.DefaultConfigProvider()"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_resourcesearch_test.go:19:1","message":"Example_ResourceSearch has malformed example suffix: ResourceSearch","source":"\nfunc Example_ResourceSearch() {\n\tclient, err := resourcesearch.NewResourceSearchClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_retry_test.go:129:1","message":"ExampleCustomRetry refers to unknown identifier: CustomRetry","source":"// refer to example_core_test.go-\u003eExampleLaunchInstance for more examples\nfunc ExampleCustomRetry() {\n\t// create and delete group with retry"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_retry_test.go:220:1","message":"ExampleUnlimitedAttemptsRetry refers to unknown identifier: UnlimitedAttemptsRetry","source":"// for Create and Delete groups, please refer to example_core_test.go-\u003eExampleLaunchInstance for more examples\nfunc ExampleUnlimitedAttemptsRetry() {\n\t// create and delete group with retry"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_securityTokenBasedAuth_test.go:32:1","message":"ExampleCreateAndUseSecurityTokenBasedConfiguration refers to unknown identifier: CreateAndUseSecurityTokenBasedConfiguration","source":"\nfunc ExampleCreateAndUseSecurityTokenBasedConfiguration() {\n\thomeFolder := getHomeFolder()"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_tagging_test.go:20:1","message":"ExampleTagging refers to unknown identifier: Tagging","source":"// ExampleTagging shows the sample for tag and tagNamespace operations: create, update, get, list etc...\nfunc ExampleTagging() {\n\tc, err := identity.NewIdentityClientWithConfigurationProvider(common.DefaultConfigProvider())"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_tagging_test.go:117:1","message":"ExampleFreeformAndDefinedTag refers to unknown identifier: FreeformAndDefinedTag","source":"// ExampleFreeformAndDefinedTag shows how to use freeform and defined tags\nfunc ExampleFreeformAndDefinedTag() {\n\t// create a tag namespace and two tags"},{"package_id":"github.com/oracle/oci-go-sdk/v65/example [github.com/oracle/oci-go-sdk/v65/example.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oracle/oci-go-sdk/v65@v65.41.1/example/example_work_request_test.go:32:1","message":"ExampleWorkRequests refers to unknown identifier: WorkRequests","source":"\nfunc ExampleWorkRequests() {\n\tclient, err := workrequests.NewWorkRequestClientWithConfigurationProvider(common.DefaultConfigProvider())"}]}
{"created_at":"2023-06-22 17:17:31.11314 UTC","module_path":"github.com/hashicorp/yamux","version":"v0.1.1","sort_version":"0,1,1~","commit_time":"2022-07-25 17:20:20 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:181:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:212:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:215:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif id := stream.StreamID(); id != 1 {\n\t\t\tt.Fatalf(\"bad: %v\", id)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:218:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := stream.Close(); err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:226:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:229:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif id := stream.StreamID(); id != 2 {\n\t\t\tt.Fatalf(\"bad: %v\", id)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:232:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := stream.Close(); err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:240:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:243:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif id := stream.StreamID(); id != 2 {\n\t\t\tt.Fatalf(\"bad: %v\", id)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:246:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := stream.Close(); err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:254:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:257:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif id := stream.StreamID(); id != 1 {\n\t\t\tt.Fatalf(\"bad: %v\", id)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:260:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := stream.Close(); err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:336:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:344:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:347:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := stream.Close(); err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:407:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:411:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif server.NumStreams() != 1 {\n\t\t\tt.Fatalf(\"bad\")\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:418:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:421:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif n != 4 {\n\t\t\t\tt.Fatalf(\"short read: %d\", n)\n\t\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:424:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif string(buf) != \"test\" {\n\t\t\t\tt.Fatalf(\"bad: %s\", buf)\n\t\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:429:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := stream.Close(); err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:437:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:441:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif client.NumStreams() != 1 {\n\t\t\tt.Fatalf(\"bad\")\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:447:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:450:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif n != 4 {\n\t\t\t\tt.Fatalf(\"short write %d\", n)\n\t\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:455:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := stream.Close(); err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:500:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:507:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:510:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif n != recvSize {\n\t\t\t\tt.Fatalf(\"short read: %d\", n)\n\t\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:515:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif buf[idx] != byte(idx%256) {\n\t\t\t\t\tt.Fatalf(\"bad: %v %v %v\", i, idx, buf[idx])\n\t\t\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:521:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := stream.Close(); err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:531:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:536:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:539:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif n != len(data) {\n\t\t\tt.Fatalf(\"short write %d\", n)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:543:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := stream.Close(); err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:625:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\twg.Add(2)\n\t\tgo acceptor(i)\n\t\tgo sender(i)"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:625:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\twg.Add(2)\n\t\tgo acceptor(i)\n\t\tgo sender(i)"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:625:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\twg.Add(2)\n\t\tgo acceptor(i)\n\t\tgo sender(i)"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:626:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tgo acceptor(i)\n\t\tgo sender(i)\n\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:626:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tgo acceptor(i)\n\t\tgo sender(i)\n\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:626:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tgo acceptor(i)\n\t\tgo sender(i)\n\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:718:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\twg.Add(2)\n\t\tgo acceptor(i)\n\t\tgo sender(i)"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:718:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\twg.Add(2)\n\t\tgo acceptor(i)\n\t\tgo sender(i)"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:718:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\twg.Add(2)\n\t\tgo acceptor(i)\n\t\tgo sender(i)"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:718:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\twg.Add(2)\n\t\tgo acceptor(i)\n\t\tgo sender(i)"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:718:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\twg.Add(2)\n\t\tgo acceptor(i)\n\t\tgo sender(i)"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:718:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\twg.Add(2)\n\t\tgo acceptor(i)\n\t\tgo sender(i)"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:719:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tgo acceptor(i)\n\t\tgo sender(i)\n\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:719:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tgo acceptor(i)\n\t\tgo sender(i)\n\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:719:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tgo acceptor(i)\n\t\tgo sender(i)\n\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:719:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tgo acceptor(i)\n\t\tgo sender(i)\n\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:719:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tgo acceptor(i)\n\t\tgo sender(i)\n\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:719:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tgo acceptor(i)\n\t\tgo sender(i)\n\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1171:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1178:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1181:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif !bytes.Equal(buf, []byte{0, 1, 2, 3}) {\n\t\t\t\tt.Fatalf(\"bad header\")\n\t\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1186:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1189:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif recv != n {\n\t\t\t\tt.Fatalf(\"bad: %v\", recv)\n\t\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1198:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1204:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1210:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1213:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif sent != n {\n\t\t\t\tt.Fatalf(\"bad: %v\", sent)\n\t\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1240:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1277:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1283:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1286:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif int64(n) != flood {\n\t\t\tt.Fatalf(\"short write: %d\", n)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1298:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1308:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != ErrConnectionWriteTimeout {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1334:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1339:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif wr.sendWindow != client.config.MaxStreamWindowSize {\n\t\t\tt.Fatalf(\"sendWindow: exp=%d, got=%d\", client.config.MaxStreamWindowSize, wr.sendWindow)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1344:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1347:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif int64(n) != flood {\n\t\t\tt.Fatalf(\"short write: %d\", n)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1350:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif wr.sendWindow != 0 {\n\t\t\tt.Fatalf(\"sendWindow: exp=%d, got=%d\", 0, wr.sendWindow)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1382:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1394:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1411:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t} else {\n\t\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1440:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1454:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t} else {\n\t\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1469:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1483:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err = client.Ping(); err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1503:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1515:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1528:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != ErrConnectionWriteTimeout {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"github.com/hashicorp/yamux [github.com/hashicorp/yamux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hashicorp/yamux@v0.1.1/session_test.go:1531:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif n != 0 {\n\t\t\tt.Fatalf(\"lied about writes: %d\", n)\n\t\t}"}]}
{"created_at":"2023-06-22 17:49:36.525393 UTC","module_path":"github.com/gotemplates/core","version":"v0.0.0-20230320174242-58692e49bd1f","sort_version":"0,0,0,~20230320174242-58692e49bd1f","commit_time":"2023-03-20 17:42:42 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/gotemplates/core/exchange [github.com/gotemplates/core/exchange.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/exchange/deserialize_test.go:60:1","message":"ExampleDeserialize_Decode refers to unknown field or method: Deserialize.Decode","source":"\nfunc ExampleDeserialize_Decode() {\n\taddrV1 := addressV1{"},{"package_id":"github.com/gotemplates/core/exchange [github.com/gotemplates/core/exchange.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/exchange/exchange_test.go:61:1","message":"ExampleDo_InvalidArgument refers to unknown field or method: Do.InvalidArgument","source":"\nfunc ExampleDo_InvalidArgument() {\n\tvar t Default"},{"package_id":"github.com/gotemplates/core/exchange [github.com/gotemplates/core/exchange.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/exchange/exchange_test.go:72:1","message":"ExampleDo_Proxy_HttpError refers to unknown field or method: Do.Proxy","source":"\nfunc ExampleDo_Proxy_HttpError() {\n\tvar t Default"},{"package_id":"github.com/gotemplates/core/exchange [github.com/gotemplates/core/exchange.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/exchange/exchange_test.go:72:1","message":"ExampleDo_Proxy_HttpError has malformed example suffix: HttpError","source":"\nfunc ExampleDo_Proxy_HttpError() {\n\tvar t Default"},{"package_id":"github.com/gotemplates/core/exchange [github.com/gotemplates/core/exchange.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/exchange/exchange_test.go:84:1","message":"ExampleDo_Proxy_IOError refers to unknown field or method: Do.Proxy","source":"\nfunc ExampleDo_Proxy_IOError() {\n\tvar t Default"},{"package_id":"github.com/gotemplates/core/exchange [github.com/gotemplates/core/exchange.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/exchange/exchange_test.go:84:1","message":"ExampleDo_Proxy_IOError has malformed example suffix: IOError","source":"\nfunc ExampleDo_Proxy_IOError() {\n\tvar t Default"},{"package_id":"github.com/gotemplates/core/exchange [github.com/gotemplates/core/exchange.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/exchange/exchange_test.go:101:1","message":"ExampleDo_Proxy_HellowWorld refers to unknown field or method: Do.Proxy","source":"\nfunc ExampleDo_Proxy_HellowWorld() {\n\tvar t Default"},{"package_id":"github.com/gotemplates/core/exchange [github.com/gotemplates/core/exchange.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/exchange/exchange_test.go:101:1","message":"ExampleDo_Proxy_HellowWorld has malformed example suffix: HellowWorld","source":"\nfunc ExampleDo_Proxy_HellowWorld() {\n\tvar t Default"},{"package_id":"github.com/gotemplates/core/exchange [github.com/gotemplates/core/exchange.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/exchange/exchange_test.go:119:1","message":"ExampleDo_Proxy_ServiceUnavailable refers to unknown field or method: Do.Proxy","source":"\nfunc ExampleDo_Proxy_ServiceUnavailable() {\n\tvar t Default"},{"package_id":"github.com/gotemplates/core/exchange [github.com/gotemplates/core/exchange.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/exchange/exchange_test.go:119:1","message":"ExampleDo_Proxy_ServiceUnavailable has malformed example suffix: ServiceUnavailable","source":"\nfunc ExampleDo_Proxy_ServiceUnavailable() {\n\tvar t Default"},{"package_id":"github.com/gotemplates/core/exchange [github.com/gotemplates/core/exchange.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/exchange/write_test.go:23:1","message":"ExampleWriteResponse_NoStatus refers to unknown field or method: WriteResponse.NoStatus","source":"\nfunc ExampleWriteResponse_NoStatus() {\n\tstr := \"text response\""},{"package_id":"github.com/gotemplates/core/exchange [github.com/gotemplates/core/exchange.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/exchange/write_test.go:41:1","message":"ExampleWriteResponse_StatusOK refers to unknown field or method: WriteResponse.StatusOK","source":"\nfunc ExampleWriteResponse_StatusOK() {\n\tstr := \"text response\""},{"package_id":"github.com/gotemplates/core/exchange [github.com/gotemplates/core/exchange.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/exchange/write_test.go:56:1","message":"ExampleWriteResponse_StatusNotOK refers to unknown field or method: WriteResponse.StatusNotOK","source":"\nfunc ExampleWriteResponse_StatusNotOK() {\n\tstr := \"server unavailable\""},{"package_id":"github.com/gotemplates/core/exchange/httptest [github.com/gotemplates/core/exchange/httptest.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/exchange/httptest/reader_test.go:9:1","message":"ExampleStringReader refers to unknown identifier: StringReader","source":"\nfunc ExampleStringReader() {\n\ts := \"This is an example of content\""},{"package_id":"github.com/gotemplates/core/exchange/httptest [github.com/gotemplates/core/exchange/httptest.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/exchange/httptest/reader_test.go:22:1","message":"ExampleIOError refers to unknown identifier: IOError","source":"\nfunc ExampleIOError() {\n\ts := \"This is an example of content\""},{"package_id":"github.com/gotemplates/core/exchange/httptest [github.com/gotemplates/core/exchange/httptest.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/exchange/httptest/response_test.go:8:1","message":"ExampleHtmlResponse refers to unknown identifier: HtmlResponse","source":"\nfunc ExampleHtmlResponse() {\n\tresp, err0 := ReadResponse(fsys, \"resource/http/html-response.html\")"},{"package_id":"github.com/gotemplates/core/runtime [github.com/gotemplates/core/runtime.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/runtime/context_test.go:9:1","message":"ExampleContextWithRequestExisting refers to unknown identifier: ContextWithRequestExisting","source":"\nfunc ExampleContextWithRequestExisting() {\n\tctx := ContextWithRequestId(context.Background(), \"123-456-abc\")"},{"package_id":"github.com/gotemplates/core/runtime [github.com/gotemplates/core/runtime.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/runtime/error_test.go:8:1","message":"ExampleNoOpErrorHandler_Handle refers to unknown identifier: NoOpErrorHandler","source":"\nfunc ExampleNoOpErrorHandler_Handle() {\n\tlocation := \"/test\""},{"package_id":"github.com/gotemplates/core/runtime [github.com/gotemplates/core/runtime.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/runtime/error_test.go:30:1","message":"ExampleDebugHandler_Handle refers to unknown identifier: DebugHandler","source":"\nfunc ExampleDebugHandler_Handle() {\n\tlocation := \"/DebugHandler\""},{"package_id":"github.com/gotemplates/core/runtime [github.com/gotemplates/core/runtime.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/runtime/error_test.go:60:1","message":"ExampleLogHandler_Handle refers to unknown identifier: LogHandler","source":"\nfunc ExampleLogHandler_Handle() {\n\tlocation := \"/LogHandler\""},{"package_id":"github.com/gotemplates/core/runtime [github.com/gotemplates/core/runtime.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/runtime/error_test.go:107:1","message":"ExampleErrorHandleStatus refers to unknown identifier: ErrorHandleStatus","source":"\nfunc ExampleErrorHandleStatus() {\n\tloc := pkgPath + \"/ErrorHandleStatus\""},{"package_id":"github.com/gotemplates/core/runtime [github.com/gotemplates/core/runtime.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/runtime/expansion_test.go:23:1","message":"ExampleExpand_InvalidLookup refers to unknown field or method: Expand.InvalidLookup","source":"\nfunc ExampleExpand_InvalidLookup() {\n\t// Lookup name not found"},{"package_id":"github.com/gotemplates/core/runtime [github.com/gotemplates/core/runtime.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/runtime/expansion_test.go:34:1","message":"ExampleExpand_InvalidDelimiters refers to unknown field or method: Expand.InvalidDelimiters","source":"\nfunc ExampleExpand_InvalidDelimiters() {\n\tvar err error"},{"package_id":"github.com/gotemplates/core/runtime [github.com/gotemplates/core/runtime.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/runtime/expansion_test.go:65:1","message":"ExampleExpand_Valid refers to unknown field or method: Expand.Valid","source":"\nfunc ExampleExpand_Valid() {\n\ts := \"\""},{"package_id":"github.com/gotemplates/core/runtime [github.com/gotemplates/core/runtime.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/runtime/map_test.go:31:1","message":"ExampleParseLine refers to unknown identifier: ParseLine","source":"\nfunc ExampleParseLine() {\n\tkey, val, err := parseLine(\"key : value\\r\\n\")"},{"package_id":"github.com/gotemplates/core/runtime [github.com/gotemplates/core/runtime.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/runtime/output_test.go:34:1","message":"ExampleOutputHandler2 refers to unknown identifier: OutputHandler2","source":"\nfunc ExampleOutputHandler2() {\n\th := Output2[NilOutput]()"},{"package_id":"github.com/gotemplates/core/runtime [github.com/gotemplates/core/runtime.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/runtime/proxy_test.go:27:1","message":"ExampleProxyContext refers to unknown identifier: ProxyContext","source":"\nfunc ExampleProxyContext() {\n\tk1 := \"1\""},{"package_id":"github.com/gotemplates/core/runtime [github.com/gotemplates/core/runtime.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/runtime/proxy_test.go:64:1","message":"ExampleProxyContext_Proxy refers to unknown identifier: ProxyContext","source":"\nfunc ExampleProxyContext_Proxy() {\n\tctx0 := ContextWithProxy(nil, proxyGet)"},{"package_id":"github.com/gotemplates/core/runtime [github.com/gotemplates/core/runtime.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gotemplates/core@v0.0.0-20230320174242-58692e49bd1f/runtime/ternary_test.go:7:1","message":"ExamplePrimer refers to unknown identifier: Primer","source":"\nfunc ExamplePrimer() {\n\tcurrent := true"}]}
{"created_at":"2023-06-22 17:53:21.571636 UTC","module_path":"github.com/fgrid/uuid","version":"v0.1.0","sort_version":"0,1,0~","commit_time":"2015-04-02 11:18:07 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fgrid/uuid@v0.1.0/uuid_test.go:38:1","message":"ExampleString_NIL refers to unknown identifier: String","source":"\nfunc ExampleString_NIL() {\n\tfmt.Printf(\"NIL-UUID: %s\", NIL.String())"}]}
{"created_at":"2023-06-22 17:35:58.286185 UTC","module_path":"aqwari.net/xml","version":"v0.0.0-20210331023308-d9421b293817","sort_version":"0,0,0,~20210331023308-d9421b293817","commit_time":"2021-03-31 02:33:08 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"aqwari.net/xml/xmltree_test [aqwari.net/xml/xmltree.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/aqwari.net/xml@v0.0.0-20210331023308-d9421b293817/xmltree/example_test.go:228:1","message":"ExampleMarshalNested refers to unknown identifier: MarshalNested","source":"\nfunc ExampleMarshalNested() {\n\tvar input = []byte(`\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e"}]}
{"created_at":"2023-06-22 17:36:15.011948 UTC","module_path":"chainmaker.org/chainmaker/common/v2","version":"v2.3.1","sort_version":"2,3,1~","commit_time":"2022-11-03 08:03:28 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"chainmaker.org/chainmaker/common/v2/wal [chainmaker.org/chainmaker/common/v2/wal.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/chainmaker.org/chainmaker/common/v2@v2.3.1/wal/wal_test.go:953:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t\t// nolint\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:57:48.853699 UTC","module_path":"github.com/lovego/errs","version":"v0.0.7","sort_version":"0,0,7~","commit_time":"2021-12-14 10:23:36 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/lovego/errs [github.com/lovego/errs.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovego/errs@v0.0.7/error_test.go:60:1","message":"ExampleTrace_Error refers to unknown field or method: Trace.Error","source":"\nfunc ExampleTrace_Error() {\n\terr := Trace(New(\"code\", \"message\")).(*Error)"}]}
{"created_at":"2023-06-22 17:28:32.850726 UTC","module_path":"github.com/paypal/gatt","version":"v0.0.0-20151011220935-4ae819d591cf","sort_version":"0,0,0,~20151011220935-4ae819d591cf","commit_time":"2015-10-11 22:09:35 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/paypal/gatt@v0.0.0-20151011220935-4ae819d591cf/option_linux_test.go:22:1","message":"ExampleSetAdvertisingData refers to unknown identifier: SetAdvertisingData","source":"\nfunc ExampleSetAdvertisingData() {\n\t// Manually crafting an advertising packet with a type field, and a service uuid - 0xFE01."}]}
{"created_at":"2023-06-22 17:41:01.016127 UTC","module_path":"github.com/rwxrob/conf","version":"v0.8.2","sort_version":"0,8,2~","commit_time":"2022-11-17 18:02:23 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/rwxrob/conf_test [github.com/rwxrob/conf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rwxrob/conf@v0.8.2/conf_test.go:37:1","message":"ExampleQuery refers to unknown identifier: Query","source":"\nfunc ExampleQuery() {\n"}]}
{"created_at":"2023-06-22 17:52:49.836465 UTC","module_path":"github.com/uthng/golog","version":"v0.2.1","sort_version":"0,2,1~","commit_time":"2020-04-22 00:38:38 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/uthng/golog@v0.2.1/log_example_test.go:21:1","message":"ExampleMultiple refers to unknown identifier: Multiple","source":"\nfunc ExampleMultiple() {\n\tfile, err := os.OpenFile(\"file.txt\", os.O_CREATE|os.O_WRONLY|os.O_APPEND, 0666)"}]}
{"created_at":"2023-06-22 17:22:36.953395 UTC","module_path":"github.com/go-redsync/redsync/v4","version":"v4.8.1","sort_version":"4,8,1~","commit_time":"2023-02-06 17:51:12 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/go-redsync/redsync/v4 [github.com/go-redsync/redsync/v4.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-redsync/redsync/v4@v4.8.1/mutex_test.go:21:7","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\tif err != nil {\n\t\t\t\t\t\tt.Fatalf(\"mutex lock failed: %s\", err)\n\t\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:33:27.440655 UTC","module_path":"github.com/mikespook/gorbac","version":"v2.3.0+incompatible","sort_version":"2,3,0~","commit_time":"2022-03-09 22:09:45 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mikespook/gorbac@v2.3.0+incompatible/example_test.go:19:1","message":"ExampleRbac refers to unknown identifier: Rbac","source":"*/\nfunc ExampleRbac() {\n\trbac := gorbac.New()"}]}
{"created_at":"2023-06-22 17:32:06.74409 UTC","module_path":"github.com/tsenart/vegeta/v12","version":"v12.8.4","sort_version":"a12,8,4~","commit_time":"2020-10-11 10:37:33 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/tsenart/vegeta/v12/lib/lttb [github.com/tsenart/vegeta/v12/lib/lttb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tsenart/vegeta/v12@v12.8.4/lib/lttb/lttb_test.go:54:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(msg(\"error: %v\", err))\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:24:14.797507 UTC","module_path":"github.com/webx-top/db","version":"v1.23.17","sort_version":"1,a23,a17~","commit_time":"2023-04-02 06:52:19 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/webx-top/db/postgresql [github.com/webx-top/db/postgresql.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/webx-top/db@v1.23.17/postgresql/adapter_test.go:991:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:40:30.23472 UTC","module_path":"github.com/centurylinkcloud/clc-go-cli","version":"v1.1.0","sort_version":"1,1,0~","commit_time":"2016-11-22 09:40:14 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/commands_test [synthetic/commands.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/centurylinkcloud/clc-go-cli@v1.1.0/commands/commands_test.go:313:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:33:26.40227 UTC","module_path":"github.com/Cloud-Foundations/golib","version":"v0.5.0","sort_version":"0,5,0~","commit_time":"2023-02-17 15:17:17 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/Cloud-Foundations/golib/pkg/awsutil/presignauth/caller [github.com/Cloud-Foundations/golib/pkg/awsutil/presignauth/caller.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Cloud-Foundations/golib@v0.5.0/pkg/awsutil/presignauth/caller/impl_test.go:67:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:35:09.934227 UTC","module_path":"github.com/Redundancy/go-sync","version":"v0.0.0-20200808161209-d9b3aeb508db","sort_version":"0,0,0,~20200808161209-d9b3aeb508db","commit_time":"2020-08-08 16:12:09 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/Redundancy/go-sync/filechecksum [github.com/Redundancy/go-sync/filechecksum.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Redundancy/go-sync@v0.0.0-20200808161209-d9b3aeb508db/filechecksum/filechecksum_test.go:280:1","message":"ExampleFileChecksumGenerator_LoadChecksumsFromReader refers to unknown field or method: FileChecksumGenerator.LoadChecksumsFromReader","source":"\nfunc ExampleFileChecksumGenerator_LoadChecksumsFromReader() {\n\tconst BLOCKSIZE = 8096"}]}
{"created_at":"2023-06-22 17:50:42.163545 UTC","module_path":"go.elastic.co/ecslogrus","version":"v1.0.0","sort_version":"1,0,0~","commit_time":"2021-02-04 08:13:20 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"go.elastic.co/ecslogrus_test [go.elastic.co/ecslogrus.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.elastic.co/ecslogrus@v1.0.0/example_test.go:41:1","message":"ExampleFormatterError refers to unknown identifier: FormatterError","source":"\nfunc ExampleFormatterError() {\n\tlog := logrus.New()"}]}
{"created_at":"2023-06-22 17:21:06.787445 UTC","module_path":"github.com/Pallinder/go-randomdata","version":"v1.2.0","sort_version":"1,2,0~","commit_time":"2019-06-02 16:07:33 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Pallinder/go-randomdata@v1.2.0/random_data_example_test.go:5:1","message":"ExampleRandomdata refers to unknown identifier: Randomdata","source":"\nfunc ExampleRandomdata() {\n"}]}
{"created_at":"2023-06-22 17:46:29.254986 UTC","module_path":"github.com/c3sr/vipertags","version":"v1.0.0","sort_version":"1,0,0~","commit_time":"2021-02-10 02:56:05 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/c3sr/vipertags [github.com/c3sr/vipertags.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/c3sr/vipertags@v1.0.0/vipertags_test.go:39:1","message":"ExampleGetConfig refers to unknown identifier: GetConfig","source":"\nfunc ExampleGetConfig() {\n\t// ./config.yaml"}]}
{"created_at":"2023-06-22 17:47:09.644233 UTC","module_path":"github.com/dukex/mixpanel","version":"v1.0.1","sort_version":"1,0,1~","commit_time":"2022-07-04 23:01:05 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/dukex/mixpanel [github.com/dukex/mixpanel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dukex/mixpanel@v1.0.1/example_test.go:23:1","message":"ExamplePeople refers to unknown identifier: People","source":"\nfunc ExamplePeople() {\n\tclient := NewWithSecret(\"mytoken\", \"myapisecret\", \"\")"}]}
{"created_at":"2023-06-22 17:48:40.920908 UTC","module_path":"github.com/florianl/go-tc","version":"v0.4.2","sort_version":"0,4,2~","commit_time":"2022-12-24 10:04:35 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/florianl/go-tc_test [github.com/florianl/go-tc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/florianl/go-tc@v0.4.2/example_ematch_ipset_test.go:16:1","message":"ExampleEmatch_IPSetMatch refers to unknown field or method: Ematch.IPSetMatch","source":"\nfunc ExampleEmatch_IPSetMatch() {\n\ttcIface := \"ExampleEmatchIpset\""}]}
{"created_at":"2023-06-22 17:19:24.445856 UTC","module_path":"github.com/grpc-ecosystem/grpc-opentracing","version":"v0.0.0-20180507213350-8e809c8a8645","sort_version":"0,0,0,~20180507213350-8e809c8a8645","commit_time":"2018-05-07 21:33:50 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/go/otgrpc/test_test [synthetic/go/otgrpc/test.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/grpc-ecosystem/grpc-opentracing@v0.0.0-20180507213350-8e809c8a8645/go/otgrpc/test/interceptor_test.go:226:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := stream.Send(\u0026testpb.SimpleRequest{payload}); err != nil {\n\t\t\t\tt.Fatalf(\"Failed StreamingInputCall: %v\", err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:40:00.742617 UTC","module_path":"go.unistack.org/micro/v3","version":"v3.10.22","sort_version":"3,a10,a22~","commit_time":"2023-05-29 11:04:41 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"go.unistack.org/micro/v3/register [go.unistack.org/micro/v3/register.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.unistack.org/micro/v3@v3.10.22/register/memory_test.go:305:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(\"unexpected err\", err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:20:35.647571 UTC","module_path":"github.com/tarm/goserial","version":"v0.0.0-20151007205400-b3440c3c6355","sort_version":"0,0,0,~20151007205400-b3440c3c6355","commit_time":"2015-10-07 20:54:00 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tarm/goserial@v0.0.0-20151007205400-b3440c3c6355/basic_test.go:29:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:49:16.072241 UTC","module_path":"github.com/unidoc/timestamp","version":"v0.0.0-20200412005513-91597fd3793a","sort_version":"0,0,0,~20200412005513-91597fd3793a","commit_time":"2020-04-12 00:55:13 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/unidoc/timestamp_test [github.com/unidoc/timestamp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/unidoc/timestamp@v0.0.0-20200412005513-91597fd3793a/timestamp_example_test.go:17:1","message":"ExampleCreateRequest_ParseResponse refers to unknown field or method: CreateRequest.ParseResponse","source":"// it to the server and parsing the response.\nfunc ExampleCreateRequest_ParseResponse() {\n\ttsq, err := timestamp.CreateRequest(strings.NewReader(\"ExampleCreateRequestParseResponse\"), \u0026timestamp.RequestOptions{"}]}
{"created_at":"2023-06-22 17:37:50.305405 UTC","module_path":"go.cryptoscope.co/margaret","version":"v0.4.3","sort_version":"0,4,3~","commit_time":"2022-02-17 09:09:40 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"go.cryptoscope.co/margaret/internal/seqobsv_test [go.cryptoscope.co/margaret/internal/seqobsv.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.cryptoscope.co/margaret@v0.4.3/internal/seqobsv/simple_test.go:14:1","message":"ExampleInc refers to unknown identifier: Inc","source":"\nfunc ExampleInc() {\n\tsobs := seqobsv.New(0)"}]}
{"created_at":"2023-06-22 17:21:51.354543 UTC","module_path":"github.com/belogik/goes","version":"v0.0.0-20151229125003-e54d722c3aff","sort_version":"0,0,0,~20151229125003-e54d722c3aff","commit_time":"2015-12-29 12:50:03 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/belogik/goes@v0.0.0-20151229125003-e54d722c3aff/example_test.go:172:1","message":"ExampleConnectionOverrideHttpClient refers to unknown identifier: ConnectionOverrideHttpClient","source":"\nfunc ExampleConnectionOverrideHttpClient() {\n\ttr := \u0026http.Transport{"}]}
{"created_at":"2023-06-22 17:38:37.368234 UTC","module_path":"github.com/chaosblade-io/chaosblade-exec-os","version":"v1.7.2","sort_version":"1,7,2~","commit_time":"2023-05-18 08:30:31 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/chaosblade-io/chaosblade-exec-os/exec/network/tc [github.com/chaosblade-io/chaosblade-exec-os/exec/network/tc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/chaosblade-io/chaosblade-exec-os@v1.7.2/exec/network/tc/network_tc_test.go:20:1","message":"TestbuildTargetFilterPortAndIp has malformed name: first letter after 'Test' must not be lowercase","source":"}\nfunc TestbuildTargetFilterPortAndIp(t *testing.T) {\n\tvar tests []buildtargetfilterparam"}]}
{"created_at":"2023-06-22 17:22:43.349759 UTC","module_path":"github.com/RackSec/srslog","version":"v0.0.0-20180709174129-a4725f04ec91","sort_version":"0,0,0,~20180709174129-a4725f04ec91","commit_time":"2018-07-09 17:41:29 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/RackSec/srslog@v0.0.0-20180709174129-a4725f04ec91/srslog_test.go:514:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"syslog.Dial() failed: %v\", err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:32:13.921164 UTC","module_path":"github.com/nadoo/glider","version":"v0.16.3","sort_version":"0,a16,3~","commit_time":"2023-03-09 10:36:30 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/nadoo/glider/pkg/smux [github.com/nadoo/glider/pkg/smux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/nadoo/glider@v0.16.3/pkg/smux/session_test.go:301:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tcase \u003c-time.Tick(time.Second):\n\t\t\tt.Fatal(\"wait die chan timeout\")\n\t\t}"}]}
{"created_at":"2023-06-22 17:37:19.892697 UTC","module_path":"chainmaker.org/chainmaker/common/v3","version":"v3.0.0","sort_version":"3,0,0~","commit_time":"2022-12-19 11:59:51 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"chainmaker.org/chainmaker/common/v3/wal [chainmaker.org/chainmaker/common/v3/wal.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/chainmaker.org/chainmaker/common/v3@v3.0.0/wal/wal_test.go:953:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t\t// nolint\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:26:54.824519 UTC","module_path":"github.com/honeycombio/beeline-go","version":"v1.12.0","sort_version":"1,a12,0~","commit_time":"2023-06-06 14:27:04 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/honeycombio/beeline-go/wrappers/hnyecho [github.com/honeycombio/beeline-go/wrappers/hnyecho.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/honeycombio/beeline-go@v1.12.0/wrappers/hnyecho/hnyecho_test.go:7:1","message":"ExampleMiddleware refers to unknown identifier: Middleware","source":"\nfunc ExampleMiddleware() {\n\t// assume you have handlers for hello and bye"}]}
{"created_at":"2023-06-22 17:39:15.776266 UTC","module_path":"github.com/rveen/ogdl","version":"v1.1.0","sort_version":"1,1,0~","commit_time":"2018-02-01 07:29:41 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rveen/ogdl@v1.1.0/all_test.go:1705:1","message":"ExampleGraph_Set_Index has malformed example suffix: Index","source":"\nfunc ExampleGraph_Set_Index() {\n"}]}
{"created_at":"2023-06-22 17:24:39.182873 UTC","module_path":"github.com/hudl/fargo","version":"v1.4.0","sort_version":"1,4,0~","commit_time":"2021-07-14 09:54:15 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/hudl/fargo_test [github.com/hudl/fargo.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hudl/fargo@v1.4.0/example_vipupdate_test.go:59:1","message":"ExampleEurekaConnection_ScheduleSecureVIPAddressUpdates_context refers to unknown field or method: EurekaConnection.ScheduleSecureVIPAddressUpdates","source":"\nfunc ExampleEurekaConnection_ScheduleSecureVIPAddressUpdates_context() {\n\te := makeConnection()"}]}
{"created_at":"2023-06-22 17:27:31.419379 UTC","module_path":"github.com/oliamb/cutter","version":"v0.2.2","sort_version":"0,2,2~","commit_time":"2018-05-26 22:51:37 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oliamb/cutter@v0.2.2/example_test.go:38:1","message":"ExampleCropPng refers to unknown identifier: CropPng","source":"\nfunc ExampleCropPng() {\n\tf, err := os.Open(\"fixtures/dark.png\")"}]}
{"created_at":"2023-06-22 17:26:34.313914 UTC","module_path":"github.com/optiopay/kafka","version":"v2.0.7+incompatible","sort_version":"2,0,7~","commit_time":"2019-05-21 16:24:15 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/kafkatest [synthetic/kafkatest.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/optiopay/kafka@v2.0.7+incompatible/kafkatest/broker_test.go:18:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\twg.Add(1)\n\tgo readTestMessages(broker, t, \u0026wg)\n"}]}
{"created_at":"2023-06-22 17:29:58.269239 UTC","module_path":"gitlab.com/gitlab-org/gitlab-terminal","version":"v0.0.0-20230425165333-62e9b619707c","sort_version":"0,0,0,~20230425165333-62e9b619707c","commit_time":"2023-04-25 16:53:33 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"gitlab.com/gitlab-org/gitlab-terminal [gitlab.com/gitlab-org/gitlab-terminal.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/gitlab-org/gitlab-terminal@v0.0.0-20230425165333-62e9b619707c/stream_proxy_test.go:37:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"unexpected error from serve: %v\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:26:00.994158 UTC","module_path":"github.com/gobuffalo/pop/v6","version":"v6.1.1","sort_version":"6,1,1~","commit_time":"2023-01-18 12:53:48 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/gobuffalo/pop/v6/internal/randx [github.com/gobuffalo/pop/v6/internal/randx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gobuffalo/pop/v6@v6.1.1/internal/randx/string_test.go:28:5","message":"call to (*T).FailNow from a non-test goroutine","source":"\t\t\tif len(id) != 30 {\n\t\t\t\tt.FailNow()\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:44:16.976483 UTC","module_path":"github.com/barkimedes/go-deepcopy","version":"v0.0.0-20220514131651-17c30cfc62df","sort_version":"0,0,0,~20220514131651-17c30cfc62df","commit_time":"2022-05-14 13:16:51 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/barkimedes/go-deepcopy@v0.0.0-20220514131651-17c30cfc62df/deepcopy_test.go:80:1","message":"ExampleAvoidInfiniteLoops refers to unknown identifier: AvoidInfiniteLoops","source":"\nfunc ExampleAvoidInfiniteLoops() {\n\tx := \u0026Foo{"}]}
{"created_at":"2023-06-22 17:32:25.219049 UTC","module_path":"github.com/brendoncarroll/go-state","version":"v0.0.0-20230603163727-234f9bec78f5","sort_version":"0,0,0,~20230603163727-234f9bec78f5","commit_time":"2023-06-03 16:37:27 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/brendoncarroll/go-state [github.com/brendoncarroll/go-state.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/brendoncarroll/go-state@v0.0.0-20230603163727-234f9bec78f5/state_test.go:36:1","message":"ExampleSpanString refers to unknown identifier: SpanString","source":"\nfunc ExampleSpanString() {\n\tfmt.Println(Span[int]{})"}]}
{"created_at":"2023-06-22 17:17:22.086363 UTC","module_path":"github.com/cenk/backoff","version":"v2.2.1+incompatible","sort_version":"2,2,1~","commit_time":"2019-07-17 10:48:21 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cenk/backoff@v2.2.1+incompatible/example_test.go:23:1","message":"ExampleRetryContext refers to unknown identifier: RetryContext","source":"\nfunc ExampleRetryContext() {\n\t// A context"}]}
{"created_at":"2023-06-22 17:29:00.936599 UTC","module_path":"github.com/koding/logging","version":"v0.0.0-20160720134017-8b5a689ed69b","sort_version":"0,0,0,~20160720134017-8b5a689ed69b","commit_time":"2016-07-20 13:40:17 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/koding/logging@v0.0.0-20160720134017-8b5a689ed69b/logging_example_test.go:18:1","message":"ExampleContexted refers to unknown identifier: Contexted","source":"\nfunc ExampleContexted() {\n\t// Custom logger with new std out handler"}]}
{"created_at":"2023-06-22 17:57:31.575224 UTC","module_path":"gitlab.com/jaxnet/core/shard.core","version":"v1.6.1","sort_version":"1,6,1~","commit_time":"2021-03-10 19:34:04 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"gitlab.com/jaxnet/core/shard.core/node/blockchain_test [gitlab.com/jaxnet/core/shard.core/node/blockchain.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/jaxnet/core/shard.core@v1.6.1/node/blockchain/example_test.go:26:1","message":"ExampleBlockChain_ProcessBlock refers to unknown identifier: BlockChain","source":"// block to illustrate how an invalid block is handled.\nfunc ExampleBlockChain_ProcessBlock() {\n\t// Create a new database to store the accepted blocks into.  Typically"}]}
{"created_at":"2023-06-22 17:16:35.868778 UTC","module_path":"github.com/cenkalti/backoff","version":"v2.2.1+incompatible","sort_version":"2,2,1~","commit_time":"2019-07-17 10:48:21 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cenkalti/backoff@v2.2.1+incompatible/example_test.go:23:1","message":"ExampleRetryContext refers to unknown identifier: RetryContext","source":"\nfunc ExampleRetryContext() {\n\t// A context"}]}
{"created_at":"2023-06-22 17:46:03.042404 UTC","module_path":"github.com/markphelps/optional","version":"v0.10.0","sort_version":"0,a10,0~","commit_time":"2022-06-05 00:46:27 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/markphelps/optional_test [github.com/markphelps/optional.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/markphelps/optional@v0.10.0/example_test.go:182:2","message":"output comment block must be the last comment block","source":"\n\t// Output:\n\t// foo"}]}
{"created_at":"2023-06-22 17:54:36.672668 UTC","module_path":"github.com/spacemonkeygo/flagfile","version":"v0.0.0-20180426194429-0d750334dbb8","sort_version":"0,0,0,~20180426194429-0d750334dbb8","commit_time":"2018-04-26 19:44:29 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/utils_test [synthetic/utils.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/spacemonkeygo/flagfile@v0.0.0-20180426194429-0d750334dbb8/utils/setup_test.go:25:1","message":"ExampleSetup should be niladic","source":"\nfunc ExampleSetup(t *testing.T) {\n\t// make a config var to hold some flags"}]}
{"created_at":"2023-06-22 17:44:49.086349 UTC","module_path":"github.com/threefoldtech/zbus","version":"v1.0.1","sort_version":"1,0,1~","commit_time":"2023-01-26 14:29:24 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/threefoldtech/zbus/generation [github.com/threefoldtech/zbus/generation.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/threefoldtech/zbus@v1.0.1/generation/generatio_test.go:16:2","message":"output comment block must be the last comment block","source":"\n\t// Output: // GENERATED CODE\n\t// // --------------"}]}
{"created_at":"2023-06-22 17:27:07.308812 UTC","module_path":"github.com/AndreasBriese/bbloom","version":"v0.0.0-20190825152654-46b345b51c96","sort_version":"0,0,0,~20190825152654-46b345b51c96","commit_time":"2019-08-25 15:26:54 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/AndreasBriese/bbloom@v0.0.0-20190825152654-46b345b51c96/bbloom_test.go:83:1","message":"ExampleM_NewAddHasAddIfNotHas refers to unknown field or method: M.NewAddHasAddIfNotHas","source":"\nfunc ExampleM_NewAddHasAddIfNotHas() {\n\tbf := New(float64(512), float64(1))"}]}
{"created_at":"2023-06-22 17:49:33.477474 UTC","module_path":"github.com/bobziuchkovski/writ","version":"v0.8.9","sort_version":"0,8,9~","commit_time":"2016-02-11 15:53:16 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bobziuchkovski/writ@v0.8.9/example_basic_test.go:42:2","message":"output comment block must be the last comment block","source":"\n\t// Output:\n\t// Hi Sam! How's it going?"}]}
{"created_at":"2023-06-22 17:24:03.369089 UTC","module_path":"github.com/gtank/cryptopasta","version":"v0.0.0-20170601214702-1f550f6f2f69","sort_version":"0,0,0,~20170601214702-1f550f6f2f69","commit_time":"2017-06-01 21:47:02 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gtank/cryptopasta@v0.0.0-20170601214702-1f550f6f2f69/tls_test.go:20:1","message":"ExampleTLSServer refers to unknown identifier: TLSServer","source":"\nfunc ExampleTLSServer() {\n\t// Get recommended basic configuration"}]}
{"created_at":"2023-06-22 17:44:30.621467 UTC","module_path":"github.com/jackc/tern","version":"v1.13.0","sort_version":"1,a13,0~","commit_time":"2022-04-21 23:10:17 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/jackc/tern/migrate_test [github.com/jackc/tern/migrate.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/jackc/tern@v1.13.0/migrate/migrate_test.go:397:1","message":"Example_OnStartMigrationProgressLogging has malformed example suffix: OnStartMigrationProgressLogging","source":"\nfunc Example_OnStartMigrationProgressLogging() {\n\tconn, err := pgx.Connect(context.Background(), os.Getenv(\"MIGRATE_TEST_CONN_STRING\"))"}]}
{"created_at":"2023-06-22 17:26:12.468049 UTC","module_path":"github.com/opentracing-contrib/go-grpc","version":"v0.0.0-20210225150812-73cb765af46e","sort_version":"0,0,0,~20210225150812-73cb765af46e","commit_time":"2021-02-25 15:08:12 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/opentracing-contrib/go-grpc/test_test [github.com/opentracing-contrib/go-grpc/test.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/opentracing-contrib/go-grpc@v0.0.0-20210225150812-73cb765af46e/test/interceptor_test.go:226:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := stream.Send(\u0026testpb.SimpleRequest{payload}); err != nil {\n\t\t\t\tt.Fatalf(\"Failed StreamingInputCall: %v\", err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:33:27.500699 UTC","module_path":"github.com/extrame/xls","version":"v0.0.1","sort_version":"0,0,1~","commit_time":"2017-02-21 08:27:01 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/extrame/xls@v0.0.1/example_test.go:13:1","message":"ExampleWorkBook_NumberSheets refers to unknown field or method: WorkBook.NumberSheets","source":"\nfunc ExampleWorkBook_NumberSheets() {\n\tif xlFile, err := Open(\"Table.xls\", \"utf-8\"); err == nil {"}]}
{"created_at":"2023-06-22 17:17:19.196444 UTC","module_path":"github.com/cenkalti/backoff/v4","version":"v4.2.1","sort_version":"4,2,1~","commit_time":"2023-02-28 16:21:33 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/cenkalti/backoff/v4 [github.com/cenkalti/backoff/v4.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cenkalti/backoff/v4@v4.2.1/example_test.go:23:1","message":"ExampleRetryContext refers to unknown identifier: RetryContext","source":"\nfunc ExampleRetryContext() { // nolint: govet\n\t// A context"}]}
{"created_at":"2023-06-22 17:57:51.130589 UTC","module_path":"github.com/lovego/fs","version":"v0.0.4","sort_version":"0,0,4~","commit_time":"2021-11-08 10:15:28 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/lovego/fs [github.com/lovego/fs.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovego/fs@v0.0.4/path_linux_test.go:8:1","message":"ExampleFilepathDir_linux refers to unknown identifier: FilepathDir","source":"\nfunc ExampleFilepathDir_linux() {\n\tfmt.Println(filepath.Dir(`/`))"}]}
{"created_at":"2023-06-22 17:25:43.718958 UTC","module_path":"github.com/rcrowley/go-tigertonic","version":"v0.0.0-20170420123839-fe6b9f080eb7","sort_version":"0,0,0,~20170420123839-fe6b9f080eb7","commit_time":"2017-04-20 12:38:39 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rcrowley/go-tigertonic@v0.0.0-20170420123839-fe6b9f080eb7/server_test.go:44:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif nil != err {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:30:40.106157 UTC","module_path":"github.com/gravitational/ttlmap","version":"v0.0.0-20200607132016-2298fe2e5802","sort_version":"0,0,0,~20200607132016-2298fe2e5802","commit_time":"2020-06-07 13:20:16 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gravitational/ttlmap@v0.0.0-20200607132016-2298fe2e5802/priority_queue_test.go:91:1","message":"Example_Priority_Queue_Usage has malformed example suffix: Priority_Queue_Usage","source":"\nfunc Example_Priority_Queue_Usage() {\n\tqueue := NewPriorityQueue()"}]}
{"created_at":"2023-06-22 17:21:57.692707 UTC","module_path":"gopkg.in/telegram-bot-api.v4","version":"v4.6.4","sort_version":"4,6,4~","commit_time":"2018-10-08 19:45:45 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/telegram-bot-api.v4@v4.6.4/bot_test.go:596:1","message":"ExampleAnswerInlineQuery refers to unknown identifier: AnswerInlineQuery","source":"\nfunc ExampleAnswerInlineQuery() {\n\tbot, err := tgbotapi.NewBotAPI(\"MyAwesomeBotToken\") // create new bot"}]}
{"created_at":"2023-06-22 17:29:31.486711 UTC","module_path":"github.com/natefinch/pie","version":"v0.0.0-20170715172608-9a0d72014007","sort_version":"0,0,0,~20170715172608-9a0d72014007","commit_time":"2017-07-15 17:26:08 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/natefinch/pie@v0.0.0-20170715172608-9a0d72014007/example_test.go:35:1","message":"ExampleProvider_ServeCodec refers to unknown identifier: Provider","source":"// to simply put this at the end of the plugin's main function.\nfunc ExampleProvider_ServeCodec() {\n\tp := pie.NewProvider()"}]}
{"created_at":"2023-06-22 17:22:10.515214 UTC","module_path":"github.com/common-nighthawk/go-figure","version":"v0.0.0-20210622060536-734e95fb86be","sort_version":"0,0,0,~20210622060536-734e95fb86be","commit_time":"2021-06-22 06:05:36 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/common-nighthawk/go-figure@v0.0.0-20210622060536-734e95fb86be/figure_test.go:7:1","message":"ExampleAlphabet refers to unknown identifier: Alphabet","source":"\nfunc ExampleAlphabet() {\n\tmyFigure := NewFigure(\"Hello world\", \"alphabet\", true)"}]}
{"created_at":"2023-06-22 17:33:03.171813 UTC","module_path":"github.com/mattn/go-pipeline","version":"v0.0.0-20190323144519-32d779b32768","sort_version":"0,0,0,~20190323144519-32d779b32768","commit_time":"2019-03-23 14:45:19 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/mattn/go-pipeline [github.com/mattn/go-pipeline.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mattn/go-pipeline@v0.0.0-20190323144519-32d779b32768/example_test.go:8:1","message":"ExampleCommandPipeLine refers to unknown identifier: CommandPipeLine","source":"\nfunc ExampleCommandPipeLine() {\n\tout, err := Output("}]}
{"created_at":"2023-06-22 17:21:22.366573 UTC","module_path":"github.com/xtaci/smux","version":"v1.5.24","sort_version":"1,5,a24~","commit_time":"2023-02-14 14:19:42 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/xtaci/smux [github.com/xtaci/smux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/xtaci/smux@v1.5.24/session_test.go:301:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tcase \u003c-time.Tick(time.Second):\n\t\t\tt.Fatal(\"wait die chan timeout\")\n\t\t}"}]}
{"created_at":"2023-06-22 17:36:36.002933 UTC","module_path":"github.com/getamis/sirius","version":"v1.1.16","sort_version":"1,1,a16~","commit_time":"2023-05-29 07:17:07 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/getamis/sirius/kv [github.com/getamis/sirius/kv.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/getamis/sirius@v1.1.16/kv/helper_test.go:81:1","message":"ExampleNewKeyMaker refers to unknown identifier: NewKeyMaker","source":"\nfunc ExampleNewKeyMaker() {\n\tkeyMaker := NewKey(\"/\", \"package\", \"tag1\", \"tag2\")"}]}
{"created_at":"2023-06-22 17:21:17.319521 UTC","module_path":"github.com/anacrolix/torrent","version":"v1.52.0","sort_version":"1,a52,0~","commit_time":"2023-05-28 10:07:33 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/anacrolix/torrent/tracker [github.com/anacrolix/torrent/tracker.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/anacrolix/torrent@v1.52.0/tracker/udp_test.go:136:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t// get a hit, something is weird.\n\t\t\t\tt.Fatal(resp)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:38:32.606106 UTC","module_path":"github.com/alexcesaro/mail","version":"v0.0.0-20141015155039-29068ce49a17","sort_version":"0,0,0,~20141015155039-29068ce49a17","commit_time":"2014-10-15 15:50:39 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/quotedprintable [synthetic/quotedprintable.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/alexcesaro/mail@v0.0.0-20141015155039-29068ce49a17/quotedprintable/header_test.go:13:1","message":"ExampleEncodeHeader refers to unknown identifier: EncodeHeader","source":"\nfunc ExampleEncodeHeader() {\n\tfmt.Println(StdHeaderEncoder.EncodeHeader(\"Cofee\"))"}]}
{"created_at":"2023-06-22 17:57:51.184645 UTC","module_path":"github.com/flynn/go-sql","version":"v0.0.0-20141112162321-8376517daddb","sort_version":"0,0,0,~20141112162321-8376517daddb","commit_time":"2014-11-12 16:23:21 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/flynn/go-sql@v0.0.0-20141112162321-8376517daddb/sql_test.go:1906:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:28:01.492341 UTC","module_path":"github.com/gobwas/httphead","version":"v0.1.0","sort_version":"0,1,0~","commit_time":"2020-12-08 10:25:04 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/gobwas/httphead [github.com/gobwas/httphead.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gobwas/httphead@v0.1.0/httphead_test.go:40:1","message":"ExampleParseOptionsLifetime refers to unknown identifier: ParseOptionsLifetime","source":"\nfunc ExampleParseOptionsLifetime() {\n\tdata := []byte(`foo;bar=1,baz`)"}]}
{"created_at":"2023-06-22 17:35:28.208794 UTC","module_path":"github.com/nozzle/throttler","version":"v0.0.0-20180817012639-2ea982251481","sort_version":"0,0,0,~20180817012639-2ea982251481","commit_time":"2018-08-17 01:26:39 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/nozzle/throttler@v0.0.0-20180817012639-2ea982251481/example_test.go:45:1","message":"ExampleThrottler_errors should return nothing","source":"// Compare to http://golang.org/pkg/sync/#example_WaitGroup\nfunc ExampleThrottler_errors() error {\n\tvar urls = []string{"}]}
{"created_at":"2023-06-22 17:22:09.026227 UTC","module_path":"github.com/remeh/sizedwaitgroup","version":"v1.0.0","sort_version":"1,0,0~","commit_time":"2018-08-22 14:42:53 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/remeh/sizedwaitgroup@v1.0.0/sizedwaitgroup_test.go:43:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif len(swg.current) \u003e 4 {\n\t\t\t\tt.Fatalf(\"not the good amount of routines spawned.\")\n\t\t\t\treturn"}]}
{"created_at":"2023-06-22 17:18:58.864914 UTC","module_path":"github.com/kardianos/service","version":"v1.2.2","sort_version":"1,2,2~","commit_time":"2022-10-10 22:02:22 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/kardianos/service_test [github.com/kardianos/service.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kardianos/service@v1.2.2/service_test.go:35:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif p.numStopped == 0 {\n\t\t\tt.Fatal(\"Run() hasn't been stopped\")\n\t\t}"}]}
{"created_at":"2023-06-22 17:31:24.768486 UTC","module_path":"github.com/polydawn/refmt","version":"v0.89.0","sort_version":"0,a89,0~","commit_time":"2022-12-10 17:40:29 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/polydawn/refmt/obj/atlas_test [github.com/polydawn/refmt/obj/atlas.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/polydawn/refmt@v0.89.0/obj/atlas/atlasExample_test.go:19:1","message":"ExampleAtlasBuilding refers to unknown identifier: AtlasBuilding","source":"\nfunc ExampleAtlasBuilding() {\n\ttype typeExample1 struct {"}]}
{"created_at":"2023-06-22 17:47:06.8679 UTC","module_path":"github.com/coryb/optigo","version":"v0.0.0-20170510052407-6f3f720fe67b","sort_version":"0,0,0,~20170510052407-6f3f720fe67b","commit_time":"2017-05-10 05:24:07 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coryb/optigo@v0.0.0-20170510052407-6f3f720fe67b/examples_test.go:142:1","message":"ExampleNewParser_NoSpace refers to unknown field or method: NewParser.NoSpace","source":"\nfunc ExampleNewParser_NoSpace() {\n\t// Note that all values will be stored in OptionParser.Results after a Process function"}]}
{"created_at":"2023-06-22 17:31:57.42668 UTC","module_path":"github.com/gobuffalo/pop/v5","version":"v5.3.4","sort_version":"5,3,4~","commit_time":"2021-05-06 20:20:59 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/gobuffalo/pop/v5/internal/randx [github.com/gobuffalo/pop/v5/internal/randx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gobuffalo/pop/v5@v5.3.4/internal/randx/string_test.go:28:5","message":"call to (*T).FailNow from a non-test goroutine","source":"\t\t\tif len(id) != 30 {\n\t\t\t\tt.FailNow()\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:25:45.20276 UTC","module_path":"github.com/microsoft/go-mssqldb","version":"v1.1.0","sort_version":"1,1,0~","commit_time":"2023-05-30 14:35:18 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/microsoft/go-mssqldb_test [github.com/microsoft/go-mssqldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/microsoft/go-mssqldb@v1.1.0/lastinsertid_example_test.go:12:1","message":"ExampleLastInsertId refers to unknown identifier: LastInsertId","source":"// This example shows the usage of Connector type\nfunc ExampleLastInsertId() {\n"}]}
{"created_at":"2023-06-22 17:49:53.952903 UTC","module_path":"github.com/sahib/config","version":"v0.2.0","sort_version":"0,2,0~","commit_time":"2018-12-16 17:02:58 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/sahib/config@v0.2.0/example_test.go:229:1","message":"ExampleMerge refers to unknown identifier: Merge","source":"\nfunc ExampleMerge() {\n\tbaseYml := `# version: 0"}]}
{"created_at":"2023-06-22 17:21:08.496656 UTC","module_path":"github.com/saintfish/chardet","version":"v0.0.0-20230101081208-5e3ef4b5456d","sort_version":"0,0,0,~20230101081208-5e3ef4b5456d","commit_time":"2023-01-01 08:12:08 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/saintfish/chardet@v0.0.0-20230101081208-5e3ef4b5456d/example_test.go:16:1","message":"ExampleTextDetector refers to unknown identifier: TextDetector","source":"\nfunc ExampleTextDetector() {\n\tdetector := chardet.NewTextDetector()"}]}
{"created_at":"2023-06-22 17:41:57.280884 UTC","module_path":"github.com/vivint/infectious","version":"v0.0.0-20200605153912-25a574ae18a3","sort_version":"0,0,0,~20200605153912-25a574ae18a3","commit_time":"2020-06-05 15:39:12 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/vivint/infectious_test [github.com/vivint/infectious.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vivint/infectious@v0.0.0-20200605153912-25a574ae18a3/example_test.go:32:1","message":"Example should be niladic","source":"\nfunc Example(t *testing.T) {\n\tconst ("}]}
{"created_at":"2023-06-22 17:28:43.910071 UTC","module_path":"github.com/cenkalti/rpc2","version":"v0.0.0-20210604223624-c1acbc6ec984","sort_version":"0,0,0,~20210604223624-c1acbc6ec984","commit_time":"2021-06-04 22:36:24 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/jsonrpc [synthetic/jsonrpc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cenkalti/rpc2@v0.0.0-20210604223624-c1acbc6ec984/jsonrpc/jsonrpc_test.go:78:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:29:00.3446 UTC","module_path":"github.com/go-redsync/redsync","version":"v1.4.2","sort_version":"1,4,2~","commit_time":"2019-10-15 15:45:15 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/go-redsync/redsync [github.com/go-redsync/redsync.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-redsync/redsync@v1.4.2/mutex_test.go:20:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"Expected err == nil, got %q\", err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:42:21.038533 UTC","module_path":"github.com/abourget/llerrgroup","version":"v0.2.0","sort_version":"0,2,0~","commit_time":"2020-01-16 21:10:04 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/abourget/llerrgroup@v0.2.0/group_test.go:185:1","message":"ExampleGroupParallelAndQuitSoon refers to unknown identifier: GroupParallelAndQuitSoon","source":"\nfunc ExampleGroupParallelAndQuitSoon() {\n\turl := []string{\"http://1\", \"http://2\"}"}]}
{"created_at":"2023-06-22 17:53:07.614376 UTC","module_path":"github.com/comeonjy/go-kit","version":"v1.0.0","sort_version":"1,0,0~","commit_time":"2021-10-11 02:22:49 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/comeonjy/go-kit/pkg/xmongo_test [github.com/comeonjy/go-kit/pkg/xmongo.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/comeonjy/go-kit@v1.0.0/pkg/xmongo/mongo_test.go:41:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err:=mongodb.Conn(\"user\").FindOne(context.Background(),bson.M{}).Decode(\u0026u);err!=nil{\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:37:18.994932 UTC","module_path":"github.com/sendgridlabs/go-kinesis","version":"v0.0.0-20190306160747-8de9069567f6","sort_version":"0,0,0,~20190306160747-8de9069567f6","commit_time":"2019-03-06 16:07:47 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/batchproducer [synthetic/batchproducer.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/sendgridlabs/go-kinesis@v0.0.0-20190306160747-8de9069567f6/batchproducer/batchproducer_test.go:671:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tb.Add(data, partitionKey)\n\t\tt.Fatal(\"We should never have gotten here.\")\n\t}()"}]}
{"created_at":"2023-06-22 17:38:27.754006 UTC","module_path":"github.com/andreburgaud/crypt2go","version":"v1.2.0","sort_version":"1,2,0~","commit_time":"2023-02-24 02:22:32 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/andreburgaud/crypt2go/padding [github.com/andreburgaud/crypt2go/padding.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/andreburgaud/crypt2go@v1.2.0/padding/example_test.go:105:1","message":"ExamplePadder_Unpad_Last_Zero has malformed example suffix: Last_Zero","source":"\nfunc ExamplePadder_Unpad_Last_Zero() {\n\tp := []byte{0x0A, 0x0B, 0x0C, 0x0D, 0x04, 0x04, 0x04, 0x00}"}]}
{"created_at":"2023-06-22 17:35:53.927364 UTC","module_path":"github.com/pcelvng/task","version":"v0.7.0","sort_version":"0,7,0~","commit_time":"2023-01-05 14:26:02 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/pcelvng/task/bus/nsq [github.com/pcelvng/task/bus/nsq.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pcelvng/task@v0.7.0/bus/nsq/consumer_test.go:328:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t} else {\n\t\t\t\tt.Fatalf(\"msg has zero byte length '%v'\\n\", string(b))\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:36:03.732383 UTC","module_path":"github.com/qri-io/qfs","version":"v0.6.0","sort_version":"0,6,0~","commit_time":"2021-05-04 17:05:55 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/qri-io/qfs/qipfs/coreunix [github.com/qri-io/qfs/qipfs/coreunix.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/qri-io/qfs@v0.6.0/qipfs/coreunix/add_test.go:91:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:31:55.797702 UTC","module_path":"github.com/go-kratos/kratos","version":"v1.0.1","sort_version":"1,0,1~","commit_time":"2021-07-06 10:42:00 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/go-kratos/kratos/pkg/conf/paladin_test [github.com/go-kratos/kratos/pkg/conf/paladin.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-kratos/kratos@v1.0.1/pkg/conf/paladin/example_test.go:61:1","message":"ExampleApolloClient refers to unknown identifier: ApolloClient","source":"// ExampleApolloClient is an example client for apollo driver usage.\nfunc ExampleApolloClient() {\n\t/*"}]}
{"created_at":"2023-06-22 17:25:06.486564 UTC","module_path":"github.com/google/goexpect","version":"v0.0.0-20210430020637-ab937bf7fd6f","sort_version":"0,0,0,~20210430020637-ab937bf7fd6f","commit_time":"2021-04-30 02:06:37 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/google/goexpect [github.com/google/goexpect.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/goexpect@v0.0.0-20210430020637-ab937bf7fd6f/expect_test.go:1349:1","message":"ExampleGExpect_SendSignal_Batch has malformed example suffix: Batch","source":"// ExampleGExpect_SendSignal_Batch is an example of using SendSignal in a batch.\nfunc ExampleGExpect_SendSignal_Batch() {\n\texp, r, err := Spawn(\"testdata/traptest.sh\", 30*time.Second)"}]}
{"created_at":"2023-06-22 17:28:25.590004 UTC","module_path":"github.com/intelsdi-x/gomit","version":"v0.0.0-20221107230219-07f4a70e6398","sort_version":"0,0,0,~20221107230219-07f4a70e6398","commit_time":"2022-11-07 23:02:19 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/intelsdi-x/gomit@v0.0.0-20221107230219-07f4a70e6398/doc_test.go:67:1","message":"ExampleFoo refers to unknown identifier: Foo","source":"// Empty but makes the example not print the whole file\nfunc ExampleFoo() {\n}"}]}
{"created_at":"2023-06-22 17:49:46.813248 UTC","module_path":"github.com/mlsquires/socketio","version":"v0.0.0-20180414171845-169a6f09e624","sort_version":"0,0,0,~20180414171845-169a6f09e624","commit_time":"2018-04-14 17:18:45 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/engineio [synthetic/engineio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mlsquires/socketio@v0.0.0-20180414171845-169a6f09e624/engineio/ioutil_test.go:37:7","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t\tif err != nil {\n\t\t\t\t\t\tt.Fatal(err)\n\t\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:27:08.478598 UTC","module_path":"github.com/yanyiwu/gojieba","version":"v1.3.0","sort_version":"1,3,0~","commit_time":"2023-02-05 04:14:41 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/yanyiwu/gojieba [github.com/yanyiwu/gojieba.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/yanyiwu/gojieba@v1.3.0/jieba_test.go:214:1","message":"ExampleExtract refers to unknown identifier: Extract","source":"\nfunc ExampleExtract() {\n\tx := NewJieba()"}]}
{"created_at":"2023-06-22 17:56:34.927445 UTC","module_path":"github.com/zlyzol/tm-db-0.1.1","version":"v1.0.2","sort_version":"1,0,2~","commit_time":"2021-08-31 12:29:12 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/zlyzol/tm-db-0.1.1/remotedb_test [github.com/zlyzol/tm-db-0.1.1/remotedb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zlyzol/tm-db-0.1.1@v1.0.2/remotedb/remotedb_test.go:24:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := srv.Serve(ln); err != nil {\n\t\t\tt.Fatalf(\"BindServer: %v\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:53:07.020377 UTC","module_path":"github.com/gadelkareem/cachita","version":"v0.2.3","sort_version":"0,2,3~","commit_time":"2021-08-05 23:58:34 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/gadelkareem/cachita_test [github.com/gadelkareem/cachita.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gadelkareem/cachita@v0.2.3/example_test.go:98:1","message":"ExampleTaggedCache refers to unknown identifier: TaggedCache","source":"\nfunc ExampleTaggedCache() {\n    cache := cachita.NewMemoryCache(1*time.Millisecond, 1*time.Minute) // default ttl 1 millisecond"}]}
{"created_at":"2023-06-22 17:54:20.418373 UTC","module_path":"github.com/benhoyt/goawk","version":"v1.23.3","sort_version":"1,a23,3~","commit_time":"2023-06-11 07:26:44 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/benhoyt/goawk/interp_test [github.com/benhoyt/goawk/interp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/benhoyt/goawk@v1.23.3/interp/fuzz_test.go:38:4","message":"fuzz target must not call any *F methods","source":"\t\tif err != nil {\n\t\t\tf.Fatalf(\"interp.New error: %v\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:48:35.7225 UTC","module_path":"github.com/TV4/logrus-stackdriver-formatter","version":"v0.1.0","sort_version":"0,1,0~","commit_time":"2018-04-14 08:31:25 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/TV4/logrus-stackdriver-formatter@v0.1.0/example_test.go:11:1","message":"ExampleLogError refers to unknown identifier: LogError","source":"\nfunc ExampleLogError() {\n\tlogger := logrus.New()"}]}
{"created_at":"2023-06-22 17:33:36.066295 UTC","module_path":"github.com/mailgun/groupcache/v2","version":"v2.5.0","sort_version":"2,5,0~","commit_time":"2023-06-12 17:04:46 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/mailgun/groupcache/v2_test [github.com/mailgun/groupcache/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mailgun/groupcache/v2@v2.5.0/example_test.go:12:1","message":"ExampleUsage refers to unknown identifier: Usage","source":"\nfunc ExampleUsage() {\n\t/*"}]}
{"created_at":"2023-06-22 17:52:24.737953 UTC","module_path":"github.com/jackc/puddle/v2","version":"v2.2.0","sort_version":"2,2,0~","commit_time":"2023-02-11 14:55:31 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/jackc/puddle/v2_test [github.com/jackc/puddle/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/jackc/puddle/v2@v2.2.0/pool_test.go:1276:8","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\t\t\t\t\tif err != nil {\n\t\t\t\t\t\t\tb.Fatal(err)\n\t\t\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:18:33.105015 UTC","module_path":"github.com/tarm/serial","version":"v0.0.0-20180830185346-98f6abe2eb07","sort_version":"0,0,0,~20180830185346-98f6abe2eb07","commit_time":"2018-08-30 18:53:46 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tarm/serial@v0.0.0-20180830185346-98f6abe2eb07/basic_test.go:37:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:18:33.330388 UTC","module_path":"github.com/alexflint/go-arg","version":"v1.4.3","sort_version":"1,4,3~","commit_time":"2022-02-10 02:04:03 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/alexflint/go-arg [github.com/alexflint/go-arg.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/alexflint/go-arg@v1.4.3/example_test.go:203:2","message":"output comment block must be the last comment block","source":"\n\t// output:\n"}]}
{"created_at":"2023-06-22 17:17:12.490794 UTC","module_path":"github.com/denisenkom/go-mssqldb","version":"v0.12.3","sort_version":"0,a12,3~","commit_time":"2022-10-11 12:52:41 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/denisenkom/go-mssqldb_test [github.com/denisenkom/go-mssqldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/denisenkom/go-mssqldb@v0.12.3/lastinsertid_example_test.go:12:1","message":"ExampleLastInsertId refers to unknown identifier: LastInsertId","source":"// This example shows the usage of Connector type\nfunc ExampleLastInsertId() {\n"}]}
{"created_at":"2023-06-22 17:17:59.29118 UTC","module_path":"github.com/godbus/dbus/v5","version":"v5.1.0","sort_version":"5,1,0~","commit_time":"2022-02-27 11:53:47 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/godbus/dbus/v5 [github.com/godbus/dbus/v5.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/godbus/dbus/v5@v5.1.0/server_interfaces_test.go:476:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:36:15.148563 UTC","module_path":"gopkg.in/xtaci/smux.v1","version":"v1.4.2","sort_version":"1,4,2~","commit_time":"2019-09-21 12:14:53 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/xtaci/smux.v1@v1.4.2/session_test.go:108:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tcase \u003c-time.Tick(time.Second):\n\t\t\tt.Fatal(\"wait die chan timeout\")\n\t\t}"}]}
{"created_at":"2023-06-22 17:35:58.996462 UTC","module_path":"github.com/PuerkitoBio/gocrawl","version":"v1.1.0","sort_version":"1,1,0~","commit_time":"2021-05-19 15:13:58 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/PuerkitoBio/gocrawl_test [github.com/PuerkitoBio/gocrawl.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/PuerkitoBio/gocrawl@v1.1.0/examples_test.go:35:1","message":"ExampleCrawl refers to unknown identifier: Crawl","source":"\nfunc ExampleCrawl() {\n\t// Set custom options"}]}
{"created_at":"2023-06-22 17:35:16.043785 UTC","module_path":"github.com/brutella/dnssd","version":"v1.2.9","sort_version":"1,2,9~","commit_time":"2023-05-11 11:54:28 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/brutella/dnssd [github.com/brutella/dnssd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/brutella/dnssd@v1.2.9/probe_test.go:119:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:17:39.706739 UTC","module_path":"github.com/go-redis/redis/v7","version":"v7.4.1","sort_version":"7,4,1~","commit_time":"2021-07-16 07:41:17 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/go-redis/redis/v7_test [github.com/go-redis/redis/v7.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-redis/redis/v7@v7.4.1/example_instrumentation_test.go:60:1","message":"ExampleWatch_instrumentation refers to unknown identifier: Watch","source":"\nfunc ExampleWatch_instrumentation() {\n\trdb := redis.NewClient(\u0026redis.Options{"}]}
{"created_at":"2023-06-22 17:54:31.856027 UTC","module_path":"github.com/mefellows/muxy","version":"v0.0.6","sort_version":"0,0,6~","commit_time":"2019-05-11 05:31:40 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/examples/hystrix/muxy [synthetic/examples/hystrix/muxy.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mefellows/muxy@v0.0.6/examples/hystrix/muxy/muxy_test.go:43:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif resp.StatusCode != 200 {\n\t\t\t\tt.Fatalf(\"Expected 200 response code, but got %d\", resp.StatusCode)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:28:12.527953 UTC","module_path":"layeh.com/gopher-luar","version":"v1.0.11","sort_version":"1,0,a11~","commit_time":"2023-06-05 11:41:52 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"layeh.com/gopher-luar [layeh.com/gopher-luar.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/layeh.com/gopher-luar@v1.0.11/chan_test.go:18:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif name != \"John\" || !ok {\n\t\t\tt.Fatal(\"invalid value\")\n\t\t}"}]}
{"created_at":"2023-06-22 17:48:43.039082 UTC","module_path":"github.com/elastic/go-elasticsearch/v5","version":"v5.6.1","sort_version":"5,6,1~","commit_time":"2019-07-08 06:59:04 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/elastic/go-elasticsearch/v5/estransport [github.com/elastic/go-elasticsearch/v5/estransport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/elastic/go-elasticsearch/v5@v5.6.1/estransport/logger_internal_test.go:58:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"Unexpected error: %s\", err)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:24:25.072459 UTC","module_path":"github.com/lovoo/goka","version":"v1.1.8","sort_version":"1,1,8~","commit_time":"2023-04-04 07:00:33 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/lovoo/goka/examples/4-tests [github.com/lovoo/goka/examples/4-tests.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovoo/goka@v1.1.8/examples/4-tests/example_test.go:38:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"processor run failed with: %v\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:49:05.822664 UTC","module_path":"github.com/tidwall/wal","version":"v1.1.7","sort_version":"1,1,7~","commit_time":"2021-11-10 15:38:44 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/tidwall/wal [github.com/tidwall/wal.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tidwall/wal@v1.1.7/wal_test.go:871:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif _, err := l.Read(uint64(index)); err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:47:30.08631 UTC","module_path":"github.com/unidoc/pkcs7","version":"v0.1.1","sort_version":"0,1,1~","commit_time":"2022-03-29 19:08:17 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/unidoc/pkcs7 [github.com/unidoc/pkcs7.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/unidoc/pkcs7@v0.1.1/sign_test.go:161:1","message":"ExampleSignedData should be niladic","source":"\nfunc ExampleSignedData(t *testing.T) {\n\t// generate a signing cert or load a key pair"}]}
{"created_at":"2023-06-22 17:35:23.77543 UTC","module_path":"github.com/Azure/azure-storage-queue-go","version":"v0.0.0-20230531184854-c06a8eff66fe","sort_version":"0,0,0,~20230531184854-c06a8eff66fe","commit_time":"2023-05-31 18:48:54 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/Azure/azure-storage-queue-go/azqueue_test [github.com/Azure/azure-storage-queue-go/azqueue.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Azure/azure-storage-queue-go@v0.0.0-20230531184854-c06a8eff66fe/azqueue/zt_examples_test.go:619:1","message":"ExampleServiceClient_ListQueuesSegment refers to unknown identifier: ServiceClient","source":"// This examples shows how to list the queues in an Azure Storage service account.\nfunc ExampleServiceClient_ListQueuesSegment() {\n\t// From the Azure portal, get your Storage account file service URL endpoint."}]}
{"created_at":"2023-06-22 17:27:40.865707 UTC","module_path":"github.com/jmank88/nuts","version":"v0.4.0","sort_version":"0,4,0~","commit_time":"2019-10-27 14:17:03 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/jmank88/nuts [github.com/jmank88/nuts.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/jmank88/nuts@v0.4.0/example_test.go:7:1","message":"ExampleKey_UUID refers to unknown field or method: Key.UUID","source":"\nfunc ExampleKey_UUID() {\n\ttype uuid struct{ a, b uint64 }"}]}
{"created_at":"2023-06-22 18:00:22.827303 UTC","module_path":"go.imperva.dev/zerolog","version":"v1.31.0","sort_version":"1,a31,0~","commit_time":"2021-10-02 14:11:20 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"go.imperva.dev/zerolog_test [go.imperva.dev/zerolog.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.imperva.dev/zerolog@v1.31.0/log_example_test.go:510:1","message":"ExampleContext_MacAddr refers to unknown field or method: Context.MacAddr","source":"\nfunc ExampleContext_MacAddr() {\n\tmac := net.HardwareAddr{0x00, 0x14, 0x22, 0x01, 0x23, 0x45}"}]}
{"created_at":"2023-06-22 17:40:40.257117 UTC","module_path":"bitbucket.org/taubyte/go-sdk","version":"v0.1.43","sort_version":"0,1,a43~","commit_time":"2022-12-15 22:47:17 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"bitbucket.org/taubyte/go-sdk/ethereum/client_test [bitbucket.org/taubyte/go-sdk/ethereum/client.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/bitbucket.org/taubyte/go-sdk@v0.1.43/ethereum/client/sign_example_test.go:10:1","message":"ExampleSign refers to unknown identifier: Sign","source":"\nfunc ExampleSign() {\n\t// Mocking the calls to the vm for usage in tests and playground"}]}
{"created_at":"2023-06-22 17:24:36.804364 UTC","module_path":"github.com/turingchain2020/turingchain","version":"v1.1.21","sort_version":"1,1,a21~","commit_time":"2021-07-05 02:26:07 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/turingchain2020/turingchain/queue [github.com/turingchain2020/turingchain/queue.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/turingchain2020/turingchain@v1.1.21/queue/queue_test.go:396:5","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tb.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:16:32.001043 UTC","module_path":"github.com/gogo/protobuf","version":"v1.3.2","sort_version":"1,3,2~","commit_time":"2021-01-10 08:01:47 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/gogo/protobuf/test/stdtypes [github.com/gogo/protobuf/test/stdtypes.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogo/protobuf@v1.3.2/test/stdtypes/concurrency_test.go:26:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:23:47.954838 UTC","module_path":"github.com/gonum/stat","version":"v0.0.0-20181125101827-41a0da705a5b","sort_version":"0,0,0,~20181125101827-41a0da705a5b","commit_time":"2018-11-25 10:18:27 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gonum/stat@v0.0.0-20181125101827-41a0da705a5b/pca_example_test.go:14:1","message":"ExamplePrincipalComponents refers to unknown identifier: PrincipalComponents","source":"\nfunc ExamplePrincipalComponents() {\n\t// iris is a truncated sample of the Fisher's Iris dataset."}]}
{"created_at":"2023-06-22 17:20:48.360936 UTC","module_path":"github.com/grandcat/zeroconf","version":"v1.0.0","sort_version":"1,0,0~","commit_time":"2020-01-29 20:17:43 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/grandcat/zeroconf [github.com/grandcat/zeroconf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/grandcat/zeroconf@v1.0.0/service_test.go:86:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif s != nil {\n\t\t\tt.Fatalf(\"Expected empty service entries but got %v\", *s)\n\t\t}"}]}
{"created_at":"2023-06-22 17:40:39.455741 UTC","module_path":"github.com/lafikl/consistent","version":"v0.0.0-20220512074542-bdd3606bfc3e","sort_version":"0,0,0,~20220512074542-bdd3606bfc3e","commit_time":"2022-05-12 07:45:42 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/lafikl/consistent_test [github.com/lafikl/consistent.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lafikl/consistent@v0.0.0-20220512074542-bdd3606bfc3e/example_test.go:10:1","message":"Example_consistent should be niladic","source":"\nfunc Example_consistent(t *testing.T) {\n\tc := consistent.New()"}]}
{"created_at":"2023-06-22 17:58:26.432566 UTC","module_path":"go.mozilla.org/sops","version":"v0.0.0-20190912205235-14a22d7a7060","sort_version":"0,0,0,~20190912205235-14a22d7a7060","commit_time":"2019-09-12 20:52:35 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"go.mozilla.org/sops/decrypt [go.mozilla.org/sops/decrypt.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.mozilla.org/sops@v0.0.0-20190912205235-14a22d7a7060/decrypt/example_test.go:34:1","message":"ExampleDecryptFile refers to unknown identifier: DecryptFile","source":"\nfunc ExampleDecryptFile() {\n\tvar ("}]}
{"created_at":"2023-06-22 17:30:36.778256 UTC","module_path":"github.com/ardanlabs/kit","version":"v0.0.0-20170928162525-58fa5b2d0b1e","sort_version":"0,0,0,~20170928162525-58fa5b2d0b1e","commit_time":"2017-09-28 16:25:25 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/cfg_test [synthetic/cfg.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ardanlabs/kit@v0.0.0-20170928162525-58fa5b2d0b1e/cfg/cfg_examples_test.go:13:1","message":"ExampleGlobal refers to unknown identifier: Global","source":"// package.\nfunc ExampleGlobal() {\n\t// Init() must be called only once with the given namespace to load."}]}
{"created_at":"2023-06-22 17:46:44.040364 UTC","module_path":"github.com/goradd/html5tag","version":"v1.0.2","sort_version":"1,0,2~","commit_time":"2022-03-17 02:56:16 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/goradd/html5tag [github.com/goradd/html5tag.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/goradd/html5tag@v1.0.2/data_test.go:15:1","message":"ExampleToDataJqKey refers to unknown identifier: ToDataJqKey","source":"\nfunc ExampleToDataJqKey() {\n\ts, _ := ToDataKey(\"this-is-my-test\")"}]}
{"created_at":"2023-06-22 17:26:24.667061 UTC","module_path":"github.com/farsightsec/golang-framestream","version":"v0.3.0","sort_version":"0,3,0~","commit_time":"2020-09-08 18:24:14 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/farsightsec/golang-framestream@v0.3.0/framestream_test.go:70:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:18:36.921671 UTC","module_path":"github.com/go-telegram-bot-api/telegram-bot-api","version":"v4.6.4+incompatible","sort_version":"4,6,4~","commit_time":"2018-10-08 19:45:45 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-telegram-bot-api/telegram-bot-api@v4.6.4+incompatible/bot_test.go:596:1","message":"ExampleAnswerInlineQuery refers to unknown identifier: AnswerInlineQuery","source":"\nfunc ExampleAnswerInlineQuery() {\n\tbot, err := tgbotapi.NewBotAPI(\"MyAwesomeBotToken\") // create new bot"}]}
{"created_at":"2023-06-22 17:18:33.596492 UTC","module_path":"github.com/golang-migrate/migrate","version":"v3.5.4+incompatible","sort_version":"3,5,4~","commit_time":"2018-10-10 23:11:44 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/testing [synthetic/testing.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/golang-migrate/migrate@v3.5.4+incompatible/testing/testing_test.go:7:1","message":"ExampleParallelTest should be niladic","source":"\nfunc ExampleParallelTest(t *testing.T) {\n\tvar isReady = func(i Instance) bool {"}]}
{"created_at":"2023-06-22 17:38:27.641619 UTC","module_path":"github.com/kr/secureheader","version":"v0.2.0","sort_version":"0,2,0~","commit_time":"2018-08-06 20:42:14 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/kr/secureheader_test [github.com/kr/secureheader.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kr/secureheader@v0.2.0/example_test.go:22:1","message":"Example_Content_Security_Policy has malformed example suffix: Content_Security_Policy","source":"\nfunc Example_Content_Security_Policy() {\n\thttp.Handle(\"/\", http.FileServer(http.Dir(\"/tmp\")))"}]}
{"created_at":"2023-06-22 17:57:31.495413 UTC","module_path":"github.com/utahta/go-cronowriter","version":"v1.2.0","sort_version":"1,2,0~","commit_time":"2020-11-25 05:50:36 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/utahta/go-cronowriter [github.com/utahta/go-cronowriter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/utahta/go-cronowriter@v1.2.0/writer_test.go:226:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif _, err := c.Write([]byte(\"test\")); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:26:05.049355 UTC","module_path":"github.com/ChimeraCoder/tokenbucket","version":"v0.0.0-20131201223612-c5a927568de7","sort_version":"0,0,0,~20131201223612-c5a927568de7","commit_time":"2013-12-01 22:36:12 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ChimeraCoder/tokenbucket@v0.0.0-20131201223612-c5a927568de7/tokenbucket_test.go:9:1","message":"Example_BucketUse has malformed example suffix: BucketUse","source":"\nfunc Example_BucketUse() {\n\t// Allow a new action every 5 seconds, with a maximum of 3 \"in the bank\""}]}
{"created_at":"2023-06-22 17:53:07.499172 UTC","module_path":"github.com/kjk/flex","version":"v0.0.0-20171203210503-ed34d6b6a425","sort_version":"0,0,0,~20171203210503-ed34d6b6a425","commit_time":"2017-12-03 21:05:03 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kjk/flex@v0.0.0-20171203210503-ed34d6b6a425/margin_test.go:773:1","message":"Testargin_auto_left_and_right_column has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc Testargin_auto_left_and_right_column(t *testing.T) {\n\tconfig := NewConfig()"}]}
{"created_at":"2023-06-22 17:50:02.053352 UTC","module_path":"github.com/luci/go-render","version":"v0.0.0-20160219211803-9a04cc21af0f","sort_version":"0,0,0,~20160219211803-9a04cc21af0f","commit_time":"2016-02-19 21:18:03 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/render [synthetic/render.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/luci/go-render@v0.0.0-20160219211803-9a04cc21af0f/render/render_test.go:179:1","message":"ExampleInReadme refers to unknown identifier: InReadme","source":"\nfunc ExampleInReadme() {\n\ttype customType int"}]}
{"created_at":"2023-06-22 17:27:48.287807 UTC","module_path":"github.com/cgrates/cgrates","version":"v0.10.2","sort_version":"0,a10,2~","commit_time":"2020-10-08 11:28:01 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/cgrates/cgrates/migrator [github.com/cgrates/cgrates/migrator.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cgrates/cgrates@v0.10.2/migrator/thresholds_test.go:30:1","message":"Testv2ActionTriggerAsThreshold has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc Testv2ActionTriggerAsThreshold(t *testing.T) {\n\tvar filters []*engine.FilterRule"}]}
{"created_at":"2023-06-22 17:32:29.723683 UTC","module_path":"github.com/zhouhui8915/engine.io-go","version":"v0.0.0-20150910083302-02ea08f0971f","sort_version":"0,0,0,~20150910083302-02ea08f0971f","commit_time":"2015-09-10 08:33:02 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zhouhui8915/engine.io-go@v0.0.0-20150910083302-02ea08f0971f/ioutil_test.go:36:7","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t\tif err != nil {\n\t\t\t\t\t\tt.Fatal(err)\n\t\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:35:16.250198 UTC","module_path":"github.com/go-web/httplog","version":"v0.0.0-20160412232724-580d0d49f0d3","sort_version":"0,0,0,~20160412232724-580d0d49f0d3","commit_time":"2016-04-12 23:27:24 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-web/httplog@v0.0.0-20160412232724-580d0d49f0d3/example_test.go:12:1","message":"ExampleLog refers to unknown identifier: Log","source":"\nfunc ExampleLog() {\n\tlogger := log.New(os.Stdout, \"[go-web] \", log.LstdFlags)"}]}
{"created_at":"2023-06-22 17:50:24.692824 UTC","module_path":"github.com/gilliek/go-opml","version":"v1.0.0","sort_version":"1,0,0~","commit_time":"2014-06-07 11:45:46 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/opml_test [synthetic/opml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gilliek/go-opml@v1.0.0/opml/example_test.go:23:1","message":"ExampleNewOPMLParserFromURL refers to unknown identifier: NewOPMLParserFromURL","source":"\nfunc ExampleNewOPMLParserFromURL() {\n\tdoc, err := opml.NewOPMLFromURL(\"http://www.example.com/file.xml\")"}]}
{"created_at":"2023-06-22 17:44:27.735414 UTC","module_path":"github.com/jackc/puddle","version":"v1.3.0","sort_version":"1,3,0~","commit_time":"2022-08-27 23:10:43 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/jackc/puddle_test [github.com/jackc/puddle.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/jackc/puddle@v1.3.0/pool_test.go:1019:8","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\t\t\t\t\tif err != nil {\n\t\t\t\t\t\t\tb.Fatal(err)\n\t\t\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:39:21.718026 UTC","module_path":"github.com/RichardKnop/redsync","version":"v1.2.0","sort_version":"1,2,0~","commit_time":"2018-03-20 15:12:46 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/RichardKnop/redsync@v1.2.0/mutex_test.go:20:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"Expected err == nil, got %q\", err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:42:46.660906 UTC","module_path":"github.com/brentp/vcfgo","version":"v0.0.0-20220919165057-adf3b5d20c55","sort_version":"0,0,0,~20220919165057-adf3b5d20c55","commit_time":"2022-09-19 16:50:57 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/brentp/vcfgo@v0.0.0-20220919165057-adf3b5d20c55/doc_test.go:24:3","message":"output comment block must be the last comment block","source":"\t\tfmt.Printf(\"%v\", dp.(int) \u003e 10)\n\t\t// Output: asdf\n\t}"}]}
{"created_at":"2023-06-22 17:30:37.295894 UTC","module_path":"github.com/stvp/rollbar","version":"v0.5.1","sort_version":"0,5,1~","commit_time":"2017-10-11 15:43:29 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stvp/rollbar@v0.5.1/rollbar_test.go:191:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif errCount != 2 {\n\t\t\tt.Fatal(\"didn't receive the right number of errors\", errCount)\n\t\t}"}]}
{"created_at":"2023-06-22 17:47:40.817622 UTC","module_path":"github.com/TykTechnologies/leakybucket","version":"v0.0.0-20170301023702-71692c943e3c","sort_version":"0,0,0,~20170301023702-71692c943e3c","commit_time":"2017-03-01 02:37:02 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/redis [synthetic/redis.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/TykTechnologies/leakybucket@v0.0.0-20170301023702-71692c943e3c/redis/redis_test.go:89:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif _, err := bucket.Add(1); err != nil \u0026\u0026 err != leakybucket.ErrorFull {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:36:45.562639 UTC","module_path":"github.com/google/badwolf","version":"v0.9.0","sort_version":"0,9,0~","commit_time":"2017-09-03 05:13:43 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/bql/planner [synthetic/bql/planner.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/badwolf@v0.9.0/bql/planner/data_access_test.go:226:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := g.Triples(ctx, storage.DefaultLookup, ts); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:27:07.358239 UTC","module_path":"github.com/rockbears/log","version":"v0.9.0","sort_version":"0,9,0~","commit_time":"2023-06-21 15:49:12 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/rockbears/log_test [github.com/rockbears/log.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rockbears/log@v0.9.0/log_test.go:114:1","message":"ExampleNewStdWrapperAndSkip refers to unknown identifier: NewStdWrapperAndSkip","source":"\nfunc ExampleNewStdWrapperAndSkip() {\n\t// Init the wrapper"}]}
{"created_at":"2023-06-22 17:55:13.601083 UTC","module_path":"github.com/wellington/spritewell","version":"v0.5.0","sort_version":"0,5,0~","commit_time":"2016-03-29 05:48:42 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wellington/spritewell@v0.5.0/sprite_test.go:199:1","message":"ExampleSpritePosition refers to unknown identifier: SpritePosition","source":"// in the the spritesheet.\nfunc ExampleSpritePosition() {\n"}]}
{"created_at":"2023-06-22 17:18:41.966751 UTC","module_path":"github.com/smallnest/rpcx","version":"v1.8.7","sort_version":"1,8,7~","commit_time":"2023-05-12 00:50:47 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/smallnest/rpcx/server [github.com/smallnest/rpcx/server.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/smallnest/rpcx@v1.8.7/server/plugin_test.go:54:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"failed to NewPeer2PeerDiscovery: %v\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 18:01:15.836933 UTC","module_path":"github.com/vulpemventures/go-elements","version":"v0.4.5","sort_version":"0,4,5~","commit_time":"2023-01-30 12:08:09 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/vulpemventures/go-elements/payment_test [github.com/vulpemventures/go-elements/payment.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vulpemventures/go-elements@v0.4.5/payment/examples_test.go:38:1","message":"ExampleConfidentialWitnessPubKeyHash refers to unknown identifier: ConfidentialWitnessPubKeyHash","source":"\nfunc ExampleConfidentialWitnessPubKeyHash() {\n\tpk, err := btcec.NewPrivateKey()"}]}
{"created_at":"2023-06-22 17:25:17.288755 UTC","module_path":"github.com/anacrolix/utp","version":"v0.2.0","sort_version":"0,2,0~","commit_time":"2023-05-19 01:20:06 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/anacrolix/utp [github.com/anacrolix/utp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/anacrolix/utp@v0.2.0/socket_test.go:126:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"error reading from raw conn: %s\", err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:46:00.959817 UTC","module_path":"github.com/gdexlab/go-render","version":"v1.0.1","sort_version":"1,0,1~","commit_time":"2019-11-25 19:15:42 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/render [synthetic/render.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gdexlab/go-render@v1.0.1/render/render_test.go:243:1","message":"ExampleInReadme refers to unknown identifier: InReadme","source":"\nfunc ExampleInReadme() {\n\ttype customType int"}]}
{"created_at":"2023-06-22 17:29:02.623936 UTC","module_path":"github.com/go-gota/gota","version":"v0.12.0","sort_version":"0,a12,0~","commit_time":"2021-10-10 19:10:32 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/go-gota/gota/dataframe_test [github.com/go-gota/gota/dataframe.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-gota/gota@v0.12.0/dataframe/examples_test.go:314:2","message":"output comment block must be the last comment block","source":"\n\t// Output:\n\t//   [4x4] DataFrame"}]}
{"created_at":"2023-06-22 17:16:19.761157 UTC","module_path":"github.com/streadway/amqp","version":"v1.1.0","sort_version":"1,1,0~","commit_time":"2023-06-19 10:39:15 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/streadway/amqp [github.com/streadway/amqp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/streadway/amqp@v1.1.0/tls_test.go:86:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tcase \u003c-time.After(10 * time.Millisecond):\n\t\t\tt.Fatalf(\"server timeout waiting for TLS handshake from client\")\n\t\tcase session := \u003c-srv.Sessions:"}]}
{"created_at":"2023-06-22 17:55:33.657269 UTC","module_path":"github.com/IBM/keyprotect-go-client","version":"v0.10.0","sort_version":"0,a10,0~","commit_time":"2023-03-31 20:00:40 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/IBM/keyprotect-go-client_test [github.com/IBM/keyprotect-go-client.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/IBM/keyprotect-go-client@v0.10.0/example_test.go:177:1","message":"ExampleClient_InstancePolicies refers to unknown field or method: Client.InstancePolicies","source":"\nfunc ExampleClient_InstancePolicies() {\n\tclient, _ := kp.New("}]}
{"created_at":"2023-06-22 17:49:01.900978 UTC","module_path":"github.com/best-expendables-v2/logger","version":"v0.0.0-20210531153023-31ac18ea84d2","sort_version":"0,0,0,~20210531153023-31ac18ea84d2","commit_time":"2021-05-31 15:30:23 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/best-expendables-v2/logger [github.com/best-expendables-v2/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/best-expendables-v2/logger@v0.0.0-20210531153023-31ac18ea84d2/factory_test.go:35:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif !ok {\n\t\t\t\tt.Fatal(\"Factory should return type *logger.logger\")\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:41:38.775728 UTC","module_path":"github.com/streamingfast/eth-go","version":"v0.0.0-20230208143219-cbb3804c1e38","sort_version":"0,0,0,~20230208143219-cbb3804c1e38","commit_time":"2023-02-08 14:32:19 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/streamingfast/eth-go_test [github.com/streamingfast/eth-go.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/streamingfast/eth-go@v0.0.0-20230208143219-cbb3804c1e38/example_rpc_get_block_by_number_test.go:13:1","message":"ExampleRPC_GetBlockByNumber refers to unknown identifier: RPC","source":"\nfunc ExampleRPC_GetBlockByNumber() {\n\tclient := rpc.NewClient(getRPCURL())"}]}
{"created_at":"2023-06-22 17:47:51.705723 UTC","module_path":"gitlab.dms3.io/dms3/go-dms3-files","version":"v0.0.2","sort_version":"0,0,2~","commit_time":"2021-08-21 10:17:21 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"gitlab.dms3.io/dms3/go-dms3-files [gitlab.dms3.io/dms3/go-dms3-files.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.dms3.io/dms3/go-dms3-files@v0.0.2/tarwriter_test.go:29:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := tw.WriteFile(tf, \"\"); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:51:00.609261 UTC","module_path":"github.com/gofaith/go-zero","version":"v1.1.3","sort_version":"1,1,3~","commit_time":"2021-12-01 12:44:14 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/gofaith/go-zero/core/syncx [github.com/gofaith/go-zero/core/syncx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gofaith/go-zero@v1.1.3/core/syncx/pool_test.go:23:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif v.(int) != 1 {\n\t\t\t\tt.Fatal(\"unmatch value\")\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:56:52.827131 UTC","module_path":"github.com/percona/kardianos-service","version":"v0.0.0-20190315212910-599703f26f3b","sort_version":"0,0,0,~20190315212910-599703f26f3b","commit_time":"2019-03-15 21:29:10 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/percona/kardianos-service@v0.0.0-20190315212910-599703f26f3b/service_test.go:34:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif p.numStopped == 0 {\n\t\t\tt.Fatal(\"Run() hasn't been stopped\")\n\t\t}"}]}
{"created_at":"2023-06-22 17:28:44.267581 UTC","module_path":"github.com/vladimirvivien/automi","version":"v0.1.0-alpha.0","sort_version":"0,1,0,~alpha,0","commit_time":"2019-07-31 13:50:52 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/operators/batch [synthetic/operators/batch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vladimirvivien/automi@v0.1.0-alpha.0/operators/batch/batch_test.go:138:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif batchSize != 4 \u0026\u0026 batchSize != 2 {\n\t\t\t\tt.Fatal(\"unexpected batch size:\", batchSize)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:39:18.562433 UTC","module_path":"github.com/dmotylev/nutrition","version":"v0.0.0-20170317091237-66072ec203f6","sort_version":"0,0,0,~20170317091237-66072ec203f6","commit_time":"2017-03-17 09:12:37 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dmotylev/nutrition@v0.0.0-20170317091237-66072ec203f6/appconfig_test.go:278:1","message":"ExampleLoad_FromEnv refers to unknown field or method: Load.FromEnv","source":"\nfunc ExampleLoad_FromEnv() {\n\tos.Clearenv()"}]}
{"created_at":"2023-06-22 17:35:53.404717 UTC","module_path":"github.com/gravwell/ingest/v3","version":"v3.3.12","sort_version":"3,3,a12~","commit_time":"2020-05-13 20:45:26 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/gravwell/ingest/v3/processors [github.com/gravwell/ingest/v3/processors.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gravwell/ingest/v3@v3.3.12/processors/processors_test.go:435:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err := ps.Process(\u0026ent); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:44:10.768282 UTC","module_path":"github.com/mcuadros/go-lookup","version":"v0.0.0-20200831155250-80f87a4fa5ee","sort_version":"0,0,0,~20200831155250-80f87a4fa5ee","commit_time":"2020-08-31 15:52:50 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/mcuadros/go-lookup [github.com/mcuadros/go-lookup.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mcuadros/go-lookup@v0.0.0-20200831155250-80f87a4fa5ee/lookup_test.go:281:1","message":"ExampleCaseInsensitive refers to unknown identifier: CaseInsensitive","source":"\nfunc ExampleCaseInsensitive() {\n\ttype ExampleStruct struct {"}]}
{"created_at":"2023-06-22 17:48:44.894415 UTC","module_path":"github.com/docker/libswarm","version":"v1.12.0","sort_version":"1,a12,0~","commit_time":"2016-07-26 06:10:31 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/agent [synthetic/agent.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/docker/libswarm@v1.12.0/agent/reporter_test.go:77:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err := reporter.UpdateTaskStatus(ctx, taskID, status); err != nil {\n\t\t\t\t\tt.Fatalf(\"sending should not fail: %v\", err)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:29:45.475726 UTC","module_path":"github.com/snikch/goodman","version":"v0.0.0-20171125024755-10e37e294daa","sort_version":"0,0,0,~20171125024755-10e37e294daa","commit_time":"2017-11-25 02:47:55 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/snikch/goodman@v0.0.0-20171125024755-10e37e294daa/server_test.go:16:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Dredd hooks server failed to start with error %s\", err.Error())\n\t\t}"}]}
{"created_at":"2023-06-22 17:33:49.156751 UTC","module_path":"github.com/webability-go/xcore/v2","version":"v2.1.7","sort_version":"2,1,7~","commit_time":"2023-06-15 17:12:08 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/webability-go/xcore/v2 [github.com/webability-go/xcore/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/webability-go/xcore/v2@v2.1.7/xlanguage_test.go:45:2","message":"output comment block must be the last comment block","source":"\tfmt.Println(langFR.Get(\"entry1\") + \" \" + langFR.Get(\"entry2\"))\n\t// Output:\n"}]}
{"created_at":"2023-06-22 17:45:24.975364 UTC","module_path":"github.com/aead/ecdh","version":"v0.2.0","sort_version":"0,2,0~","commit_time":"2019-02-19 10:12:36 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/aead/ecdh [github.com/aead/ecdh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/aead/ecdh@v0.2.0/ecdh_test.go:75:1","message":"ExampleX25519_Params refers to unknown field or method: X25519.Params","source":"\nfunc ExampleX25519_Params() {\n\tc25519 := X25519()"}]}
{"created_at":"2023-06-22 17:20:12.430427 UTC","module_path":"github.com/dgraph-io/ristretto","version":"v0.1.1","sort_version":"0,1,1~","commit_time":"2022-10-11 21:58:15 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/dgraph-io/ristretto/z [github.com/dgraph-io/ristretto/z.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dgraph-io/ristretto@v0.1.1/z/allocator_test.go:152:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif _, ok := m[b]; ok {\n\t\t\t\t\tt.Fatalf(\"Did not expect to see the same ptr\")\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:16:47.982138 UTC","module_path":"github.com/go-chi/chi","version":"v1.5.4","sort_version":"1,5,4~","commit_time":"2021-02-27 20:52:54 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/go-chi/chi [github.com/go-chi/chi.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-chi/chi@v1.5.4/mux_test.go:1577:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:33:52.590478 UTC","module_path":"gopkg.in/cenkalti/backoff.v1","version":"v1.1.0","sort_version":"1,1,0~","commit_time":"2017-07-11 22:02:23 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/cenkalti/backoff.v1@v1.1.0/example_test.go:24:1","message":"ExampleRetryContext refers to unknown identifier: RetryContext","source":"\nfunc ExampleRetryContext() {\n\t// A context"}]}
{"created_at":"2023-06-22 17:53:17.247684 UTC","module_path":"github.com/tianhai82/oauth2","version":"v0.0.0-20210430113849-0275d4e7bbf1","sort_version":"0,0,0,~20210430113849-0275d4e7bbf1","commit_time":"2021-04-30 11:38:49 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/tianhai82/oauth2/jwt_test [github.com/tianhai82/oauth2/jwt.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tianhai82/oauth2@v0.0.0-20210430113849-0275d4e7bbf1/jwt/example_test.go:13:1","message":"ExampleJWTConfig refers to unknown identifier: JWTConfig","source":"\nfunc ExampleJWTConfig() {\n\tctx := context.Background()"}]}
{"created_at":"2023-06-22 17:44:57.691906 UTC","module_path":"github.com/TuftsBCB/structure","version":"v0.0.0-20130712042756-270e11c872f1","sort_version":"0,0,0,~20130712042756-270e11c872f1","commit_time":"2013-07-12 04:27:56 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/TuftsBCB/structure@v0.0.0-20130712042756-270e11c872f1/rmsd_test.go:16:1","message":"ExampleRmsd refers to unknown identifier: Rmsd","source":"\nfunc ExampleRmsd() {\n\t// If you add a test, make sure you add a corresponding \"RMSD: ...\""}]}
{"created_at":"2023-06-22 17:54:16.005283 UTC","module_path":"github.com/digitorus/timestamp","version":"v0.0.0-20230220124323-d542479a2425","sort_version":"0,0,0,~20230220124323-d542479a2425","commit_time":"2023-02-20 12:43:23 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/digitorus/timestamp_test [github.com/digitorus/timestamp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/digitorus/timestamp@v0.0.0-20230220124323-d542479a2425/timestamp_example_test.go:18:1","message":"ExampleCreateRequest_ParseResponse refers to unknown field or method: CreateRequest.ParseResponse","source":"// nolint: govet\nfunc ExampleCreateRequest_ParseResponse() {\n\ttsq, err := timestamp.CreateRequest(strings.NewReader(\"ExampleCreateRequestParseResponse\"), \u0026timestamp.RequestOptions{"}]}
{"created_at":"2023-06-22 17:52:07.122014 UTC","module_path":"github.com/outcaste-io/ristretto","version":"v0.2.2","sort_version":"0,2,2~","commit_time":"2023-05-30 18:56:59 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/outcaste-io/ristretto/z [github.com/outcaste-io/ristretto/z.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/outcaste-io/ristretto@v0.2.2/z/allocator_test.go:152:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif _, ok := m[b]; ok {\n\t\t\t\t\tt.Fatalf(\"Did not expect to see the same ptr\")\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:50:03.910889 UTC","module_path":"go.dedis.ch/dela","version":"v0.0.0-20230614104258-7f67b6187f1c","sort_version":"0,0,0,~20230614104258-7f67b6187f1c","commit_time":"2023-06-14 10:42:58 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"go.dedis.ch/dela/mino/minogrpc [go.dedis.ch/dela/mino/minogrpc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/dela@v0.0.0-20230614104258-7f67b6187f1c/mino/minogrpc/example_test.go:105:1","message":"ExampleRPC_OpentracingDemo refers to unknown field or method: RPC.OpentracingDemo","source":"\nfunc ExampleRPC_OpentracingDemo() {\n\tN := 20"}]}
{"created_at":"2023-06-22 17:26:20.344767 UTC","module_path":"github.com/tsaikd/KDGoLib","version":"v0.0.0-20211113074651-c6ea6ab4ee08","sort_version":"0,0,0,~20211113074651-c6ea6ab4ee08","commit_time":"2021-11-13 07:46:51 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/tsaikd/KDGoLib/version_test [github.com/tsaikd/KDGoLib/version.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tsaikd/KDGoLib@v0.0.0-20211113074651-c6ea6ab4ee08/version/example_test.go:13:1","message":"ExampleShowVersionString refers to unknown identifier: ShowVersionString","source":"\nfunc ExampleShowVersionString() {\n\tfmt.Println(version.String())"}]}
{"created_at":"2023-06-22 17:36:47.140839 UTC","module_path":"github.com/Syfaro/telegram-bot-api","version":"v4.6.4+incompatible","sort_version":"4,6,4~","commit_time":"2018-10-08 19:45:45 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Syfaro/telegram-bot-api@v4.6.4+incompatible/bot_test.go:596:1","message":"ExampleAnswerInlineQuery refers to unknown identifier: AnswerInlineQuery","source":"\nfunc ExampleAnswerInlineQuery() {\n\tbot, err := tgbotapi.NewBotAPI(\"MyAwesomeBotToken\") // create new bot"}]}
{"created_at":"2023-06-22 17:18:13.908348 UTC","module_path":"github.com/TIBCOSoftware/flogo-lib","version":"v0.5.8","sort_version":"0,5,8~","commit_time":"2019-01-11 18:07:28 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/logger [synthetic/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/TIBCOSoftware/flogo-lib@v0.5.8/logger/logfactory_test.go:26:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t\trecovered = r\n\t\t\t\t\tt.Fatal(recovered)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:18:23.303128 UTC","module_path":"github.com/docker/swarmkit","version":"v1.12.0","sort_version":"1,a12,0~","commit_time":"2016-07-26 06:10:31 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/agent [synthetic/agent.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/docker/swarmkit@v1.12.0/agent/reporter_test.go:77:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err := reporter.UpdateTaskStatus(ctx, taskID, status); err != nil {\n\t\t\t\t\tt.Fatalf(\"sending should not fail: %v\", err)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:24:39.557531 UTC","module_path":"github.com/vmihailenco/msgpack/v4","version":"v4.3.12","sort_version":"4,3,a12~","commit_time":"2020-06-12 06:29:57 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/vmihailenco/msgpack/v4_test [github.com/vmihailenco/msgpack/v4.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vmihailenco/msgpack/v4@v4.3.12/example_test.go:120:1","message":"ExampleEncoder_UseArrayForStructs refers to unknown field or method: Encoder.UseArrayForStructs","source":"\nfunc ExampleEncoder_UseArrayForStructs() {\n\ttype Item struct {"}]}
{"created_at":"2023-06-22 17:41:11.303909 UTC","module_path":"github.com/flynn/go-dockerclient","version":"v0.0.0-20140731050339-70a6053bac9d","sort_version":"0,0,0,~20140731050339-70a6053bac9d","commit_time":"2014-07-31 05:03:39 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/flynn/go-dockerclient@v0.0.0-20140731050339-70a6053bac9d/example_test.go:13:1","message":"ExampleAttachToContainer refers to unknown identifier: AttachToContainer","source":"\nfunc ExampleAttachToContainer() {\n\tclient, err := docker.NewClient(\"http://localhost:4243\")"}]}
{"created_at":"2023-06-22 17:25:52.152568 UTC","module_path":"github.com/neo4j/neo4j-go-driver","version":"v1.8.3","sort_version":"1,8,3~","commit_time":"2020-09-16 07:00:20 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/neo4j/neo4j-go-driver/neo4j/internal/bolt [github.com/neo4j/neo4j-go-driver/neo4j/internal/bolt.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/neo4j/neo4j-go-driver@v1.8.3/neo4j/internal/bolt/connect_test.go:56:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif !foundV3 {\n\t\t\t\tt.Fatalf(\"Didn't find version 3 in handshake: %+v\", handshake)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:34:48.937301 UTC","module_path":"github.com/niftynei/glightning","version":"v0.8.2","sort_version":"0,8,2~","commit_time":"2020-05-02 00:21:58 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/glightning_test [synthetic/glightning.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/niftynei/glightning@v0.8.2/glightning/plugin_test.go:82:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:30:24.751022 UTC","module_path":"gopkg.in/src-d/proteus.v1","version":"v1.3.3","sort_version":"1,3,3~","commit_time":"2018-07-24 15:00:50 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/src-d/proteus.v1@v1.3.3/example_test.go:12:1","message":"ExampleProteus refers to unknown identifier: Proteus","source":"\nfunc ExampleProteus() {\n\taddr := \"localhost:8001\""}]}
{"created_at":"2023-06-22 17:40:11.46537 UTC","module_path":"jsouthworth.net/go/dyn","version":"v0.0.0-20190414143850-c77f9cc7c983","sort_version":"0,0,0,~20190414143850-c77f9cc7c983","commit_time":"2019-04-14 14:38:50 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/jsouthworth.net/go/dyn@v0.0.0-20190414143850-c77f9cc7c983/dyn_test.go:307:1","message":"ExampleCompse_multiReturn refers to unknown identifier: Compse","source":"\nfunc ExampleCompse_multiReturn() {\n\tdouble := func(x interface{}) (interface{}, interface{}) {"}]}
{"created_at":"2023-06-22 17:55:57.902959 UTC","module_path":"github.com/serum-errors/go-serum","version":"v0.8.0","sort_version":"0,8,0~","commit_time":"2022-11-24 22:11:27 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/serum-errors/go-serum_test [github.com/serum-errors/go-serum.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/serum-errors/go-serum@v0.8.0/constructors_test.go:61:1","message":"ExampleErrorWithTemplateQuoting refers to unknown identifier: ErrorWithTemplateQuoting","source":"\nfunc ExampleErrorWithTemplateQuoting() {\n\terr := serum.Error(\"demo-error-withquotes\","}]}
{"created_at":"2023-06-22 17:57:40.844116 UTC","module_path":"github.com/tomwright/dasel","version":"v1.27.3","sort_version":"1,a27,3~","commit_time":"2022-10-18 16:00:56 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/tomwright/dasel_test [github.com/tomwright/dasel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tomwright/dasel@v1.27.3/node_test.go:17:1","message":"ExampleNode_ReadmeExample refers to unknown field or method: Node.ReadmeExample","source":"// ExampleNode_ReadmeExample tests the code from the readme explanation.\nfunc ExampleNode_ReadmeExample() {\n\tprintNodeValue := func(nodes ...*dasel.Node) {"}]}
{"created_at":"2023-06-22 17:18:34.667914 UTC","module_path":"github.com/yuin/goldmark","version":"v1.5.4","sort_version":"1,5,4~","commit_time":"2023-02-02 12:02:21 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/yuin/goldmark/fuzz [github.com/yuin/goldmark/fuzz.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/yuin/goldmark@v1.5.4/fuzz/fuzz_test.go:26:9","message":"mismatched type in call to (*testing.F).Add: interface{}, fuzz target expects string","source":"\tfor _, c := range testCases {\n\t\tf.Add(c[\"markdown\"])\n\t}"}]}
{"created_at":"2023-06-22 17:57:17.061685 UTC","module_path":"github.com/MinterTeam/minter-go-sdk/v2","version":"v2.6.1","sort_version":"2,6,1~","commit_time":"2022-07-27 13:38:23 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/MinterTeam/minter-go-sdk/v2/transaction_test [github.com/MinterTeam/minter-go-sdk/v2/transaction.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/MinterTeam/minter-go-sdk/v2@v2.6.1/transaction/check_example_test.go:86:1","message":"ExampleDecodeRawCheck refers to unknown identifier: DecodeRawCheck","source":"\nfunc ExampleDecodeRawCheck() {\n\tdata, err := transaction.DecodeCheckBase64(\"+JqDNDgwAoMPQj8BiIrHIwSJ6AAAAbhB6j0CLIMmllVW8bZRsU0xJJR7hoP3s6tW/KBuC0IEdXsqEdrOhdATnOTo/bGDadB5BeczaDuCKfQbwhbHhLTXFAEcoBe///Sz9DHck4I5zScn8MHfphzNyYcn+o6br2CLN1X1oFt2jFPQnF6VF0h4IN9Dn0luFuRZhi59RJNgzmmizMTW\")"}]}
{"created_at":"2023-06-22 17:23:36.153147 UTC","module_path":"github.com/cenkalti/backoff/v3","version":"v3.2.2","sort_version":"3,2,2~","commit_time":"2020-01-14 06:23:38 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/cenkalti/backoff/v3 [github.com/cenkalti/backoff/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cenkalti/backoff/v3@v3.2.2/example_test.go:23:1","message":"ExampleRetryContext refers to unknown identifier: RetryContext","source":"\nfunc ExampleRetryContext() { // nolint: govet\n\t// A context"}]}
{"created_at":"2023-06-22 17:19:33.797632 UTC","module_path":"github.com/mmcdole/gofeed","version":"v1.2.1","sort_version":"1,2,1~","commit_time":"2023-02-28 20:12:16 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/mmcdole/gofeed_test [github.com/mmcdole/gofeed.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mmcdole/gofeed@v1.2.1/parser_test.go:273:1","message":"ExampleParserWithBasicAuth_ParseURL refers to unknown identifier: ParserWithBasicAuth","source":"\nfunc ExampleParserWithBasicAuth_ParseURL() {\n\tfp := gofeed.NewParser()"}]}
{"created_at":"2023-06-22 17:17:17.302549 UTC","module_path":"github.com/go-openapi/loads","version":"v0.21.2","sort_version":"0,a21,2~","commit_time":"2022-07-28 04:10:02 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/go-openapi/loads_test [github.com/go-openapi/loads.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-openapi/loads@v0.21.2/doc_test.go:28:1","message":"ExampleOption refers to unknown identifier: Option","source":"\nfunc ExampleOption() {\n\t// Example with custom loaders passed as options"}]}
{"created_at":"2023-06-22 17:16:49.244807 UTC","module_path":"github.com/apex/log","version":"v1.9.0","sort_version":"1,9,0~","commit_time":"2020-08-18 07:36:17 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/apex/log_test [github.com/apex/log.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/apex/log@v1.9.0/pkg_test.go:73:1","message":"Example_trace should return nothing","source":"// for example an upload which may fail.\nfunc Example_trace() (err error) {\n\tdefer log.Trace(\"upload\").Stop(\u0026err)"}]}
{"created_at":"2023-06-22 17:27:30.044964 UTC","module_path":"github.com/gruntwork-io/terragrunt","version":"v0.47.0","sort_version":"0,a47,0~","commit_time":"2023-06-15 20:15:20 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/gruntwork-io/terragrunt/dynamodb [github.com/gruntwork-io/terragrunt/dynamodb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gruntwork-io/terragrunt@v0.47.0/dynamodb/counting_semaphore_test.go:61:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\twaitForAllGoRoutinesToFinish.Add(1)\n\t\tgo runGoRoutine()\n\t}"}]}
{"created_at":"2023-06-22 17:54:12.033667 UTC","module_path":"github.com/xmidt-org/webpa-common/v2","version":"v2.2.0","sort_version":"2,2,0~","commit_time":"2023-05-11 17:18:17 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/xmidt-org/webpa-common/v2/server [github.com/xmidt-org/webpa-common/v2/server.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/xmidt-org/webpa-common/v2@v2.2.0/server/viper_test.go:47:1","message":"ExampleInitializeWithFlags refers to unknown identifier: InitializeWithFlags","source":"\nfunc ExampleInitializeWithFlags() {\n\tvar ("}]}
{"created_at":"2023-06-22 17:50:19.403245 UTC","module_path":"gitlab.com/aquachain/aquachain","version":"v1.7.15","sort_version":"1,7,a15~","commit_time":"2022-09-30 08:54:33 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"gitlab.com/aquachain/aquachain/p2p/simulations [gitlab.com/aquachain/aquachain/p2p/simulations.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/aquachain/aquachain@v1.7.15/p2p/simulations/mocker_test.go:112:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\twg.Done()\n\t\t\t\tt.Fatalf(\"Timeout waiting for nodes being started up!\")\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:48:27.435256 UTC","module_path":"jsouthworth.net/go/seq","version":"v0.0.0-20190918170623-46e5a194a36e","sort_version":"0,0,0,~20190918170623-46e5a194a36e","commit_time":"2019-09-18 17:06:23 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/jsouthworth.net/go/seq@v0.0.0-20190918170623-46e5a194a36e/seq_test.go:464:1","message":"ExampleRepeatInfinitely refers to unknown identifier: RepeatInfinitely","source":"\nfunc ExampleRepeatInfinitely() {\n\tfmt.Println(Take(10, RepeateInfinitely(\"foo\")))"}]}
{"created_at":"2023-06-22 18:01:17.530867 UTC","module_path":"github.com/OwnLocal/goes","version":"v1.0.0","sort_version":"1,0,0~","commit_time":"2016-07-26 19:28:54 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/OwnLocal/goes@v1.0.0/example_test.go:172:1","message":"ExampleConnectionOverrideHttpClient refers to unknown identifier: ConnectionOverrideHttpClient","source":"\nfunc ExampleConnectionOverrideHttpClient() {\n\ttr := \u0026http.Transport{"}]}
{"created_at":"2023-06-22 17:37:55.030334 UTC","module_path":"github.com/TRON-US/go-btfs-files","version":"v0.2.0","sort_version":"0,2,0~","commit_time":"2020-05-13 02:57:30 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/TRON-US/go-btfs-files [github.com/TRON-US/go-btfs-files.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/TRON-US/go-btfs-files@v0.2.0/tarwriter_test.go:29:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := tw.WriteFile(tf, \"\"); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:53:34.877066 UTC","module_path":"github.com/tevino/tcp-shaker","version":"v0.0.0-20230517040324-fab7e241418c","sort_version":"0,0,0,~20230517040324-fab7e241418c","commit_time":"2023-05-17 04:03:24 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/tevino/tcp-shaker [github.com/tevino/tcp-shaker.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tevino/tcp-shaker@v0.0.0-20230517040324-fab7e241418c/checker_test.go:131:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\twg.Add(1)\n\t\tgo check()\n\t}"}]}
{"created_at":"2023-06-22 17:16:07.134213 UTC","module_path":"golang.org/x/oauth2","version":"v0.9.0","sort_version":"0,9,0~","commit_time":"2023-06-13 14:28:47 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"golang.org/x/oauth2/jwt_test [golang.org/x/oauth2/jwt.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/oauth2@v0.9.0/jwt/example_test.go:13:1","message":"ExampleJWTConfig refers to unknown identifier: JWTConfig","source":"\nfunc ExampleJWTConfig() {\n\tctx := context.Background()"}]}
{"created_at":"2023-06-22 17:51:55.926012 UTC","module_path":"tea.melonie54.xyz/snow/snowball","version":"v0.0.0-20220320233333-30a6103570c1","sort_version":"0,0,0,~20220320233333-30a6103570c1","commit_time":"2022-03-20 23:33:33 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"tea.melonie54.xyz/snow/snowball/client [tea.melonie54.xyz/snow/snowball/client.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/tea.melonie54.xyz/snow/snowball@v0.0.0-20220320233333-30a6103570c1/client/client_test.go:28:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:18:11.028231 UTC","module_path":"github.com/zenazn/goji","version":"v1.0.1","sort_version":"1,0,1~","commit_time":"2019-06-02 02:26:47 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/graceful/listener [synthetic/graceful/listener.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zenazn/goji@v1.0.1/graceful/listener/race_test.go:50:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t}\n\t\t\t\tt.Fatalf(\"error accepting connection: %v\", err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:18:13.34809 UTC","module_path":"github.com/gonum/matrix","version":"v0.0.0-20181209220409-c518dec07be9","sort_version":"0,0,0,~20181209220409-c518dec07be9","commit_time":"2018-12-09 22:04:09 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/mat64_test [synthetic/mat64.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gonum/matrix@v0.0.0-20181209220409-c518dec07be9/mat64/cholesky_example_test.go:72:1","message":"ExampleCholeskySymRankOne refers to unknown identifier: CholeskySymRankOne","source":"\nfunc ExampleCholeskySymRankOne() {\n\ta := mat64.NewSymDense(4, []float64{"}]}
{"created_at":"2023-06-22 17:47:06.1822 UTC","module_path":"github.com/maxcnunes/httpfake","version":"v1.2.4","sort_version":"1,2,4~","commit_time":"2021-10-19 16:46:41 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/functional_tests [synthetic/functional_tests.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/maxcnunes/httpfake@v1.2.4/functional_tests/simple_get_gorutines_test.go:31:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:19:48.254241 UTC","module_path":"github.com/antchfx/htmlquery","version":"v1.3.0","sort_version":"1,3,0~","commit_time":"2023-01-26 11:58:08 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/antchfx/htmlquery [github.com/antchfx/htmlquery.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/antchfx/htmlquery@v1.3.0/query_test.go:171:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif n := FindOne(doc, `//div`); n == nil {\n\t\t\t\tt.Fatalf(\"should find one but got nil [%d]\", i)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:34:30.461636 UTC","module_path":"github.com/cristalhq/jwt/v3","version":"v3.1.0","sort_version":"3,1,0~","commit_time":"2021-07-09 12:01:14 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/cristalhq/jwt/v3_test [github.com/cristalhq/jwt/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cristalhq/jwt/v3@v3.1.0/example_test.go:94:1","message":"ExampleBuild_WithUserClaims refers to unknown field or method: Build.WithUserClaims","source":"\nfunc ExampleBuild_WithUserClaims() {\n\tkey := []byte(`secret`)"}]}
{"created_at":"2023-06-22 17:52:38.033344 UTC","module_path":"github.com/pschlump/socketio","version":"v0.0.0-20200510162242-2b534d03a6e0","sort_version":"0,0,0,~20200510162242-2b534d03a6e0","commit_time":"2020-05-10 16:22:42 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/engineio [synthetic/engineio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pschlump/socketio@v0.0.0-20200510162242-2b534d03a6e0/engineio/ioutil_test.go:37:7","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t\tif err != nil {\n\t\t\t\t\t\tt.Fatal(err)\n\t\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:29:44.161823 UTC","module_path":"github.com/johnfercher/maroto","version":"v0.42.0","sort_version":"0,a42,0~","commit_time":"2023-05-09 14:27:51 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/johnfercher/maroto/pkg/pdf_test [github.com/johnfercher/maroto/pkg/pdf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/johnfercher/maroto@v0.42.0/pkg/pdf/example_test.go:812:1","message":"ExamplePdfMaroto_SetMaxGridSize refers to unknown field or method: PdfMaroto.SetMaxGridSize","source":"// ExamplePdfMaroto_SetMaxGridSize configures max amount of cols per row. Default is 12 cols per row\nfunc ExamplePdfMaroto_SetMaxGridSize() {\n\tm := pdf.NewMaroto(consts.Portrait, consts.A4)"}]}
{"created_at":"2023-06-22 17:56:46.555914 UTC","module_path":"github.com/glycerine/rbtree","version":"v0.0.0-20190406191118-ceb71889d809","sort_version":"0,0,0,~20190406191118-ceb71889d809","commit_time":"2019-04-06 19:11:18 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/glycerine/rbtree@v0.0.0-20190406191118-ceb71889d809/rbtree_test.go:351:1","message":"ExampleIntString refers to unknown identifier: IntString","source":"\nfunc ExampleIntString() {\n\ttype MyItem struct {"}]}
{"created_at":"2023-06-22 17:52:21.542513 UTC","module_path":"github.com/Clever/leakybucket","version":"v1.2.0","sort_version":"1,2,0~","commit_time":"2021-07-15 21:10:05 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/Clever/leakybucket/redis [github.com/Clever/leakybucket/redis.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Clever/leakybucket@v1.2.0/redis/redis_test.go:89:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif _, err := bucket.Add(1); err != nil \u0026\u0026 err != leakybucket.ErrorFull {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:51:18.255827 UTC","module_path":"github.com/a8m/kinesis-producer","version":"v0.2.0","sort_version":"0,2,0~","commit_time":"2018-11-21 22:01:12 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/a8m/kinesis-producer@v0.2.0/example_test.go:13:1","message":"ExampleSimple refers to unknown identifier: Simple","source":"\nfunc ExampleSimple() {\n\tlogger := \u0026StdLogger{log.New(os.Stdout, \"\", log.LstdFlags)}"}]}
{"created_at":"2023-06-22 17:22:13.56901 UTC","module_path":"github.com/ilyakaznacheev/cleanenv","version":"v1.4.2","sort_version":"1,4,2~","commit_time":"2022-12-14 12:08:11 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/ilyakaznacheev/cleanenv_test [github.com/ilyakaznacheev/cleanenv.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ilyakaznacheev/cleanenv@v1.4.2/example_test.go:167:1","message":"ExampleReadEnvWithURL refers to unknown identifier: ReadEnvWithURL","source":"// ExampleReadEnv reads environment variables or default values into the structure\nfunc ExampleReadEnvWithURL() {\n\ttype config struct {"}]}
{"created_at":"2023-06-22 17:56:38.791421 UTC","module_path":"git.fractalqb.de/fractalqb/ggja","version":"v0.11.2","sort_version":"0,a11,2~","commit_time":"2022-03-12 12:35:03 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"git.fractalqb.de/fractalqb/ggja [git.fractalqb.de/fractalqb/ggja.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/git.fractalqb.de/fractalqb/ggja@v0.11.2/obj_test.go:50:1","message":"ExampleObj_Sets refers to unknown field or method: Obj.Sets","source":"\nfunc ExampleObj_Sets() {\n\tbar := map[string]interface{}{\"foo\": 4711}"}]}
{"created_at":"2023-06-22 17:22:26.071752 UTC","module_path":"github.com/FactomProject/factomd","version":"v1.13.0","sort_version":"1,a13,0~","commit_time":"2021-02-18 23:57:03 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/FactomProject/factomd/p2p [github.com/FactomProject/factomd/p2p.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/FactomProject/factomd@v1.13.0/p2p/controller_routing_test.go:140:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tcase \u003c-time.After(time.Second):\n\t\t\t\tt.Fatal(\"stuck waiting for application parcel\")\n\t\t\tcase p := \u003c-net.fromNetwork:"}]}
{"created_at":"2023-06-22 17:24:05.017843 UTC","module_path":"github.com/emersion/go-smtp","version":"v0.16.0","sort_version":"0,a16,0~","commit_time":"2022-10-21 11:45:29 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/emersion/go-smtp_test [github.com/emersion/go-smtp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/emersion/go-smtp@v0.16.0/example_test.go:64:1","message":"ExampleSendMail_PlainAuth refers to unknown field or method: SendMail.PlainAuth","source":"\nfunc ExampleSendMail_PlainAuth() {\n\t// hostname is used by PlainAuth to validate the TLS certificate."}]}
{"created_at":"2023-06-22 17:38:50.534826 UTC","module_path":"github.com/qbeon/webwire-go","version":"v1.0.0-rc1","sort_version":"1,0,0,~rc1","commit_time":"2018-06-13 15:53:56 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/test [synthetic/test.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/qbeon/webwire-go@v1.0.0-rc1/test/serverSignal_test.go:33:7","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\t); err != nil {\n\t\t\t\t\t\tt.Fatalf(\"Couldn't send signal to client: %s\", err)\n\t\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:18:50.429728 UTC","module_path":"github.com/tendermint/tmlibs","version":"v0.9.0","sort_version":"0,9,0~","commit_time":"2018-06-25 02:40:24 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/db/remotedb_test [synthetic/db/remotedb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tendermint/tmlibs@v0.9.0/db/remotedb/remotedb_test.go:24:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := srv.Serve(ln); err != nil {\n\t\t\tt.Fatalf(\"BindServer: %v\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:55:18.413503 UTC","module_path":"snow.mrmelon54.xyz/snowball","version":"v0.0.0-20220321214531-87e6b285245c","sort_version":"0,0,0,~20220321214531-87e6b285245c","commit_time":"2022-03-21 21:45:31 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"snow.mrmelon54.xyz/snowball/client [snow.mrmelon54.xyz/snowball/client.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/snow.mrmelon54.xyz/snowball@v0.0.0-20220321214531-87e6b285245c/client/client_test.go:28:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:23:55.046939 UTC","module_path":"github.com/evalphobia/logrus_sentry","version":"v0.8.2","sort_version":"0,8,2~","commit_time":"2019-02-04 05:39:54 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/evalphobia/logrus_sentry@v0.8.2/async_test.go:37:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tcase \u003c-timeoutCh:\n\t\t\t\t\tt.Fatalf(\"Waited %s without a response\", hook.Timeout*2)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:31:53.656926 UTC","module_path":"github.com/stvp/tempredis","version":"v0.0.0-20181119212430-b82af8480203","sort_version":"0,0,0,~20181119212430-b82af8480203","commit_time":"2018-11-19 21:24:30 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stvp/tempredis@v0.0.0-20181119212430-b82af8480203/example_test.go:7:1","message":"ExampleUsage refers to unknown identifier: Usage","source":"\nfunc ExampleUsage() {\n\tserver, err := Start(Config{\"databases\": \"8\"})"}]}
{"created_at":"2023-06-22 17:59:56.244366 UTC","module_path":"github.com/redis/rueidis","version":"v1.0.9","sort_version":"1,0,9~","commit_time":"2023-06-18 16:02:06 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/redis/rueidis [github.com/redis/rueidis.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/redis/rueidis@v1.0.9/pipe_test.go:581:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := p.Do(context.Background(), cmds.UnsubscribeCmd).Error(); err != nil {\n\t\t\t\tt.Fatalf(\"unexpected err %v\", err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:30:34.793809 UTC","module_path":"github.com/gogs/chardet","version":"v0.0.0-20211120154057-b7413eaefb8f","sort_version":"0,0,0,~20211120154057-b7413eaefb8f","commit_time":"2021-11-20 15:40:57 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/gogs/chardet_test [github.com/gogs/chardet.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogs/chardet@v0.0.0-20211120154057-b7413eaefb8f/example_test.go:16:1","message":"ExampleTextDetector refers to unknown identifier: TextDetector","source":"\nfunc ExampleTextDetector() {\n\tdetector := chardet.NewTextDetector()"}]}
{"created_at":"2023-06-22 17:55:31.734171 UTC","module_path":"github.com/GoLangsam/container","version":"v0.0.0-20200322031231-4b9bf867589d","sort_version":"0,0,0,~20200322031231-4b9bf867589d","commit_time":"2020-03-22 03:12:31 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/ccsafe/das_test [synthetic/ccsafe/das.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/GoLangsam/container@v0.0.0-20200322031231-4b9bf867589d/ccsafe/das/example_test.go:24:1","message":"ExampleDas should return nothing","source":"\nfunc ExampleDas() *das.Das {\n\tvar das *das.Das // test also lazyInit"}]}
{"created_at":"2023-06-22 17:43:07.186412 UTC","module_path":"github.com/bmizerany/aws4","version":"v0.0.0-20141025110357-5fb2e7239626","sort_version":"0,0,0,~20141025110357-5fb2e7239626","commit_time":"2014-10-25 11:03:57 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bmizerany/aws4@v0.0.0-20141025110357-5fb2e7239626/example_test.go:42:1","message":"ExampleSignGlacier refers to unknown identifier: SignGlacier","source":"\nfunc ExampleSignGlacier() {\n\tr, _ := http.NewRequest(\"GET\", \"https://glacier.us-east-1.amazonaws.com/-/vaults\", nil)"}]}
{"created_at":"2023-06-22 17:45:14.108535 UTC","module_path":"github.com/currantlabs/gatt","version":"v0.0.0-20161006170101-f949eac78f4e","sort_version":"0,0,0,~20161006170101-f949eac78f4e","commit_time":"2016-10-06 17:01:01 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/currantlabs/gatt@v0.0.0-20161006170101-f949eac78f4e/option_linux_test.go:22:1","message":"ExampleSetAdvertisingData refers to unknown identifier: SetAdvertisingData","source":"\nfunc ExampleSetAdvertisingData() {\n\t// Manually crafting an advertising packet with a type field, and a service uuid - 0xFE01."}]}
{"created_at":"2023-06-22 17:31:25.263777 UTC","module_path":"gopkg.in/redsync.v1","version":"v1.0.1","sort_version":"1,0,1~","commit_time":"2016-06-17 03:24:05 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/redsync.v1@v1.0.1/mutex_test.go:20:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"Expected err == nil, got %q\", err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:16:13.596661 UTC","module_path":"github.com/BurntSushi/toml","version":"v1.3.2","sort_version":"1,3,2~","commit_time":"2023-06-08 06:14:45 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/BurntSushi/toml [github.com/BurntSushi/toml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/BurntSushi/toml@v1.3.2/decode_test.go:1218:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:47:07.127759 UTC","module_path":"github.com/ejholmes/hookshot","version":"v0.0.0-20170729003051-9585af7fb64a","sort_version":"0,0,0,~20170729003051-9585af7fb64a","commit_time":"2017-07-29 00:30:51 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ejholmes/hookshot@v0.0.0-20170729003051-9585af7fb64a/hookshot_test.go:146:1","message":"ExampleRouterHandleFunc refers to unknown identifier: RouterHandleFunc","source":"\nfunc ExampleRouterHandleFunc() {\n\tr := NewRouter()"}]}
{"created_at":"2023-06-22 17:19:49.902824 UTC","module_path":"github.com/go-telegram-bot-api/telegram-bot-api/v5","version":"v5.5.1","sort_version":"5,5,1~","commit_time":"2021-12-13 13:55:06 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/go-telegram-bot-api/telegram-bot-api/v5 [github.com/go-telegram-bot-api/telegram-bot-api/v5.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-telegram-bot-api/telegram-bot-api/v5@v5.5.1/bot_test.go:749:1","message":"ExampleWebhookHandler refers to unknown identifier: WebhookHandler","source":"\nfunc ExampleWebhookHandler() {\n\tbot, err := NewBotAPI(\"MyAwesomeBotToken\")"}]}
{"created_at":"2023-06-22 17:19:18.063575 UTC","module_path":"github.com/minio/sha256-simd","version":"v1.0.1","sort_version":"1,0,1~","commit_time":"2023-02-22 11:48:20 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/minio/sha256-simd [github.com/minio/sha256-simd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/minio/sha256-simd@v1.0.1/sha256blockAvx512_amd64_test.go:244:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif bytes.Compare(output[:], golden[offset+i].out[:]) != 0 {\n\t\t\t\tt.Fatalf(\"Sum256 function: sha256(%s) = %s want %s\", golden[offset+i].in, hex.EncodeToString(output[:]), hex.EncodeToString(golden[offset+i].out[:]))\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:50:21.77977 UTC","module_path":"github.com/fhs/gompd/v2","version":"v2.3.0","sort_version":"2,3,0~","commit_time":"2022-10-23 21:05:33 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/fhs/gompd/v2/mpd_test [github.com/fhs/gompd/v2/mpd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fhs/gompd/v2@v2.3.0/mpd/example_test.go:73:1","message":"ExampleBeginCommandList refers to unknown identifier: BeginCommandList","source":"\nfunc ExampleBeginCommandList() {\n\t// Connect to the MPD server."}]}
{"created_at":"2023-06-22 17:33:01.30472 UTC","module_path":"go.mozilla.org/sops/v3","version":"v3.7.3","sort_version":"3,7,3~","commit_time":"2022-05-09 17:29:55 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"go.mozilla.org/sops/v3/decrypt [go.mozilla.org/sops/v3/decrypt.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.mozilla.org/sops/v3@v3.7.3/decrypt/example_test.go:34:1","message":"ExampleDecryptFile refers to unknown identifier: DecryptFile","source":"\nfunc ExampleDecryptFile() {\n\tvar ("}]}
{"created_at":"2023-06-22 17:40:39.910627 UTC","module_path":"modernc.org/cc","version":"v1.0.1","sort_version":"1,0,1~","commit_time":"2021-02-23 11:13:06 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"modernc.org/cc [modernc.org/cc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/modernc.org/cc@v1.0.1/all_test.go:3281:1","message":"ExampleCharTypes refers to unknown identifier: CharTypes","source":"\nfunc ExampleCharTypes() {\n\tast, err := Parse("}]}
{"created_at":"2023-06-22 17:17:10.4745 UTC","module_path":"github.com/ipfs/go-log","version":"v1.0.5","sort_version":"1,0,5~","commit_time":"2021-03-18 23:39:38 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/ipfs/go-log/writer [github.com/ipfs/go-log/writer.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ipfs/go-log@v1.0.5/writer/writer_test.go:136:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\tfor _, r := range readers {\n\t\tgo f(r)\n\t}"},{"package_id":"github.com/ipfs/go-log/writer [github.com/ipfs/go-log/writer.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ipfs/go-log@v1.0.5/writer/writer_test.go:136:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\tfor _, r := range readers {\n\t\tgo f(r)\n\t}"}]}
{"created_at":"2023-06-22 17:16:54.491561 UTC","module_path":"github.com/cockroachdb/errors","version":"v1.10.0","sort_version":"1,a10,0~","commit_time":"2023-06-12 16:06:27 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/cockroachdb/errors/markers_test [github.com/cockroachdb/errors/markers.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cockroachdb/errors@v1.10.0/markers/example_is_type_test.go:29:1","message":"ExampleIsType refers to unknown identifier: IsType","source":"\nfunc ExampleIsType() {\n\tbase := \u0026ExampleError{\"world\"}"},{"package_id":"github.com/cockroachdb/errors/markers_test [github.com/cockroachdb/errors/markers.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cockroachdb/errors@v1.10.0/markers/example_is_type_test.go:43:1","message":"ExampleIsInterface refers to unknown identifier: IsInterface","source":"\nfunc ExampleIsInterface() {\n\tbase := \u0026net.AddrError{"}]}
{"created_at":"2023-06-22 17:26:04.051741 UTC","module_path":"github.com/corestoreio/log","version":"v1.1.1-0.20210525074935-51b03b05d2ed","sort_version":"1,1,1,0,~20210525074935-51b03b05d2ed","commit_time":"2021-05-25 07:49:35 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/corestoreio/log_test [github.com/corestoreio/log.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/corestoreio/log@v1.1.1-0.20210525074935-51b03b05d2ed/mutex_buffer_test.go:39:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif _, err := mb.Write([]byte(`W1`)); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/corestoreio/log_test [github.com/corestoreio/log.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/corestoreio/log@v1.1.1-0.20210525074935-51b03b05d2ed/mutex_buffer_test.go:47:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif _, err := mb.Write([]byte(`W2`)); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:43:32.023469 UTC","module_path":"github.com/alexbeltran/gobacnet","version":"v0.0.0-20180105203751-41ceb6925099","sort_version":"0,0,0,~20180105203751-41ceb6925099","commit_time":"2018-01-05 20:37:51 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/utsm [synthetic/utsm.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/alexbeltran/gobacnet@v0.0.0-20180105203751-41ceb6925099/utsm/main_test.go:63:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\tgo publisher(t, m)\n\tgo sub(t, m, 9, 20)\n\tgo sub(t, m, 0, 2)"},{"package_id":"synthetic/utsm [synthetic/utsm.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/alexbeltran/gobacnet@v0.0.0-20180105203751-41ceb6925099/utsm/main_test.go:64:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\tgo sub(t, m, 9, 20)\n\tgo sub(t, m, 0, 2)\n\tsub(t, m, 10, 30)"}]}
{"created_at":"2023-06-22 17:52:07.932068 UTC","module_path":"github.com/mtabini/go-lua","version":"v0.0.0-20151209004140-d31994cafe65","sort_version":"0,0,0,~20151209004140-d31994cafe65","commit_time":"2015-12-09 00:41:40 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mtabini/go-lua@v0.0.0-20151209004140-d31994cafe65/doc_test.go:8:1","message":"ExampleFunction should be niladic","source":"// This example receives a variable number of numerical arguments and returns their average and sum.\nfunc ExampleFunction(l *lua.State) int {\n\tn := l.Top() // Number of arguments."},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mtabini/go-lua@v0.0.0-20151209004140-d31994cafe65/doc_test.go:8:1","message":"ExampleFunction should return nothing","source":"// This example receives a variable number of numerical arguments and returns their average and sum.\nfunc ExampleFunction(l *lua.State) int {\n\tn := l.Top() // Number of arguments."}]}
{"created_at":"2023-06-22 17:39:20.833137 UTC","module_path":"github.com/kjk/betterguid","version":"v0.0.0-20170621091430-c442874ba63a","sort_version":"0,0,0,~20170621091430-c442874ba63a","commit_time":"2017-06-21 09:14:30 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kjk/betterguid@v0.0.0-20170621091430-c442874ba63a/betterguid_test.go:57:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\twg.Add(1)\n\t\tgo doMany(t, \u0026wg)\n\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kjk/betterguid@v0.0.0-20170621091430-c442874ba63a/betterguid_test.go:57:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\twg.Add(1)\n\t\tgo doMany(t, \u0026wg)\n\t}"}]}
{"created_at":"2023-06-22 17:39:44.165602 UTC","module_path":"github.com/farshidtz/elog","version":"v1.0.1","sort_version":"1,0,1~","commit_time":"2019-08-15 08:16:15 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/farshidtz/elog [github.com/farshidtz/elog.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/farshidtz/elog@v1.0.1/logger_test.go:51:1","message":"ExampleDebug refers to unknown identifier: Debug","source":"\nfunc ExampleDebug() {\n\tvar debug bool = true"},{"package_id":"github.com/farshidtz/elog [github.com/farshidtz/elog.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/farshidtz/elog@v1.0.1/logger_test.go:62:1","message":"ExampleDebug_trace refers to unknown identifier: Debug","source":"\nfunc ExampleDebug_trace() {\n\tvar debug bool = true"}]}
{"created_at":"2023-06-22 17:16:32.886291 UTC","module_path":"github.com/rcrowley/go-metrics","version":"v0.0.0-20201227073835-cf1acfcdf475","sort_version":"0,0,0,~20201227073835-cf1acfcdf475","commit_time":"2020-12-27 07:38:35 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rcrowley/go-metrics@v0.0.0-20201227073835-cf1acfcdf475/registry_test.go:348:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif !ok {\n\t\t\t\tt.Fatal(\"Expected a Counter type\")\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rcrowley/go-metrics@v0.0.0-20201227073835-cf1acfcdf475/registry_test.go:351:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif retCounter != counter {\n\t\t\t\tt.Fatal(\"Counter references don't match\")\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:49:05.038474 UTC","module_path":"github.com/massnetorg/tendermint","version":"v1.0.0","sort_version":"1,0,0~","commit_time":"2020-03-05 08:53:28 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/massnetorg/tendermint/go-wire_test [github.com/massnetorg/tendermint/go-wire.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/massnetorg/tendermint@v1.0.0/go-wire/example_test.go:25:1","message":"Example_RegisterInterface has malformed example suffix: RegisterInterface","source":"\nfunc Example_RegisterInterface() {\n\ttype Receiver interface{}"},{"package_id":"github.com/massnetorg/tendermint/go-wire_test [github.com/massnetorg/tendermint/go-wire.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/massnetorg/tendermint@v1.0.0/go-wire/example_test.go:49:1","message":"Example_EndToEnd_ReadWriteBinary has malformed example suffix: EndToEnd_ReadWriteBinary","source":"\nfunc Example_EndToEnd_ReadWriteBinary() {\n\ttype Receiver interface{}"}]}
{"created_at":"2023-06-22 17:22:34.503009 UTC","module_path":"github.com/sethgrid/pester","version":"v1.2.0","sort_version":"1,2,0~","commit_time":"2022-02-09 15:14:23 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/sethgrid/pester [github.com/sethgrid/pester.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/sethgrid/pester@v1.2.0/pester_test.go:643:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tcase err := \u003c-errCh:\n\t\t\tt.Fatal(err)\n\t\tcase \u003c-time.After(250 * time.Millisecond):"},{"package_id":"github.com/sethgrid/pester [github.com/sethgrid/pester.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/sethgrid/pester@v1.2.0/pester_test.go:690:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tcase err := \u003c-errCh:\n\t\t\tt.Fatal(err)\n\t\tcase \u003c-time.After(250 * time.Millisecond):"}]}
{"created_at":"2023-06-22 17:55:36.469551 UTC","module_path":"go.bmvs.io/ynab","version":"v1.2.2","sort_version":"1,2,2~","commit_time":"2018-10-06 16:13:00 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"go.bmvs.io/ynab/api/month_test [go.bmvs.io/ynab/api/month.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.bmvs.io/ynab@v1.2.2/api/month/example_test.go:15:1","message":"ExampleService_GetMonth refers to unknown identifier: Service","source":"\nfunc ExampleService_GetMonth() {\n\tc := ynab.NewClient(\"\u003cvalid_ynab_access_token\u003e\")"},{"package_id":"go.bmvs.io/ynab/api/month_test [go.bmvs.io/ynab/api/month.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.bmvs.io/ynab@v1.2.2/api/month/example_test.go:24:1","message":"ExampleService_GetMonths refers to unknown identifier: Service","source":"\nfunc ExampleService_GetMonths() {\n\tc := ynab.NewClient(\"\u003cvalid_ynab_access_token\u003e\")"}]}
{"created_at":"2023-06-22 17:21:44.317178 UTC","module_path":"go.bug.st/serial.v1","version":"v0.0.0-20191202182710-24a6610f0541","sort_version":"0,0,0,~20191202182710-24a6610f0541","commit_time":"2019-12-02 18:27:10 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.bug.st/serial.v1@v0.0.0-20191202182710-24a6610f0541/example_modem_bits_test.go:14:1","message":"ExampleGetSetModemBits refers to unknown identifier: GetSetModemBits","source":"\nfunc ExampleGetSetModemBits() {\n\t// Open the first serial port detected at 9600bps N81"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.bug.st/serial.v1@v0.0.0-20191202182710-24a6610f0541/example_serialport_test.go:13:1","message":"ExampleSerialPort_SetMode refers to unknown identifier: SerialPort","source":"\nfunc ExampleSerialPort_SetMode() {\n\tport, err := serial.Open(\"/dev/ttyACM0\", \u0026serial.Mode{})"}]}
{"created_at":"2023-06-22 17:51:37.808973 UTC","module_path":"github.com/getlantern/go-update","version":"v0.0.0-20230221120840-8d795213a8bc","sort_version":"0,0,0,~20230221120840-8d795213a8bc","commit_time":"2023-02-21 12:08:40 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/getlantern/go-update [github.com/getlantern/go-update.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/getlantern/go-update@v0.0.0-20230221120840-8d795213a8bc/update_test.go:98:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif _, err := w.Write(newFile); err != nil {\n\t\t\t\t\tt.Fatalf(\"Unable to write to file: %v\", err)\n\t\t\t\t}"},{"package_id":"github.com/getlantern/go-update [github.com/getlantern/go-update.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/getlantern/go-update@v0.0.0-20230221120840-8d795213a8bc/update_test.go:102:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Error setting up HTTP server: %v\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:58:25.72835 UTC","module_path":"modernc.org/kv","version":"v1.0.6","sort_version":"1,0,6~","commit_time":"2023-05-18 20:10:39 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"modernc.org/kv [modernc.org/kv.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/modernc.org/kv@v1.0.6/all_test.go:2054:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"Create db failed: %v\", err)\n\t\t\t}"},{"package_id":"modernc.org/kv [modernc.org/kv.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/modernc.org/kv@v1.0.6/all_test.go:2070:7","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\tif err != nil {\n\t\t\t\t\t\tt.Fatalf(\"Put failed: %v\", err)\n\t\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:42:52.914882 UTC","module_path":"github.com/pkg/diff","version":"v0.0.0-20210226163009-20ebb0f2a09e","sort_version":"0,0,0,~20210226163009-20ebb0f2a09e","commit_time":"2021-02-26 16:30:09 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/pkg/diff_test [github.com/pkg/diff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pkg/diff@v0.0.0-20210226163009-20ebb0f2a09e/example_test.go:9:1","message":"Example_Slices has malformed example suffix: Slices","source":"\nfunc Example_Slices() {\n\twant := []int{1, 2, 3, 4, 5, 6, 7, 8, 9}"},{"package_id":"github.com/pkg/diff_test [github.com/pkg/diff.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pkg/diff@v0.0.0-20210226163009-20ebb0f2a09e/example_test.go:29:1","message":"Example_Text has malformed example suffix: Text","source":"\nfunc Example_Text() {\n\ta := `"}]}
{"created_at":"2023-06-22 17:40:03.054663 UTC","module_path":"github.com/tucnak/climax","version":"v0.0.0-20200905070204-9f87fd172d1c","sort_version":"0,0,0,~20200905070204-9f87fd172d1c","commit_time":"2020-09-05 07:02:04 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/tucnak/climax_test [github.com/tucnak/climax.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tucnak/climax@v0.0.0-20200905070204-9f87fd172d1c/examples_test.go:54:1","message":"Example_handler should be niladic","source":"// Handler accepts a climax.Context object and returns an exitcode integer.\nfunc Example_handler(ctx climax.Context) int {\n\tif len(ctx.Args) \u003c 2 {"},{"package_id":"github.com/tucnak/climax_test [github.com/tucnak/climax.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tucnak/climax@v0.0.0-20200905070204-9f87fd172d1c/examples_test.go:54:1","message":"Example_handler should return nothing","source":"// Handler accepts a climax.Context object and returns an exitcode integer.\nfunc Example_handler(ctx climax.Context) int {\n\tif len(ctx.Args) \u003c 2 {"}]}
{"created_at":"2023-06-22 17:53:12.336601 UTC","module_path":"github.com/aquilax/tripcode","version":"v1.0.1","sort_version":"1,0,1~","commit_time":"2023-04-07 05:16:50 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/aquilax/tripcode_test [github.com/aquilax/tripcode.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/aquilax/tripcode@v1.0.1/example_test.go:9:1","message":"ExampleTripcode_Tripcode refers to unknown field or method: Tripcode.Tripcode","source":"\nfunc ExampleTripcode_Tripcode() {\n\tfmt.Println(tripcode.Tripcode(\"password\"))"},{"package_id":"github.com/aquilax/tripcode_test [github.com/aquilax/tripcode.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/aquilax/tripcode@v1.0.1/example_test.go:15:1","message":"ExampleTripcode_SecureTripcode refers to unknown field or method: Tripcode.SecureTripcode","source":"\nfunc ExampleTripcode_SecureTripcode() {\n\tfmt.Println(tripcode.SecureTripcode(\"password\", \"salt\"))"}]}
{"created_at":"2023-06-22 17:34:21.94202 UTC","module_path":"github.com/vrischmann/jsonutil","version":"v0.0.0-20161220213622-d44b59f0575c","sort_version":"0,0,0,~20161220213622-d44b59f0575c","commit_time":"2016-12-20 21:36:22 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vrischmann/jsonutil@v0.0.0-20161220213622-d44b59f0575c/example_test.go:11:1","message":"ExampleMarshalJSON refers to unknown identifier: MarshalJSON","source":"\nfunc ExampleMarshalJSON() {\n\td := jsonutil.Duration{time.Minute * 10}"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vrischmann/jsonutil@v0.0.0-20161220213622-d44b59f0575c/example_test.go:20:1","message":"ExampleUnmarshalJSON refers to unknown identifier: UnmarshalJSON","source":"\nfunc ExampleUnmarshalJSON() {\n\tvar d jsonutil.Duration"}]}
{"created_at":"2023-06-22 18:00:51.956245 UTC","module_path":"gopkg.in/raiqub/dot.v1","version":"v1.0.0-20160122193751-1e0df1f7c347","sort_version":"1,0,0,~20160122193751-1e0df1f7c347","commit_time":"2016-01-22 19:37:51 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/raiqub/dot.v1@v1.0.0-20160122193751-1e0df1f7c347/net_test.go:38:4","message":"call to (*T).Skip from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Skip(\"Failed to listen tcp/64080\")\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/raiqub/dot.v1@v1.0.0-20160122193751-1e0df1f7c347/net_test.go:44:4","message":"call to (*T).Skip from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Skip(\"Failed to accept connection\")\n\t\t}"}]}
{"created_at":"2023-06-22 17:58:06.308454 UTC","module_path":"import.name/lock","version":"v0.0.0-20211205191324-f24933776f0b","sort_version":"0,0,0,~20211205191324-f24933776f0b","commit_time":"2021-12-05 19:13:24 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"import.name/lock_test [import.name/lock.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/import.name/lock@v0.0.0-20211205191324-f24933776f0b/example_test.go:20:1","message":"ExampleLock refers to unknown identifier: Lock","source":"\nfunc ExampleLock() {\n\tvar ("},{"package_id":"import.name/lock_test [import.name/lock.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/import.name/lock@v0.0.0-20211205191324-f24933776f0b/example_test.go:36:1","message":"ExampleUnlock refers to unknown identifier: Unlock","source":"\nfunc ExampleUnlock() {\n\tvar mu sync.Mutex"}]}
{"created_at":"2023-06-22 17:47:50.312491 UTC","module_path":"github.com/facebookgo/waitout","version":"v0.0.0-20150612182919-ad2714ff0cfc","sort_version":"0,0,0,~20150612182919-ad2714ff0cfc","commit_time":"2015-06-12 18:29:19 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/facebookgo/waitout@v0.0.0-20150612182919-ad2714ff0cfc/waitout_test.go:60:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif r := recover(); r != nil {\n\t\t\t\tt.Fatal(r)\n\t\t\t}"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/facebookgo/waitout@v0.0.0-20150612182919-ad2714ff0cfc/waitout_test.go:70:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif r := recover(); r != nil {\n\t\t\t\tt.Fatal(r)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:33:58.469759 UTC","module_path":"github.com/grafeas/kritis","version":"v0.2.2","sort_version":"0,2,2~","commit_time":"2020-01-10 17:17:30 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/pkg/kritis/metadata/grafeas [synthetic/pkg/kritis/metadata/grafeas.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/grafeas/kritis@v0.2.2/pkg/kritis/metadata/grafeas/grafeas_test.go:82:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := gs.Serve(lis); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic/pkg/kritis/metadata/grafeas [synthetic/pkg/kritis/metadata/grafeas.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/grafeas/kritis@v0.2.2/pkg/kritis/metadata/grafeas/grafeas_test.go:135:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := server.Serve(lis); err != nil {\n\t\t\tt.Fatalf(\"Failed to server %v\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:21:51.626572 UTC","module_path":"github.com/garyburd/go-oauth","version":"v0.0.0-20180319155456-bca2e7f09a17","sort_version":"0,0,0,~20180319155456-bca2e7f09a17","commit_time":"2018-03-19 15:54:56 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/oauth_test [synthetic/oauth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/garyburd/go-oauth@v0.0.0-20180319155456-bca2e7f09a17/oauth/examples_test.go:27:1","message":"ExampleClient_SetAuthorizationHeader should be niladic","source":"// use of the URL Opaque field.\nfunc ExampleClient_SetAuthorizationHeader(client *oauth.Client, credentials *oauth.Credentials) error {\n\tform := url.Values{\"maxResults\": {\"100\"}}"},{"package_id":"synthetic/oauth_test [synthetic/oauth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/garyburd/go-oauth@v0.0.0-20180319155456-bca2e7f09a17/oauth/examples_test.go:27:1","message":"ExampleClient_SetAuthorizationHeader should return nothing","source":"// use of the URL Opaque field.\nfunc ExampleClient_SetAuthorizationHeader(client *oauth.Client, credentials *oauth.Credentials) error {\n\tform := url.Values{\"maxResults\": {\"100\"}}"}]}
{"created_at":"2023-06-22 17:22:48.590025 UTC","module_path":"github.com/mailgun/mailgun-go","version":"v2.0.0+incompatible","sort_version":"2,0,0~","commit_time":"2018-10-04 22:44:18 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mailgun/mailgun-go@v2.0.0+incompatible/examples_test.go:10:1","message":"ExampleMailgunImpl_ValidateEmail refers to unknown field or method: MailgunImpl.ValidateEmail","source":"\nfunc ExampleMailgunImpl_ValidateEmail() {\n\tv := NewEmailValidator(\"my_public_api_key\")"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mailgun/mailgun-go@v2.0.0+incompatible/examples_test.go:26:1","message":"ExampleMailgunImpl_ParseAddresses refers to unknown field or method: MailgunImpl.ParseAddresses","source":"\nfunc ExampleMailgunImpl_ParseAddresses() {\n\tv := NewEmailValidator(\"my_public_api_key\")"}]}
{"created_at":"2023-06-22 17:29:05.346157 UTC","module_path":"github.com/smacker/go-tree-sitter","version":"v0.0.0-20230501083651-a7d92773b3aa","sort_version":"0,0,0,~20230501083651-a7d92773b3aa","commit_time":"2023-05-01 08:36:51 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/smacker/go-tree-sitter_test [github.com/smacker/go-tree-sitter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/smacker/go-tree-sitter@v0.0.0-20230501083651-a7d92773b3aa/example_test.go:18:1","message":"ExampleCursorTraversal refers to unknown identifier: CursorTraversal","source":"// The cursor provides each node name.\nfunc ExampleCursorTraversal() {\n\troot := mustParseGo(\"func f(a, b, c int, d, e int)\")"},{"package_id":"github.com/smacker/go-tree-sitter_test [github.com/smacker/go-tree-sitter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/smacker/go-tree-sitter@v0.0.0-20230501083651-a7d92773b3aa/example_test.go:52:1","message":"ExampleChildTraversal refers to unknown identifier: ChildTraversal","source":"// Beware: they are current wrong due to https://github.com/tree-sitter/tree-sitter/issues/1642!\nfunc ExampleChildTraversal() {\n\troot := mustParseGo(\"func f(a, b, c int, d, e int)\")"}]}
{"created_at":"2023-06-22 18:00:09.537938 UTC","module_path":"github.com/dsoprea/go-png-image-structure","version":"v0.0.0-20210512210324-29b889a6093d","sort_version":"0,0,0,~20210512210324-29b889a6093d","commit_time":"2021-05-12 21:03:24 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/dsoprea/go-png-image-structure [github.com/dsoprea/go-png-image-structure.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dsoprea/go-png-image-structure@v0.0.0-20210512210324-29b889a6093d/png_test.go:75:1","message":"ExampleChunk_Write refers to unknown field or method: Chunk.Write","source":"\nfunc ExampleChunk_Write() {\n\tc := Chunk{"},{"package_id":"github.com/dsoprea/go-png-image-structure [github.com/dsoprea/go-png-image-structure.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dsoprea/go-png-image-structure@v0.0.0-20210512210324-29b889a6093d/png_test.go:637:1","message":"ExampleChunkSlice_Write refers to unknown field or method: ChunkSlice.Write","source":"\nfunc ExampleChunkSlice_Write() {\n\tfilepath := path.Join(assetsPath, \"Selection_058.png\")"}]}
{"created_at":"2023-06-22 17:27:25.94541 UTC","module_path":"github.com/Masterminds/goutils","version":"v1.1.1","sort_version":"1,1,1~","commit_time":"2021-02-04 20:06:53 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Masterminds/goutils@v1.1.1/wordutils_test.go:205:1","message":"ExampleWrapCustom_1 refers to unknown field or method: WrapCustom.1","source":"\nfunc ExampleWrapCustom_1() {\n"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Masterminds/goutils@v1.1.1/wordutils_test.go:217:1","message":"ExampleWrapCustom_2 refers to unknown field or method: WrapCustom.2","source":"\nfunc ExampleWrapCustom_2() {\n"}]}
{"created_at":"2023-06-22 17:43:13.036074 UTC","module_path":"github.com/armon/consul-kv","version":"v0.0.0-20150130235219-044c7ba384f8","sort_version":"0,0,0,~20150130235219-044c7ba384f8","commit_time":"2015-01-30 23:52:19 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/consul-kv@v0.0.0-20150130235219-044c7ba384f8/client_test.go:198:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := client.Put(key, value, 42); err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/consul-kv@v0.0.0-20150130235219-044c7ba384f8/client_test.go:244:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := client.Put(key, value, 42); err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:37:54.853848 UTC","module_path":"github.com/go-akka/configuration","version":"v0.0.0-20200606091224-a002c0330665","sort_version":"0,0,0,~20200606091224-a002c0330665","commit_time":"2020-06-06 09:12:24 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-akka/configuration@v0.0.0-20200606091224-a002c0330665/configuration_test.go:41:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\n\tgo fn()\n\tgo fn()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-akka/configuration@v0.0.0-20200606091224-a002c0330665/configuration_test.go:42:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo fn()\n\tgo fn()\n"}]}
{"created_at":"2023-06-22 17:23:38.862345 UTC","module_path":"github.com/ngaut/sync2","version":"v0.0.0-20141008032647-7a24ed77b2ef","sort_version":"0,0,0,~20141008032647-7a24ed77b2ef","commit_time":"2014-10-08 03:26:47 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ngaut/sync2@v0.0.0-20141008032647-7a24ed77b2ef/cond_test.go:139:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif x != 2 {\n\t\t\tt.Fatal(\"want 2\")\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ngaut/sync2@v0.0.0-20141008032647-7a24ed77b2ef/cond_test.go:167:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif x != 3 {\n\t\t\t\t\tt.Fatal(\"want 3\")\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:22:36.378673 UTC","module_path":"github.com/prysmaticlabs/go-ssz","version":"v0.0.0-20210121151755-f6208871c388","sort_version":"0,0,0,~20210121151755-f6208871c388","commit_time":"2021-01-21 15:17:55 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/prysmaticlabs/go-ssz@v0.0.0-20210121151755-f6208871c388/ssz_test.go:582:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif _, err := HashTreeRoot(item); err != nil {\n\t\t\t\ttt.Fatal(err)\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/prysmaticlabs/go-ssz@v0.0.0-20210121151755-f6208871c388/ssz_test.go:694:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif _, err := SigningRoot(item); err != nil {\n\t\t\t\ttt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:35:45.172365 UTC","module_path":"github.com/kataras/tablewriter","version":"v0.0.0-20180708051242-e063d29b7c23","sort_version":"0,0,0,~20180708051242-e063d29b7c23","commit_time":"2018-07-08 05:12:42 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kataras/tablewriter@v0.0.0-20180708051242-e063d29b7c23/table_test.go:57:1","message":"ExampleLong refers to unknown identifier: Long","source":"\nfunc ExampleLong() {\n\tdata := [][]string{"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kataras/tablewriter@v0.0.0-20180708051242-e063d29b7c23/table_test.go:84:1","message":"ExampleCSV refers to unknown identifier: CSV","source":"\nfunc ExampleCSV() {\n\ttable, _ := NewCSV(os.Stdout, \"testdata/test.csv\", true)"}]}
{"created_at":"2023-06-22 17:29:07.326433 UTC","module_path":"github.com/goinggo/mapstructure","version":"v0.0.0-20140717182941-194205d9b4a9","sort_version":"0,0,0,~20140717182941-194205d9b4a9","commit_time":"2014-07-17 18:29:41 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/goinggo/mapstructure@v0.0.0-20140717182941-194205d9b4a9/mapstructure_examples_test.go:241:1","message":"ExampleDecodeWithEmbeddedSlice refers to unknown identifier: DecodeWithEmbeddedSlice","source":"\nfunc ExampleDecodeWithEmbeddedSlice() {\n\tvar document string = `{"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/goinggo/mapstructure@v0.0.0-20140717182941-194205d9b4a9/mapstructure_examples_test.go:302:1","message":"ExampleDecodeWithAbstractField refers to unknown identifier: DecodeWithAbstractField","source":"\nfunc ExampleDecodeWithAbstractField() {\n\tvar document = `{\"Error\":[{\"errorDetail\":\"Invalid Cobrand Credentials\"}]}`"}]}
{"created_at":"2023-06-22 17:42:15.588235 UTC","module_path":"github.com/xssnick/tonutils-go","version":"v1.7.3","sort_version":"1,7,3~","commit_time":"2023-05-16 13:53:51 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/xssnick/tonutils-go/adnl/rldp/http [github.com/xssnick/tonutils-go/adnl/rldp/http.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/xssnick/tonutils-go@v1.7.3/adnl/rldp/http/http_test.go:85:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err = s.ListenAndServe(\"127.0.0.1:9076\"); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/xssnick/tonutils-go/adnl/rldp/http [github.com/xssnick/tonutils-go/adnl/rldp/http.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/xssnick/tonutils-go@v1.7.3/adnl/rldp/http/http_test.go:145:4","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\tif err = s.ListenAndServe(\"127.0.0.1:9076\"); err != nil {\n\t\t\tb.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:47:47.469897 UTC","module_path":"github.com/adamluzsi/testcase","version":"v0.141.0","sort_version":"0,b141,0~","commit_time":"2023-06-19 20:27:14 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/adamluzsi/testcase/httpspec_test [github.com/adamluzsi/testcase/httpspec.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/adamluzsi/testcase@v0.141.0/httpspec/example_Context_test.go:11:1","message":"ExampleLetContext_withValue refers to unknown identifier: LetContext","source":"\nfunc ExampleLetContext_withValue() {\n\ts := testcase.NewSpec(testingT)"},{"package_id":"github.com/adamluzsi/testcase/httpspec_test [github.com/adamluzsi/testcase/httpspec.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/adamluzsi/testcase@v0.141.0/httpspec/example_Method_test.go:10:1","message":"ExampleLetMethodValue refers to unknown identifier: LetMethodValue","source":"\nfunc ExampleLetMethodValue() {\n\ts := testcase.NewSpec(testingT)"}]}
{"created_at":"2023-06-22 17:19:54.541734 UTC","module_path":"github.com/jordan-wright/email","version":"v4.0.1-0.20210109023952-943e75fe5223+incompatible","sort_version":"4,0,1,0,~20210109023952-943e75fe5223","commit_time":"2021-01-09 02:39:52 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/jordan-wright/email@v4.0.1-0.20210109023952-943e75fe5223+incompatible/email_test.go:731:1","message":"ExampleGmail refers to unknown identifier: Gmail","source":"\nfunc ExampleGmail() {\n\te := NewEmail()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/jordan-wright/email@v4.0.1-0.20210109023952-943e75fe5223+incompatible/email_test.go:743:1","message":"ExampleAttach refers to unknown identifier: Attach","source":"\nfunc ExampleAttach() {\n\te := NewEmail()"}]}
{"created_at":"2023-06-22 17:48:14.362841 UTC","module_path":"github.com/smartystreets/mafsa","version":"v1.1.0","sort_version":"1,1,0~","commit_time":"2019-06-03 20:27:29 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/smartystreets/mafsa [github.com/smartystreets/mafsa.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/smartystreets/mafsa@v1.1.0/buildtree_test.go:175:1","message":"TestbuildTreeNodeCount has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestbuildTreeNodeCount(t *testing.T) {\n\ttree := New()"},{"package_id":"github.com/smartystreets/mafsa [github.com/smartystreets/mafsa.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/smartystreets/mafsa@v1.1.0/buildtree_test.go:243:1","message":"TestbuildTreeNodeHash has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestbuildTreeNodeHash(t *testing.T) {\n\ttree := New()"}]}
{"created_at":"2023-06-22 17:44:56.926984 UTC","module_path":"github.com/MichaelTJones/pcg","version":"v0.0.0-20180122055547-df440c6ed7ed","sort_version":"0,0,0,~20180122055547-df440c6ed7ed","commit_time":"2018-01-22 05:55:47 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/MichaelTJones/pcg@v0.0.0-20180122055547-df440c6ed7ed/pcg32_test.go:138:1","message":"ExampleReport32 refers to unknown identifier: Report32","source":"\nfunc ExampleReport32() {\n\t// Print report"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/MichaelTJones/pcg@v0.0.0-20180122055547-df440c6ed7ed/pcg64_test.go:138:1","message":"ExampleReport64 refers to unknown identifier: Report64","source":"\nfunc ExampleReport64() {\n\t// Print report"}]}
{"created_at":"2023-06-22 17:21:37.537869 UTC","module_path":"github.com/oklog/oklog","version":"v0.3.2","sort_version":"0,3,2~","commit_time":"2018-03-28 02:21:06 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/pkg/stream [synthetic/pkg/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oklog/oklog@v0.3.2/pkg/stream/stream_test.go:33:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tcase \u003c-time.After(100 * time.Millisecond):\n\t\t\t\tt.Fatal(\"timeout waiting for record\")\n\t\t\t}"},{"package_id":"synthetic/pkg/stream [synthetic/pkg/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/oklog/oklog@v0.3.2/pkg/stream/stream_test.go:68:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tcase \u003c-time.After(100 * time.Second):\n\t\t\t\tt.Fatal(\"timeout waiting for record\")\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:51:34.401313 UTC","module_path":"github.com/xlucas/swift","version":"v0.0.0-20161222112606-b9756902dc09","sort_version":"0,0,0,~20161222112606-b9756902dc09","commit_time":"2016-12-22 11:26:06 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/xlucas/swift@v0.0.0-20161222112606-b9756902dc09/swift_test.go:324:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(\"Auth failed\", err)\n\t\t\t}"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/xlucas/swift@v0.0.0-20161222112606-b9756902dc09/swift_test.go:327:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif !c.Authenticated() {\n\t\t\t\tt.Fatal(\"Not authenticated\")\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:59:22.477185 UTC","module_path":"github.com/apprentice3d/forge-api-go-client","version":"v0.2.5","sort_version":"0,2,5~","commit_time":"2020-08-05 15:58:15 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/apprentice3d/forge-api-go-client/oauth/test_test [github.com/apprentice3d/forge-api-go-client/oauth/test.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/apprentice3d/forge-api-go-client@v0.2.5/oauth/test/two_legged_test.go:78:1","message":"ExampleTwoLeggedAuth_Authenticate refers to unknown field or method: TwoLeggedAuth.Authenticate","source":"\nfunc ExampleTwoLeggedAuth_Authenticate() {\n"},{"package_id":"github.com/apprentice3d/forge-api-go-client/recap/test_test [github.com/apprentice3d/forge-api-go-client/recap/test.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/apprentice3d/forge-api-go-client@v0.2.5/recap/test/recap_test.go:323:1","message":"ExampleAPI_CreatePhotoScene refers to unknown identifier: API","source":"\nfunc ExampleAPI_CreatePhotoScene() {\n"}]}
{"created_at":"2023-06-22 17:18:09.860018 UTC","module_path":"github.com/confluentinc/confluent-kafka-go","version":"v1.9.2","sort_version":"1,9,2~","commit_time":"2022-08-02 18:54:49 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/confluentinc/confluent-kafka-go/kafka [github.com/confluentinc/confluent-kafka-go/kafka.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/confluentinc/confluent-kafka-go@v1.9.2/kafka/stats_event_test.go:117:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tstatsReceived := make(chan bool)\n\tgo handleStatsEvent(t, c.Events(), statsReceived)\n"},{"package_id":"github.com/confluentinc/confluent-kafka-go/kafka [github.com/confluentinc/confluent-kafka-go/kafka.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/confluentinc/confluent-kafka-go@v1.9.2/kafka/txn_integration_test.go:248:7","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\tif (m.TopicPartition.Error != nil) == expectDrErr {\n\t\t\t\t\t\tt.Fatalf(\"Unexpected %v, expectDrErr %v\\n\",\n\t\t\t\t\t\t\tm.TopicPartition, expectDrErr)"}]}
{"created_at":"2023-06-22 17:33:44.733241 UTC","module_path":"code.cloudfoundry.org/go-log-cache","version":"v1.0.0","sort_version":"1,0,0~","commit_time":"2018-03-11 02:47:36 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/code.cloudfoundry.org/go-log-cache@v1.0.0/oauth2_http_client_test.go:314:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/code.cloudfoundry.org/go-log-cache@v1.0.0/oauth2_http_client_test.go:320:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:21:41.163927 UTC","module_path":"github.com/apache/rocketmq-client-go/v2","version":"v2.1.1","sort_version":"2,1,1~","commit_time":"2022-07-25 11:05:22 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/apache/rocketmq-client-go/v2/internal/remote [github.com/apache/rocketmq-client-go/v2/internal/remote.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/apache/rocketmq-client-go/v2@v2.1.1/internal/remote/remote_client_test.go:164:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"failed to invoke synchronous. %s\", err)\n\t\t} else {"},{"package_id":"github.com/apache/rocketmq-client-go/v2/internal/remote [github.com/apache/rocketmq-client-go/v2/internal/remote.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/apache/rocketmq-client-go/v2@v2.1.1/internal/remote/remote_client_test.go:340:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"failed to invoke synchronous. %s\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:22:18.205792 UTC","module_path":"github.com/imroc/req/v3","version":"v3.37.1","sort_version":"3,a37,1~","commit_time":"2023-06-22 15:42:17 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/imroc/req/v3/internal/http2 [github.com/imroc/req/v3/internal/http2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/imroc/req/v3@v3.37.1/internal/http2/transport_test.go:5121:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/imroc/req/v3/internal/http2 [github.com/imroc/req/v3/internal/http2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/imroc/req/v3@v3.37.1/internal/http2/transport_test.go:5128:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:16:38.325402 UTC","module_path":"github.com/samuel/go-zookeeper","version":"v0.0.0-20201211165307-7117e9ea2414","sort_version":"0,0,0,~20201211165307-7117e9ea2414","commit_time":"2020-12-11 16:53:07 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/zk [synthetic/zk.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/samuel/go-zookeeper@v0.0.0-20201211165307-7117e9ea2414/zk/lock_test.go:39:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := l2.Lock(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic/zk [synthetic/zk.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/samuel/go-zookeeper@v0.0.0-20201211165307-7117e9ea2414/zk/lock_test.go:43:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := l2.Unlock(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:47:20.862318 UTC","module_path":"github.com/snapcore/go-gettext","version":"v0.0.0-20201130093759-38740d1bd3d2","sort_version":"0,0,0,~20201130093759-38740d1bd3d2","commit_time":"2020-11-30 09:37:59 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/snapcore/go-gettext [github.com/snapcore/go-gettext.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/snapcore/go-gettext@v0.0.0-20201130093759-38740d1bd3d2/filemapping_test.go:49:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif _, err := w.Write([]byte(\"Hello world!\")); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/snapcore/go-gettext [github.com/snapcore/go-gettext.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/snapcore/go-gettext@v0.0.0-20201130093759-38740d1bd3d2/filemapping_test.go:52:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := w.Close(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:42:47.488709 UTC","module_path":"github.com/Psiphon-Labs/tls-tris","version":"v0.0.0-20210713133851-676a693d51ad","sort_version":"0,0,0,~20210713133851-676a693d51ad","commit_time":"2021-07-13 13:38:51 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Psiphon-Labs/tls-tris@v0.0.0-20210713133851-676a693d51ad/example_test.go:74:1","message":"ExampleConfig_keyLogWriter_TLS12 has malformed example suffix: TLS12","source":"\nfunc ExampleConfig_keyLogWriter_TLS12() {\n\t// Debugging TLS applications by decrypting a network traffic capture."},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Psiphon-Labs/tls-tris@v0.0.0-20210713133851-676a693d51ad/example_test.go:118:1","message":"ExampleConfig_keyLogWriter_TLS13 has malformed example suffix: TLS13","source":"\nfunc ExampleConfig_keyLogWriter_TLS13() {\n\t// Debugging TLS applications by decrypting a network traffic capture."}]}
{"created_at":"2023-06-22 17:21:44.0104 UTC","module_path":"github.com/brianvoe/gofakeit/v6","version":"v6.22.0","sort_version":"6,a22,0~","commit_time":"2023-06-07 16:13:12 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/brianvoe/gofakeit/v6 [github.com/brianvoe/gofakeit/v6.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/brianvoe/gofakeit/v6@v6.22.0/fakeable_test.go:104:1","message":"ExampleGammaFloat64 refers to unknown identifier: GammaFloat64","source":"\nfunc ExampleGammaFloat64() {\n\tf1 := New(100)"},{"package_id":"github.com/brianvoe/gofakeit/v6/data [github.com/brianvoe/gofakeit/v6/data.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/brianvoe/gofakeit/v6@v6.22.0/data/data_test.go:29:1","message":"ExampleGetSub refers to unknown identifier: GetSub","source":"\nfunc ExampleGetSub() {\n\t// Get data"}]}
{"created_at":"2023-06-22 17:30:13.122057 UTC","module_path":"github.com/martinlindhe/unit","version":"v0.0.0-20230420213220-4adfd7d0a0d6","sort_version":"0,0,0,~20230420213220-4adfd7d0a0d6","commit_time":"2023-04-20 21:32:20 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/martinlindhe/unit [github.com/martinlindhe/unit.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/martinlindhe/unit@v0.0.0-20230420213220-4adfd7d0a0d6/example_test.go:5:1","message":"ExampleFeetInMeters refers to unknown identifier: FeetInMeters","source":"\nfunc ExampleFeetInMeters() {\n\tft := 1 * Foot"},{"package_id":"github.com/martinlindhe/unit [github.com/martinlindhe/unit.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/martinlindhe/unit@v0.0.0-20230420213220-4adfd7d0a0d6/example_test.go:13:1","message":"ExampleFromOwnUnit refers to unknown identifier: FromOwnUnit","source":"\nfunc ExampleFromOwnUnit() {\n\tn := MyUnit(2)"}]}
{"created_at":"2023-06-22 17:31:26.515751 UTC","module_path":"github.com/janelia-flyem/dvid","version":"v0.9.17","sort_version":"0,9,a17~","commit_time":"2022-10-25 02:57:48 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/janelia-flyem/dvid/datastore [github.com/janelia-flyem/dvid/datastore.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/janelia-flyem/dvid@v0.9.17/datastore/datastore_test.go:22:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"error getting instance id: %v\\n\", err)\n\t\t\t}"},{"package_id":"github.com/janelia-flyem/dvid/server [github.com/janelia-flyem/dvid/server.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/janelia-flyem/dvid@v0.9.17/server/web_test.go:470:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tfor i := 0; i \u003c 10; i++ {\n\t\tgo doMetadataReads(t, uuid, wg, done)\n\t}"}]}
{"created_at":"2023-06-22 17:35:55.492594 UTC","module_path":"github.com/DATA-DOG/go-txdb","version":"v0.1.6","sort_version":"0,1,6~","commit_time":"2023-02-23 07:17:19 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/DATA-DOG/go-txdb [github.com/DATA-DOG/go-txdb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/DATA-DOG/go-txdb@v0.1.6/db_test.go:205:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(driver+\": failed to query users: %s\", err)\n\t\t\t\t}"},{"package_id":"github.com/DATA-DOG/go-txdb [github.com/DATA-DOG/go-txdb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/DATA-DOG/go-txdb@v0.1.6/db_test.go:217:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(driver+\": failed to insert an user: %s\", err)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:26:50.555408 UTC","module_path":"gopkg.in/caarlos0/env.v2","version":"v2.0.0-20161013201842-d0de832ed2fb","sort_version":"2,0,0,~20161013201842-d0de832ed2fb","commit_time":"2016-10-13 20:18:42 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/caarlos0/env.v2@v2.0.0-20161013201842-d0de832ed2fb/env_test.go:244:1","message":"ExampleParseRequiredField refers to unknown identifier: ParseRequiredField","source":"\nfunc ExampleParseRequiredField() {\n\ttype config struct {"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/caarlos0/env.v2@v2.0.0-20161013201842-d0de832ed2fb/env_test.go:258:1","message":"ExampleParseMultipleOptions refers to unknown identifier: ParseMultipleOptions","source":"\nfunc ExampleParseMultipleOptions() {\n\ttype config struct {"}]}
{"created_at":"2023-06-22 17:31:48.651826 UTC","module_path":"github.com/koding/websocketproxy","version":"v0.0.0-20181220232114-7ed82d81a28c","sort_version":"0,0,0,~20181220232114-7ed82d81a28c","commit_time":"2018-12-20 23:21:14 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/koding/websocketproxy@v0.0.0-20181220232114-7ed82d81a28c/websocketproxy_test.go:38:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := http.ListenAndServe(\":7777\", mux); err != nil {\n\t\t\tt.Fatal(\"ListenAndServe: \", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/koding/websocketproxy@v0.0.0-20181220232114-7ed82d81a28c/websocketproxy_test.go:72:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(\"ListenAndServe: \", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:39:09.559121 UTC","module_path":"git.sr.ht/~cco/go-schema","version":"v0.1.18","sort_version":"0,1,a18~","commit_time":"2022-01-03 21:18:43 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"git.sr.ht/~cco/go-schema/tests_test [git.sr.ht/~cco/go-schema/tests.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/git.sr.ht/~cco/go-schema@v0.1.18/tests/graph_test.go:97:1","message":"ExampleTest should be niladic","source":"\nfunc ExampleTest(t *testing.T) {\n\tvar graph gc.Context = gc.CreateDefaultGraphContext()"},{"package_id":"git.sr.ht/~cco/go-schema/tests_test [git.sr.ht/~cco/go-schema/tests.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/git.sr.ht/~cco/go-schema@v0.1.18/tests/graph_test.go:97:1","message":"ExampleTest refers to unknown identifier: Test","source":"\nfunc ExampleTest(t *testing.T) {\n\tvar graph gc.Context = gc.CreateDefaultGraphContext()"}]}
{"created_at":"2023-06-22 17:58:36.480957 UTC","module_path":"github.com/udhos/boilerplate","version":"v1.2.0","sort_version":"1,2,0~","commit_time":"2023-05-31 22:41:28 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/udhos/boilerplate/envconfig [github.com/udhos/boilerplate/envconfig.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/udhos/boilerplate@v1.2.0/envconfig/env_test.go:8:1","message":"ExampleFloat64SliceEmpty refers to unknown identifier: Float64SliceEmpty","source":"\nfunc ExampleFloat64SliceEmpty() {\n"},{"package_id":"github.com/udhos/boilerplate/envconfig [github.com/udhos/boilerplate/envconfig.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/udhos/boilerplate@v1.2.0/envconfig/env_test.go:18:1","message":"ExampleFloat64Slice refers to unknown identifier: Float64Slice","source":"\nfunc ExampleFloat64Slice() {\n"}]}
{"created_at":"2023-06-22 17:24:43.639802 UTC","module_path":"github.com/spiffe/go-spiffe/v2","version":"v2.1.6","sort_version":"2,1,6~","commit_time":"2023-06-06 17:02:06 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/spiffe/go-spiffe/v2/spiffetls_test [github.com/spiffe/go-spiffe/v2/spiffetls.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/spiffe/go-spiffe/v2@v2.1.6/spiffetls/examples_test.go:12:1","message":"ExampleListenMTLS refers to unknown identifier: ListenMTLS","source":"\nfunc ExampleListenMTLS() {\n\ttd := spiffeid.RequireTrustDomainFromString(\"example.org\")"},{"package_id":"github.com/spiffe/go-spiffe/v2/spiffetls_test [github.com/spiffe/go-spiffe/v2/spiffetls.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/spiffe/go-spiffe/v2@v2.1.6/spiffetls/examples_test.go:22:1","message":"ExampleListenMTLS_customTLSConfigBase refers to unknown identifier: ListenMTLS","source":"\nfunc ExampleListenMTLS_customTLSConfigBase() {\n\ttd := spiffeid.RequireTrustDomainFromString(\"example.org\")"}]}
{"created_at":"2023-06-22 17:21:04.117049 UTC","module_path":"github.com/ChimeraCoder/anaconda","version":"v2.0.0+incompatible","sort_version":"2,0,0~","commit_time":"2018-02-26 01:02:07 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ChimeraCoder/anaconda@v2.0.0+incompatible/example_test.go:12:1","message":"ExampleTwitterApi_InitializeClient refers to unknown field or method: TwitterApi.InitializeClient","source":"// This only needs to be done *once* per user\nfunc ExampleTwitterApi_InitializeClient() {\n\tapi := anaconda.NewTwitterApiWithCredentials(ACCESS_TOKEN, ACCESS_TOKEN_SECRET, \"your-consumer-key\", \"your-consumer-secret\")"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ChimeraCoder/anaconda@v2.0.0+incompatible/example_test.go:31:1","message":"ExampleTwitterApi_Throttling refers to unknown field or method: TwitterApi.Throttling","source":"// Throttling queries can easily be handled in the background, automatically\nfunc ExampleTwitterApi_Throttling() {\n\tapi := anaconda.NewTwitterApi(\"your-access-token\", \"your-access-token-secret\")"}]}
{"created_at":"2023-06-22 17:54:48.03642 UTC","module_path":"github.com/ev3go/ev3dev","version":"v0.0.0-20230218223055-ac0bd47ba218","sort_version":"0,0,0,~20230218223055-ac0bd47ba218","commit_time":"2023-02-18 22:30:55 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/ev3go/ev3dev_test [github.com/ev3go/ev3dev.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ev3go/ev3dev@v0.0.0-20230218223055-ac0bd47ba218/wait_test.go:398:7","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\tif err != nil {\n\t\t\t\t\t\tt.Fatalf(\"unexpected error invalidating state: %v\", err)\n\t\t\t\t\t}"},{"package_id":"github.com/ev3go/ev3dev_test [github.com/ev3go/ev3dev.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ev3go/ev3dev@v0.0.0-20230218223055-ac0bd47ba218/wait_test.go:408:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tcase \u003c-time.After(timeout):\n\t\t\t\t\tt.Fatalf(\"failed to timeout after %v\", timeout)\n\t\t\t\tcase \u003c-ok:"}]}
{"created_at":"2023-06-22 17:27:41.010295 UTC","module_path":"github.com/qri-io/jsonschema","version":"v0.2.1","sort_version":"0,2,1~","commit_time":"2021-03-29 11:04:59 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/qri-io/jsonschema [github.com/qri-io/jsonschema.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/qri-io/jsonschema@v0.2.1/keyword_test.go:66:1","message":"ExampleCustomValidator refers to unknown identifier: CustomValidator","source":"\nfunc ExampleCustomValidator() {\n\t// register a custom validator by supplying a function"},{"package_id":"github.com/qri-io/jsonschema [github.com/qri-io/jsonschema.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/qri-io/jsonschema@v0.2.1/schema_test.go:17:1","message":"ExampleBasic refers to unknown identifier: Basic","source":"\nfunc ExampleBasic() {\n\tctx := context.Background()"}]}
{"created_at":"2023-06-22 17:36:29.239313 UTC","module_path":"github.com/go-chassis/go-chassis/v2","version":"v2.7.1","sort_version":"2,7,1~","commit_time":"2022-11-10 03:08:27 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/go-chassis/go-chassis/v2/third_party/forked/afex/hystrix-go/hystrix [github.com/go-chassis/go-chassis/v2/third_party/forked/afex/hystrix-go/hystrix.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-chassis/go-chassis/v2@v2.7.1/third_party/forked/afex/hystrix-go/hystrix/eventstream_test.go:205:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"github.com/go-chassis/go-chassis/v2/third_party/forked/afex/hystrix-go/hystrix [github.com/go-chassis/go-chassis/v2/third_party/forked/afex/hystrix-go/hystrix.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-chassis/go-chassis/v2@v2.7.1/third_party/forked/afex/hystrix-go/hystrix/eventstream_test.go:219:8","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t\t\tif err != nil {\n\t\t\t\t\t\t\tt.Fatal(err)\n\t\t\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:54:06.555317 UTC","module_path":"github.com/pin/tftp/v3","version":"v3.0.0","sort_version":"3,0,0~","commit_time":"2022-07-21 07:10:59 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/pin/tftp/v3 [github.com/pin/tftp/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pin/tftp/v3@v3.0.0/tftp_test.go:794:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"serve: %v\", err)\n\t\t}"},{"package_id":"github.com/pin/tftp/v3 [github.com/pin/tftp/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pin/tftp/v3@v3.0.0/tftp_test.go:915:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"running serve: %v\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 18:00:10.002562 UTC","module_path":"github.com/robert-zaremba/log15","version":"v0.0.0-20200309162621-cebcfcda23c2","sort_version":"0,0,0,~20200309162621-cebcfcda23c2","commit_time":"2020-03-09 16:26:21 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/robert-zaremba/log15 [github.com/robert-zaremba/log15.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/robert-zaremba/log15@v0.0.0-20200309162621-cebcfcda23c2/log15_test.go:258:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Failed to accept connection: %v\", err)\n\t\t}"},{"package_id":"github.com/robert-zaremba/log15 [github.com/robert-zaremba/log15.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/robert-zaremba/log15@v0.0.0-20200309162621-cebcfcda23c2/log15_test.go:264:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Failed to read string: %v\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:23:29.860603 UTC","module_path":"github.com/prysmaticlabs/prysm","version":"v1.4.4","sort_version":"1,4,4~","commit_time":"2021-08-31 22:35:16 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/prysmaticlabs/prysm/slasher/rpc [github.com/prysmaticlabs/prysm/slasher/rpc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/prysmaticlabs/prysm@v1.4.4/slasher/rpc/server_test.go:97:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t} else if len(slashings.AttesterSlashing) == 0 \u0026\u0026 wentThrough {\n\t\t\t\tt.Fatalf(\"Only one attestation should go through without slashing: %v\", iatt)\n\t\t\t}"},{"package_id":"github.com/prysmaticlabs/prysm/slasher/rpc [github.com/prysmaticlabs/prysm/slasher/rpc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/prysmaticlabs/prysm@v1.4.4/slasher/rpc/server_test.go:249:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t} else if len(slashings.ProposerSlashing) == 0 \u0026\u0026 wentThrough {\n\t\t\t\tt.Fatalf(\"Only one block should go through without slashing: %v\", sbbh)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:19:16.934484 UTC","module_path":"github.com/openconfig/gnmi","version":"v0.9.1","sort_version":"0,9,1~","commit_time":"2023-01-27 01:00:57 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/openconfig/gnmi/client_test [github.com/openconfig/gnmi/client.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/openconfig/gnmi@v0.9.1/client/client_test.go:489:1","message":"ExampleClient_Once refers to unknown field or method: Client.Once","source":"// returned tree.\nfunc ExampleClient_Once() {\n\tq := client.Query{"},{"package_id":"github.com/openconfig/gnmi/client_test [github.com/openconfig/gnmi/client.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/openconfig/gnmi@v0.9.1/client/client_test.go:539:1","message":"ExampleClient_Stream refers to unknown field or method: Client.Stream","source":"// until closed or the underlying connection breaks.\nfunc ExampleClient_Stream() {\n\tq := client.Query{"}]}
{"created_at":"2023-06-22 17:57:59.76485 UTC","module_path":"github.com/cisco/senml","version":"v0.0.0-20201020223705-2228869e3bde","sort_version":"0,0,0,~20201020223705-2228869e3bde","commit_time":"2020-10-20 22:37:05 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/cisco/senml_test [github.com/cisco/senml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cisco/senml@v0.0.0-20201020223705-2228869e3bde/senml_test.go:11:1","message":"ExampleEncode1 refers to unknown identifier: Encode1","source":"\nfunc ExampleEncode1() {\n\tv := 23.1"},{"package_id":"github.com/cisco/senml_test [github.com/cisco/senml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cisco/senml@v0.0.0-20201020223705-2228869e3bde/senml_test.go:28:1","message":"ExampleEncode2 refers to unknown identifier: Encode2","source":"\nfunc ExampleEncode2() {\n\tv1 := 23.5"}]}
{"created_at":"2023-06-22 17:26:53.055827 UTC","module_path":"github.com/sacloud/libsacloud","version":"v1.36.2","sort_version":"1,a36,2~","commit_time":"2020-08-04 02:11:39 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/sacloud/libsacloud/api [github.com/sacloud/libsacloud/api.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/sacloud/libsacloud@v1.36.2/api/polling_test.go:121:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t}\n\t\t\t\tt.Fatal(\"Invalid timeout\")\n\t\t\t})"},{"package_id":"github.com/sacloud/libsacloud/api [github.com/sacloud/libsacloud/api.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/sacloud/libsacloud@v1.36.2/api/polling_test.go:140:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t}\n\t\t\t\tt.Fatal(\"Invalid timeout\")\n\t\t\t})"}]}
{"created_at":"2023-06-22 17:17:06.331394 UTC","module_path":"github.com/robertkrimen/otto","version":"v0.2.1","sort_version":"0,2,1~","commit_time":"2022-11-30 17:55:35 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/robertkrimen/otto [github.com/robertkrimen/otto.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/robertkrimen/otto@v0.2.1/documentation_test.go:7:1","message":"ExampleSynopsis refers to unknown identifier: Synopsis","source":"\nfunc ExampleSynopsis() { //nolint: govet\n\tvm := New()"},{"package_id":"github.com/robertkrimen/otto [github.com/robertkrimen/otto.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/robertkrimen/otto@v0.2.1/documentation_test.go:72:1","message":"ExampleConsole refers to unknown identifier: Console","source":"\nfunc ExampleConsole() { //nolint: govet\n\tvm := New()"}]}
{"created_at":"2023-06-22 17:17:46.868988 UTC","module_path":"github.com/pmezard/go-difflib","version":"v1.0.0","sort_version":"1,0,0~","commit_time":"2016-01-10 10:55:54 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/difflib [synthetic/difflib.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pmezard/go-difflib@v1.0.0/difflib/difflib_test.go:105:1","message":"ExampleGetUnifiedDiffCode refers to unknown identifier: GetUnifiedDiffCode","source":"\nfunc ExampleGetUnifiedDiffCode() {\n\ta := `one"},{"package_id":"synthetic/difflib [synthetic/difflib.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pmezard/go-difflib@v1.0.0/difflib/difflib_test.go:138:1","message":"ExampleGetContextDiffCode refers to unknown identifier: GetContextDiffCode","source":"\nfunc ExampleGetContextDiffCode() {\n\ta := `one"}]}
{"created_at":"2023-06-22 17:42:53.367856 UTC","module_path":"github.com/suyashkumar/dicom","version":"v1.0.6","sort_version":"1,0,6~","commit_time":"2023-02-26 05:01:05 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/suyashkumar/dicom [github.com/suyashkumar/dicom.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/suyashkumar/dicom@v1.0.6/dataset_test.go:164:1","message":"ExampleDataset_FlatIteratorWithExhaustAllElements refers to unknown field or method: Dataset.FlatIteratorWithExhaustAllElements","source":"\nfunc ExampleDataset_FlatIteratorWithExhaustAllElements() {\n\tnestedData := [][]*Element{"},{"package_id":"github.com/suyashkumar/dicom/pkg/personname_test [github.com/suyashkumar/dicom/pkg/personname.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/suyashkumar/dicom@v1.0.6/pkg/personname/examples_test.go:89:1","message":"ExampleNew refers to unknown identifier: New","source":"// How to create new PN value.\nfunc ExampleNew() {\n\t// Create a new PN like so"}]}
{"created_at":"2023-06-22 17:36:28.253504 UTC","module_path":"github.com/aokoli/goutils","version":"v1.1.1","sort_version":"1,1,1~","commit_time":"2021-02-04 20:06:53 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/aokoli/goutils@v1.1.1/wordutils_test.go:205:1","message":"ExampleWrapCustom_1 refers to unknown field or method: WrapCustom.1","source":"\nfunc ExampleWrapCustom_1() {\n"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/aokoli/goutils@v1.1.1/wordutils_test.go:217:1","message":"ExampleWrapCustom_2 refers to unknown field or method: WrapCustom.2","source":"\nfunc ExampleWrapCustom_2() {\n"}]}
{"created_at":"2023-06-22 17:29:23.637705 UTC","module_path":"github.com/go-ozzo/ozzo-dbx","version":"v1.5.0","sort_version":"1,5,0~","commit_time":"2020-01-07 17:58:11 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/go-ozzo/ozzo-dbx_test [github.com/go-ozzo/ozzo-dbx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-ozzo/ozzo-dbx@v1.5.0/example_test.go:107:1","message":"ExampleSchemaBuilder refers to unknown identifier: SchemaBuilder","source":"\nfunc ExampleSchemaBuilder() {\n\tdb, _ := dbx.Open(\"mysql\", \"user:pass@/example\")"},{"package_id":"github.com/go-ozzo/ozzo-dbx_test [github.com/go-ozzo/ozzo-dbx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-ozzo/ozzo-dbx@v1.5.0/example_test.go:252:1","message":"ExampleDB_Open refers to unknown field or method: DB.Open","source":"\nfunc ExampleDB_Open() {\n\tdb, err := dbx.Open(\"mysql\", \"user:pass@/example\")"}]}
{"created_at":"2023-06-22 17:42:01.830545 UTC","module_path":"github.com/nemosupremo/vault-gatekeeper","version":"v1.1.3","sort_version":"1,1,3~","commit_time":"2019-11-13 21:32:31 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/usagestore [synthetic/usagestore.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/nemosupremo/vault-gatekeeper@v1.1.3/usagestore/memory_test.go:37:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t} else {\n\t\t\t\t\tt.Fatalf(\"Error when trying to acquire in stampede: %v\", err)\n\t\t\t\t}"},{"package_id":"synthetic/usagestore [synthetic/usagestore.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/nemosupremo/vault-gatekeeper@v1.1.3/usagestore/vault_test.go:73:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t} else {\n\t\t\t\t\tt.Fatalf(\"Error when trying to acquire in stampede: %v\", err)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:28:00.939171 UTC","module_path":"gopkg.in/goracle.v2","version":"v2.24.1","sort_version":"2,a24,1~","commit_time":"2019-12-13 07:28:53 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"gopkg.in/goracle.v2_test [gopkg.in/goracle.v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/goracle.v2@v2.24.1/example_shutdown_test.go:19:1","message":"ExampleStartup refers to unknown identifier: Startup","source":"// ExampleStartup calls exampleStartup to start a database.\nfunc ExampleStartup() {\n\tif err := exampleStartup(goracle.StartupDefault); err != nil {"},{"package_id":"gopkg.in/goracle.v2_test [gopkg.in/goracle.v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/goracle.v2@v2.24.1/example_shutdown_test.go:62:1","message":"ExampleShutdown refers to unknown identifier: Shutdown","source":"// ExampleShutdown is an example of how to shut down a database.\nfunc ExampleShutdown() {\n\tdsn := \"oracle://?sysdba=1\" // equivalent to \"/ as sysdba\""}]}
{"created_at":"2023-06-22 17:25:19.163121 UTC","module_path":"github.com/antchfx/xpath","version":"v1.2.4","sort_version":"1,2,4~","commit_time":"2023-02-15 06:37:45 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/antchfx/xpath [github.com/antchfx/xpath.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/antchfx/xpath@v1.2.4/cache_test.go:104:6","message":"call to (*B).FailNow from a non-test goroutine","source":"\t\t\t\tif k != v {\n\t\t\t\t\tb.FailNow()\n\t\t\t\t}"},{"package_id":"github.com/antchfx/xpath [github.com/antchfx/xpath.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/antchfx/xpath@v1.2.4/cache_test.go:144:6","message":"call to (*B).FailNow from a non-test goroutine","source":"\t\t\t\tif k != v {\n\t\t\t\t\tb.FailNow()\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:43:57.8725 UTC","module_path":"github.com/stathat/consistent","version":"v1.0.0","sort_version":"1,0,0~","commit_time":"2017-07-26 18:26:18 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stathat/consistent@v1.0.0/example_test.go:34:1","message":"ExampleAdd refers to unknown identifier: Add","source":"\nfunc ExampleAdd() {\n\tc := consistent.New()"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stathat/consistent@v1.0.0/example_test.go:74:1","message":"ExampleRemove refers to unknown identifier: Remove","source":"\nfunc ExampleRemove() {\n\tc := consistent.New()"}]}
{"created_at":"2023-06-22 17:55:39.299965 UTC","module_path":"github.com/MasterOfBinary/go-opencl","version":"v0.0.0-20161217130610-e11c0e14990e","sort_version":"0,0,0,~20161217130610-e11c0e14990e","commit_time":"2016-12-17 13:06:10 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/examples [synthetic/examples.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/MasterOfBinary/go-opencl@v0.0.0-20161217130610-e11c0e14990e/examples/matmul_test.go:21:1","message":"ExampleMatrixMultiplication refers to unknown identifier: MatrixMultiplication","source":"\nfunc ExampleMatrixMultiplication() {\n\tdevice := getFirstDevice(opencl.DeviceTypeAll)"},{"package_id":"synthetic/examples [synthetic/examples.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/MasterOfBinary/go-opencl@v0.0.0-20161217130610-e11c0e14990e/examples/simple_test.go:9:1","message":"ExampleSimple refers to unknown identifier: Simple","source":"\nfunc ExampleSimple() {\n\tconst ("}]}
{"created_at":"2023-06-22 17:21:03.227956 UTC","module_path":"github.com/armon/consul-api","version":"v0.0.0-20180202201655-eb2c6b5be1b6","sort_version":"0,0,0,~20180202201655-eb2c6b5be1b6","commit_time":"2018-02-02 20:16:55 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/consul-api@v0.0.0-20180202201655-eb2c6b5be1b6/kv_test.go:187:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := kv.Put(p, nil); err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/consul-api@v0.0.0-20180202201655-eb2c6b5be1b6/kv_test.go:238:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := kv.Put(p, nil); err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:43:43.171499 UTC","module_path":"github.com/dubbogo/go-zookeeper","version":"v1.0.3","sort_version":"1,0,3~","commit_time":"2021-03-03 05:29:56 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/dubbogo/go-zookeeper/zk [github.com/dubbogo/go-zookeeper/zk.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dubbogo/go-zookeeper@v1.0.3/zk/lock_test.go:39:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := l2.Lock(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/dubbogo/go-zookeeper/zk [github.com/dubbogo/go-zookeeper/zk.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dubbogo/go-zookeeper@v1.0.3/zk/lock_test.go:43:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := l2.Unlock(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:22:36.460772 UTC","module_path":"github.com/wangchanggan/k8s.io/v0-20/apimachinery","version":"v0.0.0-20220317064813-0fc67323718e","sort_version":"0,0,0,~20220317064813-0fc67323718e","commit_time":"2022-03-17 06:48:13 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/wangchanggan/k8s.io/v0-20/apimachinery/pkg/util/wait [github.com/wangchanggan/k8s.io/v0-20/apimachinery/pkg/util/wait.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wangchanggan/k8s.io/v0-20/apimachinery@v0.0.0-20220317064813-0fc67323718e/pkg/util/wait/wait_test.go:427:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := PollInfinite(time.Microsecond, f); err != nil {\n\t\t\tt.Fatalf(\"unexpected error %v\", err)\n\t\t}"},{"package_id":"github.com/wangchanggan/k8s.io/v0-20/apimachinery/pkg/util/wait [github.com/wangchanggan/k8s.io/v0-20/apimachinery/pkg/util/wait.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wangchanggan/k8s.io/v0-20/apimachinery@v0.0.0-20220317064813-0fc67323718e/pkg/util/wait/wait_test.go:458:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t}\n\t\tt.Fatalf(\"expected closed channel after two iterations\")\n\t}()"}]}
{"created_at":"2023-06-22 17:24:59.222777 UTC","module_path":"github.com/Bowery/prompt","version":"v0.0.0-20190916142128-fa8279994f75","sort_version":"0,0,0,~20190916142128-fa8279994f75","commit_time":"2019-09-16 14:21:28 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Bowery/prompt@v0.0.0-20190916142128-fa8279994f75/example_test.go:10:1","message":"ExamplePassword should return nothing","source":"\nfunc ExamplePassword() ([]byte, error) {\n\tclear, err := prompt.Password(\"Password\")"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Bowery/prompt@v0.0.0-20190916142128-fa8279994f75/example_test.go:19:1","message":"ExampleBasic should return nothing","source":"\nfunc ExampleBasic() (string, error) {\n\temail, err := prompt.Basic(\"Email\", true)"}]}
{"created_at":"2023-06-22 17:50:13.326796 UTC","module_path":"github.com/fanliao/go-concurrentMap","version":"v0.0.0-20141114143905-7d2d7a5ea67b","sort_version":"0,0,0,~20141114143905-7d2d7a5ea67b","commit_time":"2014-11-14 14:39:05 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fanliao/go-concurrentMap@v0.0.0-20141114143905-7d2d7a5ea67b/map_test.go:167:1","message":"Testfloat32Key has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc Testfloat32Key(t *testing.T) {\n\ttestConcurrentMap(t, map[interface{}]interface{}{"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fanliao/go-concurrentMap@v0.0.0-20141114143905-7d2d7a5ea67b/map_test.go:176:1","message":"Testfloat64Key has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc Testfloat64Key(t *testing.T) {\n\ttestConcurrentMap(t, map[interface{}]interface{}{"}]}
{"created_at":"2023-06-22 17:44:32.293863 UTC","module_path":"github.com/pierrec/lz4/v3","version":"v3.3.5","sort_version":"3,3,5~","commit_time":"2022-05-17 09:27:08 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/pierrec/lz4/v3_test [github.com/pierrec/lz4/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pierrec/lz4/v3@v3.3.5/writer_test.go:111:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/pierrec/lz4/v3_test [github.com/pierrec/lz4/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pierrec/lz4/v3@v3.3.5/writer_test.go:120:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:40:57.459132 UTC","module_path":"github.com/hyperjumptech/grule-rule-engine","version":"v1.13.0","sort_version":"1,a13,0~","commit_time":"2023-01-26 05:30:16 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/hyperjumptech/grule-rule-engine/examples [github.com/hyperjumptech/grule-rule-engine/examples.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hyperjumptech/grule-rule-engine@v1.13.0/examples/Concurrency_test.go:155:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tfor i := 1; i \u003c= 500; i++ {\n\t\tgo beginThread(fmt.Sprintf(\"T%d\", i), lib, t)\n\t}"},{"package_id":"github.com/hyperjumptech/grule-rule-engine/examples [github.com/hyperjumptech/grule-rule-engine/examples.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hyperjumptech/grule-rule-engine@v1.13.0/examples/Concurrency_test.go:155:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tfor i := 1; i \u003c= 500; i++ {\n\t\tgo beginThread(fmt.Sprintf(\"T%d\", i), lib, t)\n\t}"}]}
{"created_at":"2023-06-22 17:46:38.982147 UTC","module_path":"github.com/streamingfast/solana-go","version":"v0.5.1","sort_version":"0,5,1~","commit_time":"2022-02-02 20:58:38 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/streamingfast/solana-go_test [github.com/streamingfast/solana-go.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/streamingfast/solana-go@v0.5.1/example_rpc_get_recent_blockhash_test.go:11:1","message":"ExampleRPC_GetRecentBlockhash refers to unknown identifier: RPC","source":"\nfunc ExampleRPC_GetRecentBlockhash() {\n\tclient := rpc.NewClient(getRPCURL())"},{"package_id":"github.com/streamingfast/solana-go_test [github.com/streamingfast/solana-go.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/streamingfast/solana-go@v0.5.1/example_ws_account_subscribe_test.go:14:1","message":"ExampleWS_AccountSubscribe refers to unknown identifier: WS","source":"\nfunc ExampleWS_AccountSubscribe() {\n\t// Let's this example run for 1m than shutdown everything, not required in your own production code of course"}]}
{"created_at":"2023-06-22 17:24:06.232273 UTC","module_path":"github.com/marusama/semaphore","version":"v0.0.0-20190110074507-6952cef993b2","sort_version":"0,0,0,~20190110074507-6952cef993b2","commit_time":"2019-01-10 07:45:07 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/marusama/semaphore [github.com/marusama/semaphore.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/marusama/semaphore@v0.0.0-20190110074507-6952cef993b2/semaphore_test.go:803:7","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t\tif err := sem.Acquire(context.Background(), 1); err != nil {\n\t\t\t\t\t\tt.Fatal(err)\n\t\t\t\t\t}"},{"package_id":"github.com/marusama/semaphore [github.com/marusama/semaphore.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/marusama/semaphore@v0.0.0-20190110074507-6952cef993b2/semaphore_test.go:818:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tdone := make(chan struct{})\n\t\tgo runTest(done)\n\t\tselect {"}]}
{"created_at":"2023-06-22 17:41:31.019611 UTC","module_path":"ariga.io/atlas","version":"v0.12.0","sort_version":"0,a12,0~","commit_time":"2023-06-01 08:10:26 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"ariga.io/atlas/schemahcl [ariga.io/atlas/schemahcl.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/ariga.io/atlas@v0.12.0/schemahcl/hcl_test.go:105:1","message":"ExampleUnmarshal refers to unknown identifier: Unmarshal","source":"\nfunc ExampleUnmarshal() {\n\tf := `"},{"package_id":"ariga.io/atlas/sql/schema_test [ariga.io/atlas/sql/schema.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/ariga.io/atlas@v0.12.0/sql/schema/migrate_test.go:94:1","message":"ExampleChanges_Replace refers to unknown field or method: Changes.Replace","source":"\nfunc ExampleChanges_Replace() {\n\tchanges := schema.Changes{"}]}
{"created_at":"2023-06-22 17:23:11.699395 UTC","module_path":"go.bug.st/serial","version":"v1.5.0","sort_version":"1,5,0~","commit_time":"2023-01-03 22:39:20 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"go.bug.st/serial_test [go.bug.st/serial.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.bug.st/serial@v1.5.0/example_modem_bits_test.go:17:1","message":"ExampleGetSetModemBits refers to unknown identifier: GetSetModemBits","source":"\nfunc ExampleGetSetModemBits() {\n\t// Open the first serial port detected at 9600bps N81"},{"package_id":"go.bug.st/serial_test [go.bug.st/serial.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.bug.st/serial@v1.5.0/example_serialport_test.go:16:1","message":"ExampleSerialPort_SetMode refers to unknown identifier: SerialPort","source":"\nfunc ExampleSerialPort_SetMode() {\n\tport, err := serial.Open(\"/dev/ttyACM0\", \u0026serial.Mode{})"}]}
{"created_at":"2023-06-22 17:46:26.887586 UTC","module_path":"github.com/lestrrat/go-jsval","version":"v0.0.0-20181205002323-20277e9befc0","sort_version":"0,0,0,~20181205002323-20277e9befc0","commit_time":"2018-12-05 00:23:23 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lestrrat/go-jsval@v0.0.0-20181205002323-20277e9befc0/example_test.go:11:1","message":"ExampleBuild refers to unknown identifier: Build","source":"\nfunc ExampleBuild() {\n\ts, err := schema.ReadFile(`/path/to/schema.json`)"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lestrrat/go-jsval@v0.0.0-20181205002323-20277e9befc0/example_test.go:32:1","message":"ExampleManual refers to unknown identifier: Manual","source":"\nfunc ExampleManual() {\n\tv := jsval.Object()."}]}
{"created_at":"2023-06-22 17:25:46.092747 UTC","module_path":"stathat.com/c/consistent","version":"v1.0.0","sort_version":"1,0,0~","commit_time":"2017-07-26 18:26:18 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/stathat.com/c/consistent@v1.0.0/example_test.go:34:1","message":"ExampleAdd refers to unknown identifier: Add","source":"\nfunc ExampleAdd() {\n\tc := consistent.New()"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/stathat.com/c/consistent@v1.0.0/example_test.go:74:1","message":"ExampleRemove refers to unknown identifier: Remove","source":"\nfunc ExampleRemove() {\n\tc := consistent.New()"}]}
{"created_at":"2023-06-22 17:24:54.063992 UTC","module_path":"github.com/aergoio/aergo-actor","version":"v0.0.0-20190219030625-562037d5fec7","sort_version":"0,0,0,~20190219030625-562037d5fec7","commit_time":"2019-02-19 03:06:25 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/internal/queue/goring [synthetic/internal/queue/goring.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/aergoio/aergo-actor@v0.0.0-20190219030625-562037d5fec7/internal/queue/goring/queue_test.go:83:5","message":"call to (*T).FailNow from a non-test goroutine","source":"\t\t\t\tlog.Printf(\"item have already been seen %v\", s)\n\t\t\t\tt.FailNow()\n\t\t\t}"},{"package_id":"synthetic/internal/queue/mpsc [synthetic/internal/queue/mpsc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/aergoio/aergo-actor@v0.0.0-20190219030625-562037d5fec7/internal/queue/mpsc/mpsc_test.go:53:5","message":"call to (*T).FailNow from a non-test goroutine","source":"\t\t\t\tlog.Printf(\"item have already been seen %v\", s)\n\t\t\t\tt.FailNow()\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:32:07.293834 UTC","module_path":"github.com/aximchain/axc-cosmos-sdk","version":"v0.1.9","sort_version":"0,1,9~","commit_time":"2023-02-12 15:40:17 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/aximchain/axc-cosmos-sdk/cmd/gaia/app/benchmarks [github.com/aximchain/axc-cosmos-sdk/cmd/gaia/app/benchmarks.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/aximchain/axc-cosmos-sdk@v0.1.9/cmd/gaia/app/benchmarks/txsize_test.go:17:1","message":"ExampleTxSendSize refers to unknown identifier: TxSendSize","source":"// nolint: vet\nfunc ExampleTxSendSize() {\n\tcdc := app.MakeCodec()"},{"package_id":"github.com/aximchain/axc-cosmos-sdk/crypto [github.com/aximchain/axc-cosmos-sdk/crypto.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/aximchain/axc-cosmos-sdk@v0.1.9/crypto/encode_test.go:51:1","message":"ExamplePrintRegisteredTypes refers to unknown identifier: PrintRegisteredTypes","source":"//nolint\nfunc ExamplePrintRegisteredTypes() {\n\tcdc.PrintTypes(os.Stdout)"}]}
{"created_at":"2023-06-22 17:58:46.121775 UTC","module_path":"github.com/alex023/clock","version":"v0.0.0-20191208111215-c265f1b2ab18","sort_version":"0,0,0,~20191208111215-c265f1b2ab18","commit_time":"2019-12-08 11:12:15 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/alex023/clock@v0.0.0-20191208111215-c265f1b2ab18/clock_example_test.go:34:1","message":"ExampleClock_AddJobForEvent refers to unknown field or method: Clock.AddJobForEvent","source":"//ExampleClock_AddJobForEvent，show receive signal when job is called by system\nfunc ExampleClock_AddJobForEvent() {\n\tvar ("},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/alex023/clock@v0.0.0-20191208111215-c265f1b2ab18/clock_example_test.go:106:1","message":"ExampleClock_RmJob refers to unknown field or method: Clock.RmJob","source":"//ExampleClock_AddJobWithDeadtime,show how to cancel a job which added in system\nfunc ExampleClock_RmJob() {\n\tvar ("}]}
{"created_at":"2023-06-22 17:34:08.527015 UTC","module_path":"github.com/rs/xhandler","version":"v0.0.0-20170707052532-1eb70cf1520d","sort_version":"0,0,0,~20170707052532-1eb70cf1520d","commit_time":"2017-07-07 05:25:32 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rs/xhandler@v0.0.0-20170707052532-1eb70cf1520d/chain_example_test.go:39:1","message":"ExampleAddChain refers to unknown identifier: AddChain","source":"\nfunc ExampleAddChain() {\n\tc := xhandler.Chain{}"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rs/xhandler@v0.0.0-20170707052532-1eb70cf1520d/xhandler_example_test.go:49:1","message":"ExampleHandleTimeout refers to unknown identifier: HandleTimeout","source":"\nfunc ExampleHandleTimeout() {\n\tvar xh xhandler.HandlerC"}]}
{"created_at":"2023-06-22 17:28:27.413478 UTC","module_path":"github.com/appscode/go","version":"v0.0.0-20201105063637-5613f3b8169f","sort_version":"0,0,0,~20201105063637-5613f3b8169f","commit_time":"2020-11-05 06:36:37 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/appscode/go/wait [github.com/appscode/go/wait.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/appscode/go@v0.0.0-20201105063637-5613f3b8169f/wait/wait_test.go:364:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := PollInfinite(time.Microsecond, f); err != nil {\n\t\t\tt.Fatalf(\"unexpected error %v\", err)\n\t\t}"},{"package_id":"github.com/appscode/go/wait [github.com/appscode/go/wait.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/appscode/go@v0.0.0-20201105063637-5613f3b8169f/wait/wait_test.go:395:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t}\n\t\tt.Fatalf(\"expected closed channel after two iterations\")\n\t}()"}]}
{"created_at":"2023-06-22 17:24:41.033108 UTC","module_path":"github.com/Shopify/go-lua","version":"v0.0.0-20221004153744-91867de107cf","sort_version":"0,0,0,~20221004153744-91867de107cf","commit_time":"2022-10-04 15:37:44 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/Shopify/go-lua_test [github.com/Shopify/go-lua.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Shopify/go-lua@v0.0.0-20221004153744-91867de107cf/doc_test.go:8:1","message":"ExampleFunction should be niladic","source":"// This example receives a variable number of numerical arguments and returns their average and sum.\nfunc ExampleFunction(l *lua.State) int {\n\tn := l.Top() // Number of arguments."},{"package_id":"github.com/Shopify/go-lua_test [github.com/Shopify/go-lua.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Shopify/go-lua@v0.0.0-20221004153744-91867de107cf/doc_test.go:8:1","message":"ExampleFunction should return nothing","source":"// This example receives a variable number of numerical arguments and returns their average and sum.\nfunc ExampleFunction(l *lua.State) int {\n\tn := l.Top() // Number of arguments."}]}
{"created_at":"2023-06-22 17:38:27.226535 UTC","module_path":"github.com/bfirsh/funker-go","version":"v0.0.0-20161231111542-eaa0a2e06f30","sort_version":"0,0,0,~20161231111542-eaa0a2e06f30","commit_time":"2016-12-31 11:15:42 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bfirsh/funker-go@v0.0.0-20161231111542-eaa0a2e06f30/handle_test.go:59:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bfirsh/funker-go@v0.0.0-20161231111542-eaa0a2e06f30/handle_test.go:68:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n"}]}
{"created_at":"2023-06-22 17:42:23.954571 UTC","module_path":"github.com/blue-jay/blueprint","version":"v0.0.0-20170717030418-f200a5c1b49e","sort_version":"0,0,0,~20170717030418-f200a5c1b49e","commit_time":"2017-07-17 03:04:18 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/lib/flight_test [synthetic/lib/flight.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/blue-jay/blueprint@v0.0.0-20170717030418-f200a5c1b49e/lib/flight/flight_test.go:21:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"synthetic/lib/flight_test [synthetic/lib/flight.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/blue-jay/blueprint@v0.0.0-20170717030418-f200a5c1b49e/lib/flight/flight_test.go:37:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:40:07.296313 UTC","module_path":"github.com/go-chassis/go-chassis","version":"v1.8.3","sort_version":"1,8,3~","commit_time":"2020-04-07 01:32:17 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/go-chassis/go-chassis/third_party/forked/afex/hystrix-go/hystrix [github.com/go-chassis/go-chassis/third_party/forked/afex/hystrix-go/hystrix.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-chassis/go-chassis@v1.8.3/third_party/forked/afex/hystrix-go/hystrix/eventstream_test.go:205:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"github.com/go-chassis/go-chassis/third_party/forked/afex/hystrix-go/hystrix [github.com/go-chassis/go-chassis/third_party/forked/afex/hystrix-go/hystrix.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-chassis/go-chassis@v1.8.3/third_party/forked/afex/hystrix-go/hystrix/eventstream_test.go:219:8","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t\t\tif err != nil {\n\t\t\t\t\t\t\tt.Fatal(err)\n\t\t\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:40:03.970511 UTC","module_path":"github.com/300brand/disgo","version":"v3.1.0+incompatible","sort_version":"3,1,0~","commit_time":"2014-06-12 16:16:17 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/300brand/disgo@v3.1.0+incompatible/disgo_test.go:34:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := s.Serve(addr); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/300brand/disgo@v3.1.0+incompatible/disgo_test.go:75:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err := s.Serve(addr); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:50:27.820561 UTC","module_path":"github.com/devlikebear/dbx","version":"v1.10.0","sort_version":"1,a10,0~","commit_time":"2023-04-28 13:13:51 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/devlikebear/dbx_test [github.com/devlikebear/dbx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/devlikebear/dbx@v1.10.0/example_test.go:107:1","message":"ExampleSchemaBuilder refers to unknown identifier: SchemaBuilder","source":"\nfunc ExampleSchemaBuilder() {\n\tdb, _ := dbx.Open(\"mysql\", \"user:pass@/example\")"},{"package_id":"github.com/devlikebear/dbx_test [github.com/devlikebear/dbx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/devlikebear/dbx@v1.10.0/example_test.go:252:1","message":"ExampleDB_Open refers to unknown field or method: DB.Open","source":"\nfunc ExampleDB_Open() {\n\tdb, err := dbx.Open(\"mysql\", \"user:pass@/example\")"}]}
{"created_at":"2023-06-22 17:33:02.026476 UTC","module_path":"github.com/gomodule/oauth1","version":"v0.2.0","sort_version":"0,2,0~","commit_time":"2021-11-19 16:06:05 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/gomodule/oauth1/oauth_test [github.com/gomodule/oauth1/oauth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gomodule/oauth1@v0.2.0/oauth/examples_test.go:28:1","message":"ExampleClient_SetAuthorizationHeader should be niladic","source":"// use of the URL Opaque field.\nfunc ExampleClient_SetAuthorizationHeader(client *oauth.Client, credentials *oauth.Credentials) error {\n\tform := url.Values{\"maxResults\": {\"100\"}}"},{"package_id":"github.com/gomodule/oauth1/oauth_test [github.com/gomodule/oauth1/oauth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gomodule/oauth1@v0.2.0/oauth/examples_test.go:28:1","message":"ExampleClient_SetAuthorizationHeader should return nothing","source":"// use of the URL Opaque field.\nfunc ExampleClient_SetAuthorizationHeader(client *oauth.Client, credentials *oauth.Credentials) error {\n\tform := url.Values{\"maxResults\": {\"100\"}}"}]}
{"created_at":"2023-06-22 17:28:37.367273 UTC","module_path":"github.com/notnil/chess","version":"v1.9.0","sort_version":"1,9,0~","commit_time":"2022-08-14 16:05:50 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/notnil/chess/opening_test [github.com/notnil/chess/opening.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/notnil/chess@v1.9.0/opening/opening_test.go:11:1","message":"ExampleFind refers to unknown identifier: Find","source":"\nfunc ExampleFind() {\n\tg := chess.NewGame()"},{"package_id":"github.com/notnil/chess/opening_test [github.com/notnil/chess/opening.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/notnil/chess@v1.9.0/opening/opening_test.go:22:1","message":"ExamplePossible refers to unknown identifier: Possible","source":"\nfunc ExamplePossible() {\n\tg := chess.NewGame()"}]}
{"created_at":"2023-06-22 17:20:10.910022 UTC","module_path":"cloud.google.com/go/spanner","version":"v1.47.0","sort_version":"1,a47,0~","commit_time":"2023-06-20 17:30:54 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"cloud.google.com/go/spanner_test [cloud.google.com/go/spanner.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/cloud.google.com/go/spanner@v1.47.0/examples_test.go:509:1","message":"ExampleStructParam refers to unknown identifier: StructParam","source":"\nfunc ExampleStructParam() {\n\tstmt := spanner.Statement{"},{"package_id":"cloud.google.com/go/spanner_test [cloud.google.com/go/spanner.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/cloud.google.com/go/spanner@v1.47.0/examples_test.go:522:1","message":"ExampleArrayOfStructParam refers to unknown identifier: ArrayOfStructParam","source":"\nfunc ExampleArrayOfStructParam() {\n\tstmt := spanner.Statement{"}]}
{"created_at":"2023-06-22 17:27:13.899512 UTC","module_path":"github.com/paulmach/go.geo","version":"v0.0.0-20180829195134-22b514266d33","sort_version":"0,0,0,~20180829195134-22b514266d33","commit_time":"2018-08-29 19:51:34 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/clustering_test [synthetic/clustering.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/paulmach/go.geo@v0.0.0-20180829195134-22b514266d33/clustering/examples_test.go:10:1","message":"ExamplePointClustering refers to unknown identifier: PointClustering","source":"\nfunc ExamplePointClustering() {\n\tpointers := []geo.Pointer{"},{"package_id":"synthetic/clustering_test [synthetic/clustering.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/paulmach/go.geo@v0.0.0-20180829195134-22b514266d33/clustering/examples_test.go:38:1","message":"ExampleGeoPointClustering refers to unknown identifier: GeoPointClustering","source":"\nfunc ExampleGeoPointClustering() {\n\tpointers := []geo.Pointer{"}]}
{"created_at":"2023-06-22 17:24:43.880535 UTC","module_path":"github.com/pocketbase/dbx","version":"v1.10.0","sort_version":"1,a10,0~","commit_time":"2023-02-22 15:57:02 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/pocketbase/dbx_test [github.com/pocketbase/dbx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pocketbase/dbx@v1.10.0/example_test.go:107:1","message":"ExampleSchemaBuilder refers to unknown identifier: SchemaBuilder","source":"\nfunc ExampleSchemaBuilder() {\n\tdb, _ := dbx.Open(\"mysql\", \"user:pass@/example\")"},{"package_id":"github.com/pocketbase/dbx_test [github.com/pocketbase/dbx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pocketbase/dbx@v1.10.0/example_test.go:252:1","message":"ExampleDB_Open refers to unknown field or method: DB.Open","source":"\nfunc ExampleDB_Open() {\n\tdb, err := dbx.Open(\"mysql\", \"user:pass@/example\")"}]}
{"created_at":"2023-06-22 17:19:11.810312 UTC","module_path":"github.com/biogo/store","version":"v0.0.0-20201120204734-aad293a2328f","sort_version":"0,0,0,~20201120204734-aad293a2328f","commit_time":"2020-11-20 20:47:34 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/biogo/store/interval_test [github.com/biogo/store/interval.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/biogo/store@v0.0.0-20201120204734-aad293a2328f/interval/int_interval_example_test.go:41:1","message":"Example_2 has malformed example suffix: 2","source":"\nfunc Example_2() {\n\tt := \u0026interval.IntTree{}"},{"package_id":"github.com/biogo/store/interval_test [github.com/biogo/store/interval.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/biogo/store@v0.0.0-20201120204734-aad293a2328f/interval/interval_example_test.go:67:1","message":"Example_1 has malformed example suffix: 1","source":"\nfunc Example_1() {\n\tt := \u0026interval.Tree{}"}]}
{"created_at":"2023-06-22 17:32:41.956161 UTC","module_path":"github.com/confluentinc/confluent-kafka-go/v2","version":"v2.1.1","sort_version":"2,1,1~","commit_time":"2023-05-03 06:10:12 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/confluentinc/confluent-kafka-go/v2/kafka [github.com/confluentinc/confluent-kafka-go/v2/kafka.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/confluentinc/confluent-kafka-go/v2@v2.1.1/kafka/stats_event_test.go:117:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tstatsReceived := make(chan bool)\n\tgo handleStatsEvent(t, c.Events(), statsReceived)\n"},{"package_id":"github.com/confluentinc/confluent-kafka-go/v2/kafka [github.com/confluentinc/confluent-kafka-go/v2/kafka.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/confluentinc/confluent-kafka-go/v2@v2.1.1/kafka/txn_integration_test.go:248:7","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\tif (m.TopicPartition.Error != nil) == expectDrErr {\n\t\t\t\t\t\tt.Fatalf(\"Unexpected %v, expectDrErr %v\\n\",\n\t\t\t\t\t\t\tm.TopicPartition, expectDrErr)"}]}
{"created_at":"2023-06-22 17:19:30.697755 UTC","module_path":"github.com/caarlos0/env","version":"v3.5.0+incompatible","sort_version":"3,5,0~","commit_time":"2018-10-20 01:46:22 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/caarlos0/env@v3.5.0+incompatible/env_test.go:648:1","message":"ExampleParseRequiredField refers to unknown identifier: ParseRequiredField","source":"\nfunc ExampleParseRequiredField() {\n\ttype config struct {"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/caarlos0/env@v3.5.0+incompatible/env_test.go:662:1","message":"ExampleParseMultipleOptions refers to unknown identifier: ParseMultipleOptions","source":"\nfunc ExampleParseMultipleOptions() {\n\ttype config struct {"}]}
{"created_at":"2023-06-22 17:36:51.260796 UTC","module_path":"github.com/keybase/backoff","version":"v1.0.0","sort_version":"1,0,0~","commit_time":"2016-03-21 13:15:54 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/keybase/backoff@v1.0.0/example_test.go:5:1","message":"ExampleRetry should return nothing","source":"\nfunc ExampleRetry() error {\n\toperation := func() error {"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/keybase/backoff@v1.0.0/example_test.go:21:1","message":"ExampleTicker should return nothing","source":"\nfunc ExampleTicker() error {\n\toperation := func() error {"}]}
{"created_at":"2023-06-22 17:56:25.689508 UTC","module_path":"github.com/Azure/azure-kusto-go","version":"v0.13.1","sort_version":"0,a13,1~","commit_time":"2023-05-24 11:09:57 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/Azure/azure-kusto-go/kusto [github.com/Azure/azure-kusto-go/kusto.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Azure/azure-kusto-go@v0.13.1/kusto/kusto_examples_test.go:307:1","message":"ExampleCustomHttpClient refers to unknown identifier: CustomHttpClient","source":"\nfunc ExampleCustomHttpClient() { // nolint:govet // Example code\n\t// Create a connection string builder with your Azure ClientID, Secret and TenantID."},{"package_id":"github.com/Azure/azure-kusto-go/kusto_test [github.com/Azure/azure-kusto-go/kusto.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Azure/azure-kusto-go@v0.13.1/kusto/mock_example_test.go:93:1","message":"ExampleMockRows should be niladic","source":"\nfunc ExampleMockRows(t *testing.T) { // nolint:govet // Example code\n\tnow := time.Now()"}]}
{"created_at":"2023-06-22 17:51:01.586855 UTC","module_path":"github.com/barasher/go-exiftool","version":"v1.10.0","sort_version":"1,a10,0~","commit_time":"2023-06-07 20:56:06 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/barasher/go-exiftool_test [github.com/barasher/go-exiftool.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/barasher/go-exiftool@v1.10.0/exiftool_sample_test.go:14:1","message":"ExampleExiftool_Read refers to unknown field or method: Exiftool.Read","source":"\nfunc ExampleExiftool_Read() {\n\tet, err := exiftool.NewExiftool()"},{"package_id":"github.com/barasher/go-exiftool_test [github.com/barasher/go-exiftool.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/barasher/go-exiftool@v1.10.0/exiftool_sample_test.go:56:1","message":"ExampleExiftool_Write refers to unknown field or method: Exiftool.Write","source":"\nfunc ExampleExiftool_Write() {\n\t// error handling are skipped in this example"}]}
{"created_at":"2023-06-22 17:18:45.420133 UTC","module_path":"github.com/ncw/swift","version":"v1.0.53","sort_version":"1,0,a53~","commit_time":"2021-01-21 17:53:56 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/ncw/swift_test [github.com/ncw/swift.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ncw/swift@v1.0.53/swift_test.go:475:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(\"Auth failed\", err)\n\t\t\t}"},{"package_id":"github.com/ncw/swift_test [github.com/ncw/swift.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ncw/swift@v1.0.53/swift_test.go:478:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif !c.Authenticated() {\n\t\t\t\tt.Fatal(\"Not authenticated\")\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:36:14.209682 UTC","module_path":"github.com/go-web/httprl","version":"v0.0.0-20160505070143-20dc8024cb5d","sort_version":"0,0,0,~20160505070143-20dc8024cb5d","commit_time":"2016-05-05 07:01:43 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-web/httprl@v0.0.0-20160505070143-20dc8024cb5d/example_test.go:33:1","message":"ExampleMemcache refers to unknown identifier: Memcache","source":"\nfunc ExampleMemcache() {\n\tmc := memcache.New(\"localhost:11211\")"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-web/httprl@v0.0.0-20160505070143-20dc8024cb5d/example_test.go:45:1","message":"ExampleRedis refers to unknown identifier: Redis","source":"\nfunc ExampleRedis() {\n\trc := redis.New(\"localhost:6379\")"}]}
{"created_at":"2023-06-22 17:41:15.669148 UTC","module_path":"github.com/rhysd/locerr","version":"v0.0.0-20170710120751-9e34f7a52ee7","sort_version":"0,0,0,~20170710120751-9e34f7a52ee7","commit_time":"2017-07-10 12:07:51 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rhysd/locerr@v0.0.0-20170710120751-9e34f7a52ee7/example_test.go:18:1","message":"ExampleErrorWithRange refers to unknown identifier: ErrorWithRange","source":"\nfunc ExampleErrorWithRange() {\n\t// At first you should gain entire source as *Source instance."},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rhysd/locerr@v0.0.0-20170710120751-9e34f7a52ee7/example_test.go:68:1","message":"ExampleErrorWithOnePos refers to unknown identifier: ErrorWithOnePos","source":"\nfunc ExampleErrorWithOnePos() {\n\tsrc := NewDummySource(code)"}]}
{"created_at":"2023-06-22 17:34:54.494203 UTC","module_path":"github.com/viant/xunsafe","version":"v0.8.4","sort_version":"0,8,4~","commit_time":"2023-05-19 15:34:48 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/viant/xunsafe_test [github.com/viant/xunsafe.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/viant/xunsafe@v0.8.4/example_test.go:9:1","message":"Example_FastReflection has malformed example suffix: FastReflection","source":"\nfunc Example_FastReflection() {\n\ttype Foo struct {"},{"package_id":"github.com/viant/xunsafe_test [github.com/viant/xunsafe.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/viant/xunsafe@v0.8.4/example_test.go:27:1","message":"ExampleAddr refers to unknown identifier: Addr","source":"\nfunc ExampleAddr() {\n\ttype Foo struct {"}]}
{"created_at":"2023-06-22 17:31:11.12664 UTC","module_path":"github.com/openfaas/openfaas-cloud/sdk","version":"v0.0.0-20230310102917-ba939d40ae7f","sort_version":"0,0,0,~20230310102917-ba939d40ae7f","commit_time":"2023-03-10 10:29:17 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/openfaas/openfaas-cloud/sdk [github.com/openfaas/openfaas-cloud/sdk.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/openfaas/openfaas-cloud/sdk@v0.0.0-20230310102917-ba939d40ae7f/customers_test.go:170:1","message":"TestformatUsername_TrimsNewline has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestformatUsername_TrimsNewline(t *testing.T) {\n\twant := `alexellis`"},{"package_id":"github.com/openfaas/openfaas-cloud/sdk [github.com/openfaas/openfaas-cloud/sdk.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/openfaas/openfaas-cloud/sdk@v0.0.0-20230310102917-ba939d40ae7f/customers_test.go:179:1","message":"TestformatUsername_TrimsReturn has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestformatUsername_TrimsReturn(t *testing.T) {\n\twant := `alexellis`"}]}
{"created_at":"2023-06-22 17:39:00.949373 UTC","module_path":"github.com/lestrrat-go/jsval","version":"v0.0.0-20181205002323-20277e9befc0","sort_version":"0,0,0,~20181205002323-20277e9befc0","commit_time":"2018-12-05 00:23:23 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lestrrat-go/jsval@v0.0.0-20181205002323-20277e9befc0/example_test.go:11:1","message":"ExampleBuild refers to unknown identifier: Build","source":"\nfunc ExampleBuild() {\n\ts, err := schema.ReadFile(`/path/to/schema.json`)"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lestrrat-go/jsval@v0.0.0-20181205002323-20277e9befc0/example_test.go:32:1","message":"ExampleManual refers to unknown identifier: Manual","source":"\nfunc ExampleManual() {\n\tv := jsval.Object()."}]}
{"created_at":"2023-06-22 17:48:58.545825 UTC","module_path":"github.com/telemetryapp/go-lua","version":"v0.0.0-20160108214840-b23377a3930c","sort_version":"0,0,0,~20160108214840-b23377a3930c","commit_time":"2016-01-08 21:48:40 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/telemetryapp/go-lua@v0.0.0-20160108214840-b23377a3930c/doc_test.go:8:1","message":"ExampleFunction should be niladic","source":"// This example receives a variable number of numerical arguments and returns their average and sum.\nfunc ExampleFunction(l *lua.State) int {\n\tn := l.Top() // Number of arguments."},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/telemetryapp/go-lua@v0.0.0-20160108214840-b23377a3930c/doc_test.go:8:1","message":"ExampleFunction should return nothing","source":"// This example receives a variable number of numerical arguments and returns their average and sum.\nfunc ExampleFunction(l *lua.State) int {\n\tn := l.Top() // Number of arguments."}]}
{"created_at":"2023-06-22 17:16:14.396763 UTC","module_path":"github.com/olekukonko/tablewriter","version":"v0.0.5","sort_version":"0,0,5~","commit_time":"2021-02-10 15:55:18 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/olekukonko/tablewriter [github.com/olekukonko/tablewriter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/olekukonko/tablewriter@v0.0.5/table_test.go:57:1","message":"ExampleLong refers to unknown identifier: Long","source":"\nfunc ExampleLong() {\n\tdata := [][]string{"},{"package_id":"github.com/olekukonko/tablewriter [github.com/olekukonko/tablewriter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/olekukonko/tablewriter@v0.0.5/table_test.go:84:1","message":"ExampleCSV refers to unknown identifier: CSV","source":"\nfunc ExampleCSV() {\n\ttable, _ := NewCSV(os.Stdout, \"testdata/test.csv\", true)"}]}
{"created_at":"2023-06-22 17:26:06.351388 UTC","module_path":"cloud.google.com/go/vision","version":"v1.2.0","sort_version":"1,2,0~","commit_time":"2022-02-23 23:28:47 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"cloud.google.com/go/vision/apiv1_test [cloud.google.com/go/vision/apiv1.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/cloud.google.com/go/vision@v1.2.0/apiv1/examples_test.go:26:1","message":"Example_NewImageFromReader has malformed example suffix: NewImageFromReader","source":"\nfunc Example_NewImageFromReader() {\n\tf, err := os.Open(\"path/to/image.jpg\")"},{"package_id":"cloud.google.com/go/vision/apiv1_test [cloud.google.com/go/vision/apiv1.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/cloud.google.com/go/vision@v1.2.0/apiv1/examples_test.go:38:1","message":"Example_NewImageFromURI has malformed example suffix: NewImageFromURI","source":"\nfunc Example_NewImageFromURI() {\n\timg := vision.NewImageFromURI(\"gs://my-bucket/my-image.png\")"},{"package_id":"cloud.google.com/go/vision/apiv1_test [cloud.google.com/go/vision/apiv1.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/cloud.google.com/go/vision@v1.2.0/apiv1/examples_test.go:63:1","message":"Example_FaceFromLandmarks has malformed example suffix: FaceFromLandmarks","source":"\nfunc Example_FaceFromLandmarks() {\n\tctx := context.Background()"}]}
{"created_at":"2023-06-22 17:20:41.963169 UTC","module_path":"github.com/mitchellh/prefixedio","version":"v0.0.0-20190213213902-5733675afd51","sort_version":"0,0,0,~20190213213902-5733675afd51","commit_time":"2019-02-13 21:39:02 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/mitchellh/prefixedio [github.com/mitchellh/prefixedio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mitchellh/prefixedio@v0.0.0-20190213213902-5733675afd51/reader_test.go:39:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := io.Copy(\u0026fooBuf, pFoo); err != nil {\n\t\t\tt.Fatalf(\"err: %s\", err)\n\t\t}"},{"package_id":"github.com/mitchellh/prefixedio [github.com/mitchellh/prefixedio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mitchellh/prefixedio@v0.0.0-20190213213902-5733675afd51/reader_test.go:45:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := io.Copy(\u0026barBuf, pBar); err != nil {\n\t\t\tt.Fatalf(\"err: %s\", err)\n\t\t}"},{"package_id":"github.com/mitchellh/prefixedio [github.com/mitchellh/prefixedio.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mitchellh/prefixedio@v0.0.0-20190213213902-5733675afd51/reader_test.go:51:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := io.Copy(\u0026defBuf, pDefault); err != nil {\n\t\t\tt.Fatalf(\"err: %s\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:53:23.84336 UTC","module_path":"github.com/go-graphite/carbonzipper","version":"v0.0.0-20191211140943-b9a9d1881aed","sort_version":"0,0,0,~20191211140943-b9a9d1881aed","commit_time":"2019-12-11 14:09:43 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/zipper/broadcast [synthetic/zipper/broadcast.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-graphite/carbonzipper@v0.0.0-20191211140943-b9a9d1881aed/zipper/broadcast/broadcast_group_test.go:1364:9","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tt.Fatalf(\"result is not nil, but should be: %+v\", res)\n\t\t\t\t\t\t\t}"},{"package_id":"synthetic/zipper/broadcast [synthetic/zipper/broadcast.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-graphite/carbonzipper@v0.0.0-20191211140943-b9a9d1881aed/zipper/broadcast/broadcast_group_test.go:1369:8","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t\t\tif res == nil {\n\t\t\t\t\t\t\tt.Fatal(\"result is nil\")\n\t\t\t\t\t\t}"},{"package_id":"synthetic/zipper/broadcast [synthetic/zipper/broadcast.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-graphite/carbonzipper@v0.0.0-20191211140943-b9a9d1881aed/zipper/broadcast/broadcast_group_test.go:1378:8","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\t\tif len(res.Metrics) != len(tt.testCase.expectedResponse.Metrics) {\n\t\t\t\t\t\t\tt.Fatalf(\"different amount of responses %v, expected %v\", res, tt.testCase.expectedResponse)\n\t\t\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:22:58.904133 UTC","module_path":"github.com/ishidawataru/sctp","version":"v0.0.0-20230406120618-7ff4192f6ff2","sort_version":"0,0,0,~20230406120618-7ff4192f6ff2","commit_time":"2023-04-06 12:06:18 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/ishidawataru/sctp [github.com/ishidawataru/sctp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ishidawataru/sctp@v0.0.0-20230406120618-7ff4192f6ff2/sctp_streams_test.go:143:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif rtext != text {\n\t\t\t\t\tt.Fatalf(\"Mismatched payload: %s != %s\", rtext, text)\n\t\t\t\t}"},{"package_id":"github.com/ishidawataru/sctp [github.com/ishidawataru/sctp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ishidawataru/sctp@v0.0.0-20230406120618-7ff4192f6ff2/sctp_test.go:156:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif xerr != nil {\n\t\t\tt.Fatal(xerr)\n\t\t}"},{"package_id":"github.com/ishidawataru/sctp [github.com/ishidawataru/sctp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ishidawataru/sctp@v0.0.0-20230406120618-7ff4192f6ff2/sctp_test.go:163:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif xerr != io.EOF \u0026\u0026 xerr != syscall.EBADF {\n\t\t\tt.Fatalf(\"read failed: %v\", xerr)\n\t\t}"}]}
{"created_at":"2023-06-22 18:00:12.572772 UTC","module_path":"gitlab.dms3.io/dms3/go-mfs","version":"v0.0.3","sort_version":"0,0,3~","commit_time":"2021-08-30 22:28:25 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"gitlab.dms3.io/dms3/go-mfs [gitlab.dms3.io/dms3/go-mfs.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.dms3.io/dms3/go-mfs@v0.0.3/mfs_test.go:1174:8","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\t\tif lastSeen \u003e 0 {\n\t\t\t\t\t\t\tt.Fatalf(\"file corrupted, last seen: %d\", lastSeen)\n\t\t\t\t\t\t}"},{"package_id":"gitlab.dms3.io/dms3/go-mfs [gitlab.dms3.io/dms3/go-mfs.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.dms3.io/dms3/go-mfs@v0.0.3/mfs_test.go:1178:7","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t\t} else if len(buf) != 8 {\n\t\t\t\t\t\tt.Fatal(\"buf not the right size\")\n\t\t\t\t\t}"},{"package_id":"gitlab.dms3.io/dms3/go-mfs [gitlab.dms3.io/dms3/go-mfs.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.dms3.io/dms3/go-mfs@v0.0.3/mfs_test.go:1183:7","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\tif num \u003c lastSeen {\n\t\t\t\t\t\tt.Fatalf(\"count decreased: was %d, is %d\", lastSeen, num)\n\t\t\t\t\t} else {"}]}
{"created_at":"2023-06-22 17:35:37.614897 UTC","module_path":"github.com/googleapis/google-cloud-go-testing","version":"v0.0.0-20210719221736-1c9a4c676720","sort_version":"0,0,0,~20210719221736-1c9a4c676720","commit_time":"2021-07-19 22:17:36 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/googleapis/google-cloud-go-testing/bigquery/bqiface_test [github.com/googleapis/google-cloud-go-testing/bigquery/bqiface.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/googleapis/google-cloud-go-testing@v0.0.0-20210719221736-1c9a4c676720/bigquery/bqiface/examples_test.go:24:1","message":"Example_AdaptClient has malformed example suffix: AdaptClient","source":"\nfunc Example_AdaptClient() {\n\tctx := context.Background()"},{"package_id":"github.com/googleapis/google-cloud-go-testing/datastore/dsiface_test [github.com/googleapis/google-cloud-go-testing/datastore/dsiface.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/googleapis/google-cloud-go-testing@v0.0.0-20210719221736-1c9a4c676720/datastore/dsiface/examples_test.go:24:1","message":"Example_AdaptClient has malformed example suffix: AdaptClient","source":"\nfunc Example_AdaptClient() {\n\tctx := context.Background()"},{"package_id":"github.com/googleapis/google-cloud-go-testing/storage/stiface_test [github.com/googleapis/google-cloud-go-testing/storage/stiface.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/googleapis/google-cloud-go-testing@v0.0.0-20210719221736-1c9a4c676720/storage/stiface/examples_test.go:24:1","message":"Example_AdaptClient has malformed example suffix: AdaptClient","source":"\nfunc Example_AdaptClient() {\n\tctx := context.Background()"}]}
{"created_at":"2023-06-22 17:34:18.220181 UTC","module_path":"github.com/mit-dci/lit","version":"v0.0.0-20221102210550-8c3d3b49f2ce","sort_version":"0,0,0,~20221102210550-8c3d3b49f2ce","commit_time":"2022-11-02 21:05:50 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/mit-dci/lit/eventbus [github.com/mit-dci/lit/eventbus.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mit-dci/lit@v0.0.0-20221102210550-8c3d3b49f2ce/eventbus/bus_test.go:49:2","message":"call to (*T).FailNow from a non-test goroutine","source":"\t// Escape if we don't work out.\n\tgo (func() {\n\t\ttime.Sleep(1000 * time.Millisecond)"},{"package_id":"github.com/mit-dci/lit/lndc [github.com/mit-dci/lit/lndc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mit-dci/lit@v0.0.0-20221102210550-8c3d3b49f2ce/lndc/noise_test.go:260:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"unable to write message: %v\", err)\n\t\t}"},{"package_id":"github.com/mit-dci/lit/lndc [github.com/mit-dci/lit/lndc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mit-dci/lit@v0.0.0-20221102210550-8c3d3b49f2ce/lndc/noise_test.go:266:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif bytesWritten != len(largeMessage) {\n\t\t\tt.Fatalf(\"bytes not fully written!\")\n\t\t}"}]}
{"created_at":"2023-06-22 17:44:20.010131 UTC","module_path":"github.com/blacklightcms/recurly","version":"v2.0.0+incompatible","sort_version":"2,0,0~","commit_time":"2020-02-11 18:36:03 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/mock_test [synthetic/mock.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/blacklightcms/recurly@v2.0.0+incompatible/mock/example_test.go:12:1","message":"ExampleNewClient should be niladic","source":"\nfunc ExampleNewClient(t *testing.T) {\n\t// Test data."},{"package_id":"synthetic/mock_test [synthetic/mock.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/blacklightcms/recurly@v2.0.0+incompatible/mock/example_test.go:50:1","message":"ExampleNewClient_pager should be niladic","source":"\nfunc ExampleNewClient_pager(t *testing.T) {\n\t// Test data."},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/blacklightcms/recurly@v2.0.0+incompatible/doc_test.go:29:1","message":"Example_AccountsService_Create has malformed example suffix: AccountsService_Create","source":"\nfunc Example_AccountsService_Create() {\n\t_, err := client.Accounts.Create(context.Background(), recurly.Account{"}]}
{"created_at":"2023-06-22 17:35:12.343699 UTC","module_path":"github.com/fastwego/miniprogram","version":"v1.0.0-beta.4","sort_version":"1,0,0,~beta,4","commit_time":"2021-04-01 06:11:16 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/fastwego/miniprogram_test [github.com/fastwego/miniprogram.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fastwego/miniprogram@v1.0.0-beta.4/example_miniprogram_test.go:27:1","message":"ExampleMiniprogram_SetAccessTokenCacheDriver refers to unknown field or method: Miniprogram.SetAccessTokenCacheDriver","source":"\nfunc ExampleMiniprogram_SetAccessTokenCacheDriver() {\n\tvar App *miniprogram.Miniprogram"},{"package_id":"github.com/fastwego/miniprogram_test [github.com/fastwego/miniprogram.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fastwego/miniprogram@v1.0.0-beta.4/example_miniprogram_test.go:39:1","message":"ExampleMiniprogram_SetLogger refers to unknown field or method: Miniprogram.SetLogger","source":"\nfunc ExampleMiniprogram_SetLogger() {\n"},{"package_id":"github.com/fastwego/miniprogram_test [github.com/fastwego/miniprogram.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fastwego/miniprogram@v1.0.0-beta.4/example_miniprogram_test.go:54:1","message":"ExampleMiniprogram_SetGetAccessTokenHandler refers to unknown field or method: Miniprogram.SetGetAccessTokenHandler","source":"\nfunc ExampleMiniprogram_SetGetAccessTokenHandler() {\n\tvar Ctx *miniprogram.Miniprogram"}]}
{"created_at":"2023-06-22 17:29:09.308076 UTC","module_path":"github.com/husobee/vestigo","version":"v1.1.1","sort_version":"1,1,1~","commit_time":"2019-09-24 13:01:02 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/husobee/vestigo@v1.1.1/examples_test.go:12:1","message":"ExampleManyRoutes refers to unknown identifier: ManyRoutes","source":"\nfunc ExampleManyRoutes() {\n\t// new router"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/husobee/vestigo@v1.1.1/examples_test.go:39:1","message":"ExampleSimpleRoute refers to unknown identifier: SimpleRoute","source":"\nfunc ExampleSimpleRoute() {\n\t// new router"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/husobee/vestigo@v1.1.1/examples_test.go:58:1","message":"ExampleCorsRoute refers to unknown identifier: CorsRoute","source":"\nfunc ExampleCorsRoute() {\n\t// new router"}]}
{"created_at":"2023-06-22 17:53:59.013282 UTC","module_path":"github.com/shazow/ssh-chat","version":"v1.10.1","sort_version":"1,a10,1~","commit_time":"2020-11-11 20:44:24 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/shazow/ssh-chat [github.com/shazow/ssh-chat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/shazow/ssh-chat@v1.10.1/host_test.go:131:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tdone \u003c- struct{}{}\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/shazow/ssh-chat [github.com/shazow/ssh-chat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/shazow/ssh-chat@v1.10.1/host_test.go:261:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tclose(connected)\n\t\t\tt.Fatal(err)\n\t\t\tclose(done)"},{"package_id":"github.com/shazow/ssh-chat [github.com/shazow/ssh-chat.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/shazow/ssh-chat@v1.10.1/host_test.go:286:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tclose(done)\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:16:54.823522 UTC","module_path":"github.com/go-kit/kit","version":"v0.12.0","sort_version":"0,a12,0~","commit_time":"2021-09-18 19:40:17 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/go-kit/kit/transport/nats_test [github.com/go-kit/kit/transport/nats.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-kit/kit@v0.12.0/transport/nats/subscriber_test.go:215:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/go-kit/kit/transport/nats_test [github.com/go-kit/kit/transport/nats.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-kit/kit@v0.12.0/transport/nats/subscriber_test.go:273:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/go-kit/kit/transport/nats_test [github.com/go-kit/kit/transport/nats.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-kit/kit@v0.12.0/transport/nats/subscriber_test.go:325:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:53:54.443222 UTC","module_path":"github.com/krallistic/kazoo-go","version":"v0.0.0-20170526135507-a15279744f4e","sort_version":"0,0,0,~20170526135507-a15279744f4e","commit_time":"2017-05-26 13:55:07 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/krallistic/kazoo-go@v0.0.0-20170526135507-a15279744f4e/functional_consumergroup_test.go:462:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := instance1.ReleasePartition(\"test.4\", 0); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/krallistic/kazoo-go@v0.0.0-20170526135507-a15279744f4e/functional_consumergroup_test.go:575:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := cg2.ResetOffsets(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/krallistic/kazoo-go@v0.0.0-20170526135507-a15279744f4e/functional_consumergroup_test.go:581:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := cg.ResetOffsets(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:17:18.405601 UTC","module_path":"golang.org/x/text","version":"v0.10.0","sort_version":"0,a10,0~","commit_time":"2023-06-12 16:55:37 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"golang.org/x/text/collate_test [golang.org/x/text/collate.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/text@v0.10.0/collate/sort_test.go:15:1","message":"ExampleCollator_Strings refers to unknown field or method: Collator.Strings","source":"\nfunc ExampleCollator_Strings() {\n\tc := collate.New(language.Und)"},{"package_id":"golang.org/x/text/encoding_test [golang.org/x/text/encoding.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/text@v0.10.0/encoding/example_test.go:19:1","message":"ExampleDecodeWindows1252 refers to unknown identifier: DecodeWindows1252","source":"\nfunc ExampleDecodeWindows1252() {\n\tsr := strings.NewReader(\"Gar\\xe7on !\")"},{"package_id":"golang.org/x/text/feature/plural_test [golang.org/x/text/feature/plural.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/text@v0.10.0/feature/plural/example_test.go:13:1","message":"ExampleSelect refers to unknown identifier: Select","source":"\nfunc ExampleSelect() {\n\t// Manually set some translations. This is typically done programmatically."}]}
{"created_at":"2023-06-22 17:34:46.281131 UTC","module_path":"github.com/fiorix/go-diameter/v4","version":"v4.0.4","sort_version":"4,0,4~","commit_time":"2021-05-27 17:02:22 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/fiorix/go-diameter/v4/examples/s6a_proxy/service/test [github.com/fiorix/go-diameter/v4/examples/s6a_proxy/service/test.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fiorix/go-diameter/v4@v4.0.4/examples/s6a_proxy/service/test/s6a_proxy_test.go:55:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := s.Serve(lis); err != nil {\n\t\t\tt.Fatalf(\"failed to serve: %v\", err)\n\t\t\treturn"},{"package_id":"github.com/fiorix/go-diameter/v4/examples/s6a_proxy/service/test [github.com/fiorix/go-diameter/v4/examples/s6a_proxy/service/test.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fiorix/go-diameter/v4@v4.0.4/examples/s6a_proxy/service/test/s6a_proxy_test.go:115:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t}\n\tgo testLoopF(-1)\n"},{"package_id":"github.com/fiorix/go-diameter/v4/examples/s6a_proxy/service/test [github.com/fiorix/go-diameter/v4/examples/s6a_proxy/service/test.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fiorix/go-diameter/v4@v4.0.4/examples/s6a_proxy/service/test/s6a_proxy_test.go:130:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tfor round := 0; round \u003c TEST_LOOPS; round++ {\n\t\tgo testLoopF(round)\n\t}"}]}
{"created_at":"2023-06-22 17:24:20.384211 UTC","module_path":"github.com/rlmcpherson/s3gof3r","version":"v0.5.0","sort_version":"0,5,0~","commit_time":"2015-11-10 01:46:08 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rlmcpherson/s3gof3r@v0.5.0/s3gof3r_test.go:308:1","message":"ExampleBucket_PutWriter should return nothing","source":"\nfunc ExampleBucket_PutWriter() error {\n\tk, err := EnvKeys() // get S3 keys from environment"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rlmcpherson/s3gof3r@v0.5.0/s3gof3r_test.go:337:1","message":"ExampleBucket_GetReader should return nothing","source":"\nfunc ExampleBucket_GetReader() error {\n\tk, err := EnvKeys() // get S3 keys from environment"},{"package_id":"synthetic/gof3r [synthetic/gof3r.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rlmcpherson/s3gof3r@v0.5.0/gof3r/cp_test.go:68:1","message":"TestcpOptsExecute has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestcpOptsExecute(t *testing.T) {\n"}]}
{"created_at":"2023-06-22 17:48:49.959802 UTC","module_path":"github.com/cristalhq/jwt/v4","version":"v4.0.2","sort_version":"4,0,2~","commit_time":"2022-06-24 08:34:46 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/cristalhq/jwt/v4_test [github.com/cristalhq/jwt/v4.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cristalhq/jwt/v4@v4.0.2/example_test.go:11:1","message":"ExampleSignAndVerify refers to unknown identifier: SignAndVerify","source":"\nfunc ExampleSignAndVerify() {\n\t// create a Signer (HMAC in this example)"},{"package_id":"github.com/cristalhq/jwt/v4_test [github.com/cristalhq/jwt/v4.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cristalhq/jwt/v4@v4.0.2/example_test.go:66:1","message":"ExampleBuild refers to unknown identifier: Build","source":"\nfunc ExampleBuild() {\n\tkey := []byte(`secret`)"},{"package_id":"github.com/cristalhq/jwt/v4_test [github.com/cristalhq/jwt/v4.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cristalhq/jwt/v4@v4.0.2/example_test.go:106:1","message":"ExampleBuild_WithUserClaims refers to unknown identifier: Build","source":"\nfunc ExampleBuild_WithUserClaims() {\n\tkey := []byte(`secret`)"}]}
{"created_at":"2023-06-22 17:31:57.106324 UTC","module_path":"github.com/asteris-llc/converge","version":"v0.0.0-20201110153056-02c76fbfe84d","sort_version":"0,0,0,~20201110153056-02c76fbfe84d","commit_time":"2020-11-10 15:30:56 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/prettyprinters_test [synthetic/prettyprinters.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/asteris-llc/converge@v0.0.0-20201110153056-02c76fbfe84d/prettyprinters/prettyprinter_test.go:36:2","message":"output comment block must be the last comment block","source":"\n\t// Output:\n\t// digraph {"},{"package_id":"synthetic/prettyprinters_test [synthetic/prettyprinters.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/asteris-llc/converge@v0.0.0-20201110153056-02c76fbfe84d/prettyprinters/prettyprinter_test.go:54:2","message":"output comment block must be the last comment block","source":"\n\t// Output:\n\t// digraph {"},{"package_id":"synthetic/prettyprinters_test [synthetic/prettyprinters.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/asteris-llc/converge@v0.0.0-20201110153056-02c76fbfe84d/prettyprinters/prettyprinter_test.go:135:2","message":"output comment block must be the last comment block","source":"\n\t// Output:\n\t// digraph {"}]}
{"created_at":"2023-06-22 17:36:45.093495 UTC","module_path":"github.com/ergo-services/ergo","version":"v1.999.224","sort_version":"1,b999,b224~","commit_time":"2023-05-01 09:05:35 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/ergo-services/ergo/lib [github.com/ergo-services/ergo/lib.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ergo-services/ergo@v1.999.224/lib/mpsc_test.go:101:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif queue.Push(v) == false {\n\t\t\t\tt.Fatal(\"can't push value into the queue\")\n\t\t\t}"},{"package_id":"github.com/ergo-services/ergo/tests [github.com/ergo-services/ergo/tests.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ergo-services/ergo@v1.999.224/tests/server_test.go:397:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\twg.Add(1)\n\t\tgo direct()\n\t}"},{"package_id":"github.com/ergo-services/ergo/tests [github.com/ergo-services/ergo/tests.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ergo-services/ergo@v1.999.224/tests/server_test.go:397:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\twg.Add(1)\n\t\tgo direct()\n\t}"}]}
{"created_at":"2023-06-22 17:36:16.847845 UTC","module_path":"git.cs.nctu.edu.tw/calee/sctp","version":"v1.1.0","sort_version":"1,1,0~","commit_time":"2020-11-02 07:16:59 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"git.cs.nctu.edu.tw/calee/sctp [git.cs.nctu.edu.tw/calee/sctp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/git.cs.nctu.edu.tw/calee/sctp@v1.1.0/sctp_streams_test.go:145:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif rtext != text {\n\t\t\t\t\tt.Fatalf(\"Mismatched payload: %s != %s\", rtext, text)\n\t\t\t\t}"},{"package_id":"git.cs.nctu.edu.tw/calee/sctp [git.cs.nctu.edu.tw/calee/sctp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/git.cs.nctu.edu.tw/calee/sctp@v1.1.0/sctp_test.go:183:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif xerr != nil {\n\t\t\tt.Fatal(xerr)\n\t\t}"},{"package_id":"git.cs.nctu.edu.tw/calee/sctp [git.cs.nctu.edu.tw/calee/sctp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/git.cs.nctu.edu.tw/calee/sctp@v1.1.0/sctp_test.go:190:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif xerr != io.EOF \u0026\u0026 xerr != syscall.EBADF {\n\t\t\tt.Fatalf(\"read failed: %v\", xerr)\n\t\t}"}]}
{"created_at":"2023-06-22 17:37:58.029096 UTC","module_path":"github.com/enceve/crypto","version":"v0.0.0-20160707101852-34d48bb93815","sort_version":"0,0,0,~20160707101852-34d48bb93815","commit_time":"2016-07-07 10:18:52 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/dh [synthetic/dh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/enceve/crypto@v0.0.0-20160707101852-34d48bb93815/dh/dh_test.go:13:1","message":"ExampleKeyExchange refers to unknown identifier: KeyExchange","source":"// A Diffie-Hellman exchange example.\nfunc ExampleKeyExchange() {\n\t// using 2048 bit group"},{"package_id":"synthetic/dh/ecdh [synthetic/dh/ecdh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/enceve/crypto@v0.0.0-20160707101852-34d48bb93815/dh/ecdh/ecdh_test.go:15:1","message":"ExampleGenericKeyExchange refers to unknown identifier: GenericKeyExchange","source":"// An example for the ECDH key-exchange using the curve P256.\nfunc ExampleGenericKeyExchange() {\n\tp256 := GenericCurve(elliptic.P256())"},{"package_id":"synthetic/dh/ecdh [synthetic/dh/ecdh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/enceve/crypto@v0.0.0-20160707101852-34d48bb93815/dh/ecdh/ecdh_test.go:47:1","message":"ExampleCurve25519KeyExchange refers to unknown identifier: Curve25519KeyExchange","source":"// An example for the ECDH key-exchange using Curve25519.\nfunc ExampleCurve25519KeyExchange() {\n\tc25519 := Curve25519()"}]}
{"created_at":"2023-06-22 17:33:00.296392 UTC","module_path":"github.com/lionkov/go9p","version":"v0.0.0-20190125202718-b4200817c487","sort_version":"0,0,0,~20190125202718-b4200817c487","commit_time":"2019-01-25 20:27:18 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/p/clnt [synthetic/p/clnt.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lionkov/go9p@v0.0.0-20190125202718-b4200817c487/p/clnt/9p_test.go:46:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err = ufs.StartListener(l); err != nil {\n\t\t\tt.Fatalf(\"Can not start listener: %v\", err)\n\t\t}"},{"package_id":"synthetic/p/clnt [synthetic/p/clnt.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lionkov/go9p@v0.0.0-20190125202718-b4200817c487/p/clnt/9p_test.go:98:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err = ufs.StartListener(l); err != nil {\n\t\t\tt.Fatalf(\"Can not start listener: %v\", err)\n\t\t}"},{"package_id":"synthetic/p/clnt [synthetic/p/clnt.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lionkov/go9p@v0.0.0-20190125202718-b4200817c487/p/clnt/9p_test.go:254:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err = ufs.StartListener(l); err != nil {\n\t\t\tt.Fatalf(\"Can not start listener: %v\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:27:59.745807 UTC","module_path":"gitlab.com/NebulousLabs/threadgroup","version":"v0.0.0-20200608151952-38921fbef213","sort_version":"0,0,0,~20200608151952-38921fbef213","commit_time":"2020-06-08 15:19:52 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"gitlab.com/NebulousLabs/threadgroup [gitlab.com/NebulousLabs/threadgroup.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/NebulousLabs/threadgroup@v0.0.0-20200608151952-38921fbef213/threadgroup_test.go:921:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"gitlab.com/NebulousLabs/threadgroup [gitlab.com/NebulousLabs/threadgroup.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/NebulousLabs/threadgroup@v0.0.0-20200608151952-38921fbef213/threadgroup_test.go:935:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err == nil {\n\t\t\t\tt.Fatal(\"OnStop should return an error when being called after stop\")\n\t\t\t}"},{"package_id":"gitlab.com/NebulousLabs/threadgroup [gitlab.com/NebulousLabs/threadgroup.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/NebulousLabs/threadgroup@v0.0.0-20200608151952-38921fbef213/threadgroup_test.go:942:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err == nil {\n\t\t\t\tt.Fatal(\"AfterStop should return an error when being called after stop\")\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:49:01.40922 UTC","module_path":"github.com/TRON-US/go-mfs","version":"v0.3.1","sort_version":"0,3,1~","commit_time":"2020-08-27 07:04:46 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/TRON-US/go-mfs [github.com/TRON-US/go-mfs.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/TRON-US/go-mfs@v0.3.1/mfs_test.go:1174:8","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\t\tif lastSeen \u003e 0 {\n\t\t\t\t\t\t\tt.Fatalf(\"file corrupted, last seen: %d\", lastSeen)\n\t\t\t\t\t\t}"},{"package_id":"github.com/TRON-US/go-mfs [github.com/TRON-US/go-mfs.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/TRON-US/go-mfs@v0.3.1/mfs_test.go:1178:7","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t\t} else if len(buf) != 8 {\n\t\t\t\t\t\tt.Fatal(\"buf not the right size\")\n\t\t\t\t\t}"},{"package_id":"github.com/TRON-US/go-mfs [github.com/TRON-US/go-mfs.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/TRON-US/go-mfs@v0.3.1/mfs_test.go:1183:7","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\tif num \u003c lastSeen {\n\t\t\t\t\t\tt.Fatalf(\"count decreased: was %d, is %d\", lastSeen, num)\n\t\t\t\t\t} else {"}]}
{"created_at":"2023-06-22 17:16:18.294403 UTC","module_path":"github.com/garyburd/redigo","version":"v1.6.4","sort_version":"1,6,4~","commit_time":"2022-08-31 18:07:03 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/garyburd/redigo/redisx_test [github.com/garyburd/redigo/redisx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/garyburd/redigo@v1.6.4/redisx/connmux_test.go:177:6","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\t\t\tif _, err := c.Do(\"PING\"); err != nil {\n\t\t\t\t\tb.Fatal(err)\n\t\t\t\t}"},{"package_id":"github.com/garyburd/redigo/redisx_test [github.com/garyburd/redigo/redisx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/garyburd/redigo@v1.6.4/redisx/connmux_test.go:216:6","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\t\t\tif _, err := c.Do(\"PING\"); err != nil {\n\t\t\t\t\tb.Fatal(err)\n\t\t\t\t}"},{"package_id":"github.com/garyburd/redigo/redisx_test [github.com/garyburd/redigo/redisx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/garyburd/redigo@v1.6.4/redisx/connmux_test.go:252:6","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tb.Fatal(err)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:47:15.419129 UTC","module_path":"github.com/ystia/yorc/v4","version":"v4.3.0","sort_version":"4,3,0~","commit_time":"2022-03-11 11:58:13 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/ystia/yorc/v4/prov/kubernetes [github.com/ystia/yorc/v4/prov/kubernetes.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ystia/yorc/v4@v4.3.0/prov/kubernetes/execution_test.go:338:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tcase \u003c-errorChan:\n\t\t\t\tt.Fatal(\"fatal\")\n\t\t\tcase \u003c-okChan:"},{"package_id":"github.com/ystia/yorc/v4/prov/kubernetes [github.com/ystia/yorc/v4/prov/kubernetes.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ystia/yorc/v4@v4.3.0/prov/kubernetes/execution_test.go:398:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tcase \u003c-errorChan:\n\t\t\t\tt.Fatal(\"fatal\")\n\t\t\tcase \u003c-okChan:"},{"package_id":"github.com/ystia/yorc/v4/prov/kubernetes [github.com/ystia/yorc/v4/prov/kubernetes.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ystia/yorc/v4@v4.3.0/prov/kubernetes/execution_test.go:454:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tcase \u003c-errorChan:\n\t\t\t\tt.Fatal(\"fatal\")\n\t\t\tcase \u003c-okChan:"}]}
{"created_at":"2023-06-22 17:36:58.217129 UTC","module_path":"sigs.k8s.io/kpng/api","version":"v0.0.0-20230526124626-8a78a86a9e45","sort_version":"0,0,0,~20230526124626-8a78a86a9e45","commit_time":"2023-05-26 12:46:26 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"sigs.k8s.io/kpng/api/localv1 [sigs.k8s.io/kpng/api/localv1.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/sigs.k8s.io/kpng/api@v0.0.0-20230526124626-8a78a86a9e45/localv1/endpoint_test.go:21:1","message":"ExampleEndpointPortMapping refers to unknown identifier: EndpointPortMapping","source":"\nfunc ExampleEndpointPortMapping() {\n\tports := []*PortMapping{"},{"package_id":"sigs.k8s.io/kpng/api/localv1 [sigs.k8s.io/kpng/api/localv1.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/sigs.k8s.io/kpng/api@v0.0.0-20230526124626-8a78a86a9e45/localv1/ipset_test.go:48:1","message":"ExampleIPSetAdd refers to unknown identifier: IPSetAdd","source":"\nfunc ExampleIPSetAdd() {\n\ts := \u0026IPSet{}"},{"package_id":"sigs.k8s.io/kpng/api/localv1 [sigs.k8s.io/kpng/api/localv1.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/sigs.k8s.io/kpng/api@v0.0.0-20230526124626-8a78a86a9e45/localv1/ipset_test.go:71:1","message":"ExampleIPSetDiff refers to unknown identifier: IPSetDiff","source":"\nfunc ExampleIPSetDiff() {\n\ts1 := \u0026IPSet{"}]}
{"created_at":"2023-06-22 17:55:44.601795 UTC","module_path":"github.com/gol4ng/logger","version":"v0.5.11","sort_version":"0,5,a11~","commit_time":"2023-02-27 17:30:58 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/gol4ng/logger/formatter_test [github.com/gol4ng/logger/formatter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gol4ng/logger@v0.5.11/formatter/json_test.go:93:1","message":"ExampleJsonFormatter refers to unknown identifier: JsonFormatter","source":"\nfunc ExampleJsonFormatter() {\n\tjsonFormatter := formatter.NewJSONEncoder()"},{"package_id":"github.com/gol4ng/logger/formatter_test [github.com/gol4ng/logger/formatter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gol4ng/logger@v0.5.11/formatter/line_test.go:48:1","message":"ExampleLineFormatter refers to unknown identifier: LineFormatter","source":"\nfunc ExampleLineFormatter() {\n\tlineFormatter := formatter.NewLine(\"%s %s %s\")"},{"package_id":"github.com/gol4ng/logger/middleware_test [github.com/gol4ng/logger/middleware.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gol4ng/logger@v0.5.11/middleware/filter_test.go:236:1","message":"ExampleCustomFilter refers to unknown identifier: CustomFilter","source":"\nfunc ExampleCustomFilter() {\n\tstreamHandler := handler.Stream(os.Stdout, formatter.NewDefaultFormatter())"}]}
{"created_at":"2023-06-22 17:33:30.712157 UTC","module_path":"github.com/Finschia/finschia-sdk","version":"v0.47.0","sort_version":"0,a47,0~","commit_time":"2023-04-25 04:19:51 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/Finschia/finschia-sdk/crypto/hd_test [github.com/Finschia/finschia-sdk/crypto/hd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Finschia/finschia-sdk@v0.47.0/crypto/hd/hdpath_test.go:188:1","message":"ExampleStringifyPathParams refers to unknown identifier: StringifyPathParams","source":"\nfunc ExampleStringifyPathParams() {\n\tpath := hd.NewParams(44, 0, 0, false, 0)"},{"package_id":"github.com/Finschia/finschia-sdk/crypto/hd_test [github.com/Finschia/finschia-sdk/crypto/hd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Finschia/finschia-sdk@v0.47.0/crypto/hd/hdpath_test.go:198:1","message":"ExampleSomeBIP32TestVecs refers to unknown identifier: SomeBIP32TestVecs","source":"\nfunc ExampleSomeBIP32TestVecs() {\n\tseed := mnemonicToSeed(\"barrel original fuel morning among eternal \" +"},{"package_id":"github.com/Finschia/finschia-sdk/crypto/ledger [github.com/Finschia/finschia-sdk/crypto/ledger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Finschia/finschia-sdk@v0.47.0/crypto/ledger/encode_test.go:32:1","message":"ExamplePrintRegisteredTypes refers to unknown identifier: PrintRegisteredTypes","source":"// nolint: govet\nfunc ExamplePrintRegisteredTypes() {\n\tcdc.PrintTypes(os.Stdout)"}]}
{"created_at":"2023-06-22 17:36:29.59347 UTC","module_path":"github.com/RediSearch/redisearch-go","version":"v1.1.1","sort_version":"1,1,1~","commit_time":"2021-04-22 14:44:14 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/RediSearch/redisearch-go/redisearch_test [github.com/RediSearch/redisearch-go/redisearch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/RediSearch/redisearch-go@v1.1.1/redisearch/example_client_test.go:60:2","message":"output comment block must be the last comment block","source":"\tfmt.Println(docs[0].Id, docs[0].Properties[\"title\"], total, err)\n\t// Output: ExampleNewClient:doc1 Hello world 1 \u003cnil\u003e\n"},{"package_id":"github.com/RediSearch/redisearch-go/redisearch_test [github.com/RediSearch/redisearch-go/redisearch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/RediSearch/redisearch-go@v1.1.1/redisearch/example_client_test.go:198:2","message":"output comment block must be the last comment block","source":"\tfmt.Println(docs[0].Id, docs[0].Properties[\"title\"], total, err)\n\t// Output: ExampleNewClientFromPool:doc2 Hello world 1 \u003cnil\u003e\n"},{"package_id":"github.com/RediSearch/redisearch-go/redisearch_test [github.com/RediSearch/redisearch-go/redisearch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/RediSearch/redisearch-go@v1.1.1/redisearch/example_schema_test.go:13:1","message":"ExampleCreateIndex_temporary refers to unknown identifier: CreateIndex","source":"// exemplifies the CreateIndex function with a temporary index specification\nfunc ExampleCreateIndex_temporary() {\n\t// Create a client. By default a client is schemaless"}]}
{"created_at":"2023-06-22 17:20:16.848537 UTC","module_path":"github.com/cosmos/cosmos-sdk","version":"v0.47.3","sort_version":"0,a47,3~","commit_time":"2023-06-08 16:04:36 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/cosmos/cosmos-sdk/crypto/hd_test [github.com/cosmos/cosmos-sdk/crypto/hd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cosmos/cosmos-sdk@v0.47.3/crypto/hd/hdpath_test.go:188:1","message":"ExampleStringifyPathParams refers to unknown identifier: StringifyPathParams","source":"\nfunc ExampleStringifyPathParams() {\n\tpath := hd.NewParams(44, 0, 0, false, 0)"},{"package_id":"github.com/cosmos/cosmos-sdk/crypto/hd_test [github.com/cosmos/cosmos-sdk/crypto/hd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cosmos/cosmos-sdk@v0.47.3/crypto/hd/hdpath_test.go:198:1","message":"ExampleSomeBIP32TestVecs refers to unknown identifier: SomeBIP32TestVecs","source":"\nfunc ExampleSomeBIP32TestVecs() {\n\tseed := mnemonicToSeed(\"barrel original fuel morning among eternal \" +"},{"package_id":"github.com/cosmos/cosmos-sdk/crypto/ledger [github.com/cosmos/cosmos-sdk/crypto/ledger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cosmos/cosmos-sdk@v0.47.3/crypto/ledger/encode_test.go:32:1","message":"ExamplePrintRegisteredTypes refers to unknown identifier: PrintRegisteredTypes","source":"// nolint: govet\nfunc ExamplePrintRegisteredTypes() {\n\t_ = cdc.PrintTypes(os.Stdout)"}]}
{"created_at":"2023-06-22 17:20:39.803489 UTC","module_path":"github.com/shirou/gopsutil/v3","version":"v3.23.5","sort_version":"3,a23,5~","commit_time":"2023-05-29 13:56:32 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/shirou/gopsutil/v3/net [github.com/shirou/gopsutil/v3/net.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/shirou/gopsutil/v3@v3.23.5/net/net_linux_test.go:86:4","message":"call to (*T).Skipf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Skipf(\"unable to resolve localhost: %v\", err)\n\t\t}"},{"package_id":"github.com/shirou/gopsutil/v3/net [github.com/shirou/gopsutil/v3/net.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/shirou/gopsutil/v3@v3.23.5/net/net_linux_test.go:90:4","message":"call to (*T).Skipf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Skipf(\"unable to listen on %v: %v\", addr, err)\n\t\t}"},{"package_id":"github.com/shirou/gopsutil/v3/net [github.com/shirou/gopsutil/v3/net.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/shirou/gopsutil/v3@v3.23.5/net/net_linux_test.go:97:5","message":"call to (*T).Skipf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Skipf(\"unable to accept connection: %v\", err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:48:25.671716 UTC","module_path":"github.com/dgryski/carbonzipper","version":"v0.0.0-20191211140943-b9a9d1881aed","sort_version":"0,0,0,~20191211140943-b9a9d1881aed","commit_time":"2019-12-11 14:09:43 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/zipper/broadcast [synthetic/zipper/broadcast.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dgryski/carbonzipper@v0.0.0-20191211140943-b9a9d1881aed/zipper/broadcast/broadcast_group_test.go:1364:9","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tt.Fatalf(\"result is not nil, but should be: %+v\", res)\n\t\t\t\t\t\t\t}"},{"package_id":"synthetic/zipper/broadcast [synthetic/zipper/broadcast.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dgryski/carbonzipper@v0.0.0-20191211140943-b9a9d1881aed/zipper/broadcast/broadcast_group_test.go:1369:8","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t\t\tif res == nil {\n\t\t\t\t\t\t\tt.Fatal(\"result is nil\")\n\t\t\t\t\t\t}"},{"package_id":"synthetic/zipper/broadcast [synthetic/zipper/broadcast.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dgryski/carbonzipper@v0.0.0-20191211140943-b9a9d1881aed/zipper/broadcast/broadcast_group_test.go:1378:8","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\t\tif len(res.Metrics) != len(tt.testCase.expectedResponse.Metrics) {\n\t\t\t\t\t\t\tt.Fatalf(\"different amount of responses %v, expected %v\", res, tt.testCase.expectedResponse)\n\t\t\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:48:26.175843 UTC","module_path":"github.com/wzzhu/tensor","version":"v0.9.24","sort_version":"0,9,a24~","commit_time":"2022-07-14 03:35:12 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/wzzhu/tensor [github.com/wzzhu/tensor.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wzzhu/tensor@v0.9.24/example_dense_arith_test.go:2174:2","message":"output comment block must be the last comment block","source":"\n\t// Output:\n\t// Default operation is safe (tensor is left operand)"},{"package_id":"github.com/wzzhu/tensor [github.com/wzzhu/tensor.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wzzhu/tensor@v0.9.24/example_iterator_test.go:54:1","message":"ExampleSliceIter refers to unknown identifier: SliceIter","source":"\nfunc ExampleSliceIter() {\n\tT := New(WithShape(3, 3), WithBacking(Range(Float64, 0, 9)))"},{"package_id":"github.com/wzzhu/tensor_test [github.com/wzzhu/tensor.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wzzhu/tensor@v0.9.24/example_dense_compat_test.go:11:1","message":"ExampleDense_Arrow refers to unknown field or method: Dense.Arrow","source":"\nfunc ExampleDense_Arrow() {\n\tpool := memory.NewGoAllocator()"}]}
{"created_at":"2023-06-22 17:35:56.063779 UTC","module_path":"github.com/TuftsBCB/io","version":"v0.0.0-20140121014543-22b94e9b23f9","sort_version":"0,0,0,~20140121014543-22b94e9b23f9","commit_time":"2014-01-21 01:45:43 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/hmm [synthetic/hmm.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/TuftsBCB/io@v0.0.0-20140121014543-22b94e9b23f9/hmm/hmm_viterbi_test.go:11:1","message":"ExampleViterbiScore refers to unknown identifier: ViterbiScore","source":"\nfunc ExampleViterbiScore() {\n\tquery := \"IVEGQDAEVGLSPWQVMLFRKSPQELLCGASLISDRWVLTAAHCLLYPPWDKNFTVDDLLVR\" +"},{"package_id":"synthetic/pdb [synthetic/pdb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/TuftsBCB/io@v0.0.0-20140121014543-22b94e9b23f9/pdb/pdb_test.go:137:1","message":"ExampleSeqresCas refers to unknown identifier: SeqresCas","source":"\nfunc ExampleSeqresCas() {\n\tentry := readPDB()"},{"package_id":"synthetic/pdb [synthetic/pdb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/TuftsBCB/io@v0.0.0-20140121014543-22b94e9b23f9/pdb/pdb_test.go:148:1","message":"ExampleMissingResidues refers to unknown identifier: MissingResidues","source":"\nfunc ExampleMissingResidues() {\n\tentry := readPDB()"}]}
{"created_at":"2023-06-22 17:56:27.244607 UTC","module_path":"github.com/fastwego/offiaccount","version":"v1.0.1","sort_version":"1,0,1~","commit_time":"2022-03-01 03:46:32 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/fastwego/offiaccount_test [github.com/fastwego/offiaccount.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fastwego/offiaccount@v1.0.1/example_offiaccount_test.go:27:1","message":"ExampleOffiAccount_SetAccessTokenCacheDriver refers to unknown field or method: OffiAccount.SetAccessTokenCacheDriver","source":"\nfunc ExampleOffiAccount_SetAccessTokenCacheDriver() {\n\tvar App *offiaccount.OffiAccount"},{"package_id":"github.com/fastwego/offiaccount_test [github.com/fastwego/offiaccount.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fastwego/offiaccount@v1.0.1/example_offiaccount_test.go:39:1","message":"ExampleOffiAccount_SetLogger refers to unknown field or method: OffiAccount.SetLogger","source":"\nfunc ExampleOffiAccount_SetLogger() {\n"},{"package_id":"github.com/fastwego/offiaccount_test [github.com/fastwego/offiaccount.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fastwego/offiaccount@v1.0.1/example_offiaccount_test.go:54:1","message":"ExampleOffiAccount_SetGetAccessTokenHandler refers to unknown field or method: OffiAccount.SetGetAccessTokenHandler","source":"\nfunc ExampleOffiAccount_SetGetAccessTokenHandler() {\n\tvar Ctx *offiaccount.OffiAccount"}]}
{"created_at":"2023-06-22 17:55:52.635185 UTC","module_path":"github.com/ivahaev/go-logger","version":"v0.0.0-20170811130205-2337f7021abc","sort_version":"0,0,0,~20170811130205-2337f7021abc","commit_time":"2017-08-11 13:02:05 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ivahaev/go-logger@v0.0.0-20170811130205-2337f7021abc/logger-example_test.go:19:1","message":"ExampleInfoLowLevel refers to unknown identifier: InfoLowLevel","source":"\nfunc ExampleInfoLowLevel() {\n\tlogger.SetLevel(\"NOTICE\")"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ivahaev/go-logger@v0.0.0-20170811130205-2337f7021abc/logger-example_test.go:28:1","message":"ExampleInfoF refers to unknown identifier: InfoF","source":"\nfunc ExampleInfoF() {\n\tlogger.SetTimeFormat(\"dummy-time\")"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ivahaev/go-logger@v0.0.0-20170811130205-2337f7021abc/logger-example_test.go:41:1","message":"ExampleInfoFMultipleArguments refers to unknown identifier: InfoFMultipleArguments","source":"\nfunc ExampleInfoFMultipleArguments() {\n\tlogger.SetTimeFormat(\"dummy-time\")"}]}
{"created_at":"2023-06-22 17:19:08.917989 UTC","module_path":"github.com/stellar/go","version":"v0.0.0-20230622154222-34484c630230","sort_version":"0,0,0,~20230622154222-34484c630230","commit_time":"2023-06-22 15:42:22 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/stellar/go/exp/crypto/derivation [github.com/stellar/go/exp/crypto/derivation.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stellar/go@v0.0.0-20230622154222-34484c630230/exp/crypto/derivation/main_test.go:12:1","message":"ExampleDeriveFromPath refers to unknown identifier: DeriveFromPath","source":"\nfunc ExampleDeriveFromPath() {\n\tseed, _ := hex.DecodeString(\"000102030405060708090a0b0c0d0e0f\")"},{"package_id":"github.com/stellar/go/exp/crypto/derivation [github.com/stellar/go/exp/crypto/derivation.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stellar/go@v0.0.0-20230622154222-34484c630230/exp/crypto/derivation/main_test.go:32:1","message":"ExampleDeriveMultipleKeys refers to unknown identifier: DeriveMultipleKeys","source":"\nfunc ExampleDeriveMultipleKeys() {\n\tseed, _ := hex.DecodeString(\"000102030405060708090a0b0c0d0e0f\")"},{"package_id":"github.com/stellar/go/exp/crypto/derivation [github.com/stellar/go/exp/crypto/derivation.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stellar/go@v0.0.0-20230622154222-34484c630230/exp/crypto/derivation/main_test.go:63:1","message":"ExampleDeriveMultipleKeysFaster refers to unknown identifier: DeriveMultipleKeysFaster","source":"\nfunc ExampleDeriveMultipleKeysFaster() {\n\tseed, _ := hex.DecodeString(\"000102030405060708090a0b0c0d0e0f\")"}]}
{"created_at":"2023-06-22 17:31:13.645381 UTC","module_path":"github.com/wallix/triplestore","version":"v0.0.0-20180213143850-4099dd913851","sort_version":"0,0,0,~20180213143850-4099dd913851","commit_time":"2018-02-13 14:38:50 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wallix/triplestore@v0.0.0-20180213143850-4099dd913851/streamcodec_test.go:30:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif r.Err != nil {\n\t\t\t\t\tt.Fatal(r.Err)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wallix/triplestore@v0.0.0-20180213143850-4099dd913851/streamcodec_test.go:89:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif r.Err != nil {\n\t\t\t\t\tt.Fatal(r.Err)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wallix/triplestore@v0.0.0-20180213143850-4099dd913851/streamcodec_test.go:148:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err := enc.StreamEncode(ctx, c); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:23:01.900053 UTC","module_path":"github.com/wvanbergen/kazoo-go","version":"v0.0.0-20180202103751-f72d8611297a","sort_version":"0,0,0,~20180202103751-f72d8611297a","commit_time":"2018-02-02 10:37:51 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wvanbergen/kazoo-go@v0.0.0-20180202103751-f72d8611297a/functional_consumergroup_test.go:536:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := instance1.ReleasePartition(\"test.4\", 0); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wvanbergen/kazoo-go@v0.0.0-20180202103751-f72d8611297a/functional_consumergroup_test.go:649:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := cg2.ResetOffsets(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wvanbergen/kazoo-go@v0.0.0-20180202103751-f72d8611297a/functional_consumergroup_test.go:655:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := cg.ResetOffsets(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:38:31.801939 UTC","module_path":"github.com/deejross/go-snmplib","version":"v0.0.0-20190126151901-0ff3fc321a43","sort_version":"0,0,0,~20190126151901-0ff3fc321a43","commit_time":"2019-01-26 15:19:01 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/deejross/go-snmplib@v0.0.0-20190126151901-0ff3fc321a43/snmp_test.go:11:1","message":"ExampleGetTable refers to unknown identifier: GetTable","source":"\nfunc ExampleGetTable() {\n\ttarget := \"some_host\""},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/deejross/go-snmplib@v0.0.0-20190126151901-0ff3fc321a43/snmp_test.go:36:1","message":"ExampleGetBulk refers to unknown identifier: GetBulk","source":"\nfunc ExampleGetBulk() {\n\ttarget := \"some_host\""},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/deejross/go-snmplib@v0.0.0-20190126151901-0ff3fc321a43/snmp_test.go:74:1","message":"ExampleGet refers to unknown identifier: Get","source":"\nfunc ExampleGet() {\n\ttarget := \"some_host\""}]}
{"created_at":"2023-06-22 17:38:32.819897 UTC","module_path":"github.com/go-enjin/golang-org-x-text","version":"v0.0.0-20230219204830-4f2b7b481f16","sort_version":"0,0,0,~20230219204830-4f2b7b481f16","commit_time":"2023-02-19 20:48:30 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/go-enjin/golang-org-x-text/collate_test [github.com/go-enjin/golang-org-x-text/collate.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-enjin/golang-org-x-text@v0.0.0-20230219204830-4f2b7b481f16/collate/sort_test.go:15:1","message":"ExampleCollator_Strings refers to unknown field or method: Collator.Strings","source":"\nfunc ExampleCollator_Strings() {\n\tc := collate.New(language.Und)"},{"package_id":"github.com/go-enjin/golang-org-x-text/encoding_test [github.com/go-enjin/golang-org-x-text/encoding.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-enjin/golang-org-x-text@v0.0.0-20230219204830-4f2b7b481f16/encoding/example_test.go:19:1","message":"ExampleDecodeWindows1252 refers to unknown identifier: DecodeWindows1252","source":"\nfunc ExampleDecodeWindows1252() {\n\tsr := strings.NewReader(\"Gar\\xe7on !\")"},{"package_id":"github.com/go-enjin/golang-org-x-text/feature/plural_test [github.com/go-enjin/golang-org-x-text/feature/plural.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-enjin/golang-org-x-text@v0.0.0-20230219204830-4f2b7b481f16/feature/plural/example_test.go:13:1","message":"ExampleSelect refers to unknown identifier: Select","source":"\nfunc ExampleSelect() {\n\t// Manually set some translations. This is typically done programmatically."}]}
{"created_at":"2023-06-22 17:35:52.129617 UTC","module_path":"github.com/okxtuta/go-anatha","version":"v0.0.0-20220218110950-e6862d63954d","sort_version":"0,0,0,~20220218110950-e6862d63954d","commit_time":"2022-02-18 11:09:50 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/okxtuta/go-anatha/crypto [github.com/okxtuta/go-anatha/crypto.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/okxtuta/go-anatha@v0.0.0-20220218110950-e6862d63954d/crypto/encode_test.go:51:1","message":"ExamplePrintRegisteredTypes refers to unknown identifier: PrintRegisteredTypes","source":"// nolint: govet\nfunc ExamplePrintRegisteredTypes() {\n\tcdc.PrintTypes(os.Stdout)"},{"package_id":"github.com/okxtuta/go-anatha/crypto/keys/hd [github.com/okxtuta/go-anatha/crypto/keys/hd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/okxtuta/go-anatha@v0.0.0-20220218110950-e6862d63954d/crypto/keys/hd/hdpath_test.go:23:1","message":"ExampleStringifyPathParams refers to unknown identifier: StringifyPathParams","source":"// nolint:govet\nfunc ExampleStringifyPathParams() {\n\tpath := NewParams(44, 0, 0, false, 0)"},{"package_id":"github.com/okxtuta/go-anatha/crypto/keys/hd [github.com/okxtuta/go-anatha/crypto/keys/hd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/okxtuta/go-anatha@v0.0.0-20220218110950-e6862d63954d/crypto/keys/hd/hdpath_test.go:105:1","message":"ExampleSomeBIP32TestVecs refers to unknown identifier: SomeBIP32TestVecs","source":"// nolint:govet\nfunc ExampleSomeBIP32TestVecs() {\n"}]}
{"created_at":"2023-06-22 17:20:22.164063 UTC","module_path":"github.com/unknwon/com","version":"v1.0.1","sort_version":"1,0,1~","commit_time":"2019-08-04 04:29:17 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/unknwon/com_test [github.com/unknwon/com.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/unknwon/com@v1.0.1/example_test.go:157:1","message":"ExampleHttpGet should return nothing","source":"\nfunc ExampleHttpGet() ([]byte, error) {\n\trc, err := com.HttpGet(\u0026http.Client{}, \"http://gowalker.org\", nil)"},{"package_id":"github.com/unknwon/com_test [github.com/unknwon/com.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/unknwon/com@v1.0.1/example_test.go:167:1","message":"ExampleHttpGetBytes should return nothing","source":"\nfunc ExampleHttpGetBytes() ([]byte, error) {\n\tp, err := com.HttpGetBytes(\u0026http.Client{}, \"http://gowalker.org\", nil)"},{"package_id":"github.com/unknwon/com_test [github.com/unknwon/com.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/unknwon/com@v1.0.1/example_test.go:172:1","message":"ExampleHttpGetJSON should return nothing","source":"\nfunc ExampleHttpGetJSON() interface{} {\n\tj := com.HttpGetJSON(\u0026http.Client{}, \"http://gowalker.org\", nil)"}]}
{"created_at":"2023-06-22 17:20:25.554055 UTC","module_path":"yunion.io/x/pkg","version":"v1.0.0","sort_version":"1,0,0~","commit_time":"2022-04-13 03:35:38 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"yunion.io/x/pkg/util/wait [yunion.io/x/pkg/util/wait.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/yunion.io/x/pkg@v1.0.0/util/wait/wait_test.go:362:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := PollInfinite(time.Microsecond, f); err != nil {\n\t\t\tt.Fatalf(\"unexpected error %v\", err)\n\t\t}"},{"package_id":"yunion.io/x/pkg/util/wait [yunion.io/x/pkg/util/wait.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/yunion.io/x/pkg@v1.0.0/util/wait/wait_test.go:393:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t}\n\t\tt.Fatalf(\"expected closed channel after two iterations\")\n\t}()"},{"package_id":"yunion.io/x/pkg/utils [yunion.io/x/pkg/utils.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/yunion.io/x/pkg@v1.0.0/utils/fibonacci_retrier_test.go:88:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tcase \u003c-wait.C:\n\t\t\t\tt.Fatalf(\"1s passed but not done yet\")\n\t\t\tcase \u003c-doneC:"}]}
{"created_at":"2023-06-22 17:30:17.014192 UTC","module_path":"github.com/cloudtask/libtools","version":"v0.0.0-20180622030929-385f94132c66","sort_version":"0,0,0,~20180622030929-385f94132c66","commit_time":"2018-06-22 03:09:29 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/gounits/network/common [synthetic/gounits/network/common.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cloudtask/libtools@v0.0.0-20180622030929-385f94132c66/gounits/network/common/common_test.go:51:1","message":"TestmustParseInt32 has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestmustParseInt32(t *testing.T) {\n\tret := mustParseInt32(\"11111\")"},{"package_id":"synthetic/gounits/network/common [synthetic/gounits/network/common.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cloudtask/libtools@v0.0.0-20180622030929-385f94132c66/gounits/network/common/common_test.go:57:1","message":"TestmustParseUint64 has malformed name: first letter after 'Test' must not be lowercase","source":"}\nfunc TestmustParseUint64(t *testing.T) {\n\tret := mustParseUint64(\"11111\")"},{"package_id":"synthetic/gounits/network/common [synthetic/gounits/network/common.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cloudtask/libtools@v0.0.0-20180622030929-385f94132c66/gounits/network/common/common_test.go:63:1","message":"TestmustParseFloat64 has malformed name: first letter after 'Test' must not be lowercase","source":"}\nfunc TestmustParseFloat64(t *testing.T) {\n\tret := mustParseFloat64(\"11111.11\")"}]}
{"created_at":"2023-06-22 17:32:42.981249 UTC","module_path":"github.com/gobs/pretty","version":"v0.0.0-20180724170744-09732c25a95b","sort_version":"0,0,0,~20180724170744-09732c25a95b","commit_time":"2018-07-24 17:07:44 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gobs/pretty@v0.0.0-20180724170744-09732c25a95b/pretty_test.go:84:1","message":"ExampleTabPrint refers to unknown identifier: TabPrint","source":"\nfunc ExampleTabPrint() {\n\ttp := NewTabPrinter(8)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gobs/pretty@v0.0.0-20180724170744-09732c25a95b/pretty_test.go:108:1","message":"ExampleTabPrintTwoFullLines refers to unknown identifier: TabPrintTwoFullLines","source":"\nfunc ExampleTabPrintTwoFullLines() {\n\ttp := NewTabPrinter(4)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gobs/pretty@v0.0.0-20180724170744-09732c25a95b/pretty_test.go:123:1","message":"ExampleTabPrintWider refers to unknown identifier: TabPrintWider","source":"\nfunc ExampleTabPrintWider() {\n\ttp := NewTabPrinter(2)"}]}
{"created_at":"2023-06-22 17:43:34.254523 UTC","module_path":"github.com/mkmik/multierror","version":"v0.3.0","sort_version":"0,3,0~","commit_time":"2019-10-02 09:50:14 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/mkmik/multierror_test [github.com/mkmik/multierror.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mkmik/multierror@v0.3.0/multierror_test.go:104:1","message":"ExampleJoin_Formatter refers to unknown field or method: Join.Formatter","source":"\nfunc ExampleJoin_Formatter() {\n\tvar errs []error"},{"package_id":"github.com/mkmik/multierror_test [github.com/mkmik/multierror.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mkmik/multierror@v0.3.0/multierror_test.go:117:1","message":"ExampleJoin_Transformer refers to unknown field or method: Join.Transformer","source":"\nfunc ExampleJoin_Transformer() {\n\tvar errs []error"},{"package_id":"github.com/mkmik/multierror_test [github.com/mkmik/multierror.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mkmik/multierror@v0.3.0/multierror_test.go:222:1","message":"ExampleTransformer refers to unknown identifier: Transformer","source":"\nfunc ExampleTransformer() {\n\tvar err error"}]}
{"created_at":"2023-06-22 17:30:10.926479 UTC","module_path":"github.com/starvn/turbo","version":"v1.0.3","sort_version":"1,0,3~","commit_time":"2021-11-08 03:32:02 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/starvn/turbo/transport/http/client/graphql [github.com/starvn/turbo/transport/http/client/graphql.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/starvn/turbo@v1.0.3/transport/http/client/graphql/graphql_test.go:27:1","message":"ExampleNewGraphQLParamExtractor refers to unknown identifier: NewGraphQLParamExtractor","source":"\nfunc ExampleNewGraphQLParamExtractor() {\n\tcfg, err := GetOptions(config.ExtraConfig{"},{"package_id":"github.com/starvn/turbo/transport/http/client/graphql [github.com/starvn/turbo/transport/http/client/graphql.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/starvn/turbo@v1.0.3/transport/http/client/graphql/graphql_test.go:110:1","message":"ExampleNewGraphQLParamExtractor_fromFile refers to unknown identifier: NewGraphQLParamExtractor","source":"\nfunc ExampleNewGraphQLParamExtractor_fromFile() {\n\tioutil.WriteFile(\".graphql_query.txt\", []byte(\"{\\n  find_follower(func: uid(\\\"0x3\\\")) {\\n    name \\n    }\\n  }\\n\"), 0664)"},{"package_id":"github.com/starvn/turbo/transport/http/client/graphql [github.com/starvn/turbo/transport/http/client/graphql.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/starvn/turbo@v1.0.3/transport/http/client/graphql/graphql_test.go:198:1","message":"ExampleNewGraphQLParamExtractor_noReplacement refers to unknown identifier: NewGraphQLParamExtractor","source":"\nfunc ExampleNewGraphQLParamExtractor_noReplacement() {\n\tcfg, err := GetOptions(config.ExtraConfig{"}]}
{"created_at":"2023-06-22 17:21:37.09281 UTC","module_path":"github.com/go-zookeeper/zk","version":"v1.0.3","sort_version":"1,0,3~","commit_time":"2022-03-23 21:42:28 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/go-zookeeper/zk [github.com/go-zookeeper/zk.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-zookeeper/zk@v1.0.3/lock_test.go:39:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := l2.Lock(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/go-zookeeper/zk [github.com/go-zookeeper/zk.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-zookeeper/zk@v1.0.3/lock_test.go:43:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := l2.Unlock(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/go-zookeeper/zk [github.com/go-zookeeper/zk.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-zookeeper/zk@v1.0.3/zk_test.go:354:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif _, err := zk.Create(path, []byte{1, 2, 3, 4}, 0, WorldACL(PermAll)); err == nil {\n\t\t\t\tt.Fatal(\"Create did not return error\")\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:21:28.457242 UTC","module_path":"gorgonia.org/tensor","version":"v0.9.24","sort_version":"0,9,a24~","commit_time":"2022-07-18 00:42:17 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"gorgonia.org/tensor [gorgonia.org/tensor.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gorgonia.org/tensor@v0.9.24/example_dense_arith_test.go:2174:2","message":"output comment block must be the last comment block","source":"\n\t// Output:\n\t// Default operation is safe (tensor is left operand)"},{"package_id":"gorgonia.org/tensor [gorgonia.org/tensor.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gorgonia.org/tensor@v0.9.24/example_iterator_test.go:54:1","message":"ExampleSliceIter refers to unknown identifier: SliceIter","source":"\nfunc ExampleSliceIter() {\n\tT := New(WithShape(3, 3), WithBacking(Range(Float64, 0, 9)))"},{"package_id":"gorgonia.org/tensor_test [gorgonia.org/tensor.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gorgonia.org/tensor@v0.9.24/example_dense_compat_test.go:11:1","message":"ExampleDense_Arrow refers to unknown field or method: Dense.Arrow","source":"\nfunc ExampleDense_Arrow() {\n\tpool := memory.NewGoAllocator()"}]}
{"created_at":"2023-06-22 17:40:53.782335 UTC","module_path":"github.com/antigloss/go","version":"v1.19.3","sort_version":"1,a19,3~","commit_time":"2023-03-08 07:49:29 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/antigloss/go/conf/examples_test [github.com/antigloss/go/conf/examples.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/antigloss/go@v1.19.3/conf/examples/example_test.go:49:1","message":"ExampleConfFromEnv refers to unknown identifier: ConfFromEnv","source":"// An example for reading configurations from ENV\nfunc ExampleConfFromEnv() {\n\tc := conf.New[ExampleConfig]("},{"package_id":"github.com/antigloss/go/conf/examples_test [github.com/antigloss/go/conf/examples.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/antigloss/go@v1.19.3/conf/examples/example_test.go:79:1","message":"ExampleConfFromFile refers to unknown identifier: ConfFromFile","source":"// An example for reading configurations from local files\nfunc ExampleConfFromFile() {\n\tc := conf.New[ExampleConfig]("},{"package_id":"github.com/antigloss/go/conf/examples_test [github.com/antigloss/go/conf/examples.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/antigloss/go@v1.19.3/conf/examples/example_test.go:95:1","message":"ExampleConfFromApollo refers to unknown identifier: ConfFromApollo","source":"// An example for reading configurations from Apollo\nfunc ExampleConfFromApollo() {\n\t// Create an object for reading Apollo Access Key from a local file."}]}
{"created_at":"2023-06-22 17:51:29.450528 UTC","module_path":"github.com/humpback/gounits","version":"v0.0.0-20190102083213-0662ccb72e5a","sort_version":"0,0,0,~20190102083213-0662ccb72e5a","commit_time":"2019-01-02 08:32:13 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/network/common [synthetic/network/common.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/humpback/gounits@v0.0.0-20190102083213-0662ccb72e5a/network/common/common_test.go:51:1","message":"TestmustParseInt32 has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestmustParseInt32(t *testing.T) {\n\tret := mustParseInt32(\"11111\")"},{"package_id":"synthetic/network/common [synthetic/network/common.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/humpback/gounits@v0.0.0-20190102083213-0662ccb72e5a/network/common/common_test.go:57:1","message":"TestmustParseUint64 has malformed name: first letter after 'Test' must not be lowercase","source":"}\nfunc TestmustParseUint64(t *testing.T) {\n\tret := mustParseUint64(\"11111\")"},{"package_id":"synthetic/network/common [synthetic/network/common.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/humpback/gounits@v0.0.0-20190102083213-0662ccb72e5a/network/common/common_test.go:63:1","message":"TestmustParseFloat64 has malformed name: first letter after 'Test' must not be lowercase","source":"}\nfunc TestmustParseFloat64(t *testing.T) {\n\tret := mustParseFloat64(\"11111.11\")"}]}
{"created_at":"2023-06-22 17:32:30.907729 UTC","module_path":"github.com/ohsu-comp-bio/funnel","version":"v0.0.0-20230515194250-226edc9f5c8e","sort_version":"0,0,0,~20230515194250-226edc9f5c8e","commit_time":"2023-05-15 19:42:50 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/ohsu-comp-bio/funnel/tests/core [github.com/ohsu-comp-bio/funnel/tests/core.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ohsu-comp-bio/funnel@v0.0.0-20230515194250-226edc9f5c8e/tests/core/basic_test.go:1137:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/ohsu-comp-bio/funnel/tests/core [github.com/ohsu-comp-bio/funnel/tests/core.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ohsu-comp-bio/funnel@v0.0.0-20230515194250-226edc9f5c8e/tests/core/basic_test.go:1151:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/ohsu-comp-bio/funnel/tests/pubsub [github.com/ohsu-comp-bio/funnel/tests/pubsub.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ohsu-comp-bio/funnel@v0.0.0-20230515194250-226edc9f5c8e/tests/pubsub/pubsub_test.go:58:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:23:58.643904 UTC","module_path":"github.com/donovanhide/eventsource","version":"v0.0.0-20210830082556-c59027999da0","sort_version":"0,0,0,~20210830082556-c59027999da0","commit_time":"2021-08-30 08:25:56 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/donovanhide/eventsource@v0.0.0-20210830082556-c59027999da0/normalise_test.go:18:1","message":"Testnormaliser has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc Testnormaliser(t *testing.T) {\n\tfor i, first := range endings {"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/donovanhide/eventsource@v0.0.0-20210830082556-c59027999da0/server_test.go:21:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Unexpected error %s\", err)\n\t\t}"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/donovanhide/eventsource@v0.0.0-20210830082556-c59027999da0/example_error_handling_stream_test.go:10:1","message":"ExampleErrorHandlingStream refers to unknown identifier: ErrorHandlingStream","source":"\nfunc ExampleErrorHandlingStream() {\n\tlistener, err := net.Listen(\"tcp\", \":8080\")"}]}
{"created_at":"2023-06-22 17:57:52.960388 UTC","module_path":"github.com/gofiber/limiter","version":"v0.1.2","sort_version":"0,1,2~","commit_time":"2020-07-23 00:31:35 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/gofiber/limiter [github.com/gofiber/limiter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gofiber/limiter@v0.1.2/main_test.go:45:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\twg.Add(1)\n\t\tgo singleRequest(\u0026wg)\n\t}"},{"package_id":"github.com/gofiber/limiter [github.com/gofiber/limiter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gofiber/limiter@v0.1.2/main_test.go:45:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\twg.Add(1)\n\t\tgo singleRequest(\u0026wg)\n\t}"},{"package_id":"github.com/gofiber/limiter [github.com/gofiber/limiter.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gofiber/limiter@v0.1.2/main_test.go:45:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\twg.Add(1)\n\t\tgo singleRequest(\u0026wg)\n\t}"}]}
{"created_at":"2023-06-22 17:49:25.905019 UTC","module_path":"github.com/leeor/etcd-sync","version":"v0.0.0-20141026125048-1b8ac808160f","sort_version":"0,0,0,~20141026125048-1b8ac808160f","commit_time":"2014-10-26 12:50:48 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/leeor/etcd-sync@v0.0.0-20141026125048-1b8ac808160f/mutex_test.go:67:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\n\t\t\tt.Fatal(\"could not acquire lock, is etcd running?\", err)\n\t\t\terrchan \u003c- true"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/leeor/etcd-sync@v0.0.0-20141026125048-1b8ac808160f/mutex_test.go:74:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\n\t\t\tt.Fatalf(\"mutex TTL was not refreshed, lock acquired after %v seconds\", timeToLock)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/leeor/etcd-sync@v0.0.0-20141026125048-1b8ac808160f/mutex_test.go:153:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\n\t\t\tt.Fatalf(\"mutex TTL was not refreshed, lock acquired after %v seconds\", timeToLock)\n\t\t}"}]}
{"created_at":"2023-06-22 17:47:09.329431 UTC","module_path":"github.com/chmduquesne/rollinghash","version":"v4.0.0+incompatible","sort_version":"4,0,0~","commit_time":"2018-09-09 22:03:57 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/rabinkarp64_test [synthetic/rabinkarp64.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/chmduquesne/rollinghash@v4.0.0+incompatible/rabinkarp64/doc_test.go:45:2","message":"output comment block must be the last comment block","source":"\n\t// Output:\n"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/chmduquesne/rollinghash@v4.0.0+incompatible/rollinghash_test.go:190:1","message":"TestwriteTwice has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestwriteTwice(t *testing.T) {\n\tfor _, h := range allHashes {"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/chmduquesne/rollinghash@v4.0.0+incompatible/rollinghash_test.go:198:1","message":"TestwriteRollWrite has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestwriteRollWrite(t *testing.T) {\n\tfor _, h := range allHashes {"}]}
{"created_at":"2023-06-22 17:37:03.937068 UTC","module_path":"github.com/ftrvxmtrx/fd","version":"v0.0.0-20150925145434-c6d800382fff","sort_version":"0,0,0,~20150925145434-c6d800382fff","commit_time":"2015-09-25 14:54:34 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ftrvxmtrx/fd@v0.0.0-20150925145434-c6d800382fff/fd_test.go:58:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\tw.Add(1)\n\tgo getFD(t, \u0026w)\n"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ftrvxmtrx/fd@v0.0.0-20150925145434-c6d800382fff/fd_test.go:58:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\tw.Add(1)\n\tgo getFD(t, \u0026w)\n"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ftrvxmtrx/fd@v0.0.0-20150925145434-c6d800382fff/fd_test.go:58:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\tw.Add(1)\n\tgo getFD(t, \u0026w)\n"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ftrvxmtrx/fd@v0.0.0-20150925145434-c6d800382fff/fd_test.go:58:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\tw.Add(1)\n\tgo getFD(t, \u0026w)\n"}]}
{"created_at":"2023-06-22 17:57:21.244141 UTC","module_path":"github.com/Preetam/lm2","version":"v2.2.6+incompatible","sort_version":"2,2,6~","commit_time":"2018-09-25 04:11:42 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Preetam/lm2@v2.2.6+incompatible/lm2_test.go:102:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err = cur.Err(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Preetam/lm2@v2.2.6+incompatible/lm2_test.go:320:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t\terrLock.Lock()\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t\terrLock.Unlock()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Preetam/lm2@v2.2.6+incompatible/tx_test.go:154:7","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t\t} else {\n\t\t\t\t\t\tt.Fatal(err)\n\t\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Preetam/lm2@v2.2.6+incompatible/tx_test.go:173:7","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t\tif !IsRollbackError(err) \u0026\u0026 err.Error() != \"lm2: partial read (random failure)\" {\n\t\t\t\t\t\tt.Fatal(err)\n\t\t\t\t\t} else {"}]}
{"created_at":"2023-06-22 17:20:27.102901 UTC","module_path":"github.com/Tnze/go-mc","version":"v1.19.3","sort_version":"1,a19,3~","commit_time":"2023-04-01 01:58:28 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/Tnze/go-mc/net [github.com/Tnze/go-mc/net.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Tnze/go-mc@v1.19.3/net/rcon_test.go:10:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\tc := make(chan int, 1)\n\tgo server(t, c)\n\t\u003c-c"},{"package_id":"github.com/Tnze/go-mc/net [github.com/Tnze/go-mc/net.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Tnze/go-mc@v1.19.3/net/rcon_test.go:10:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\tc := make(chan int, 1)\n\tgo server(t, c)\n\t\u003c-c"},{"package_id":"github.com/Tnze/go-mc/net [github.com/Tnze/go-mc/net.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Tnze/go-mc@v1.19.3/net/rcon_test.go:10:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\tc := make(chan int, 1)\n\tgo server(t, c)\n\t\u003c-c"},{"package_id":"github.com/Tnze/go-mc/net [github.com/Tnze/go-mc/net.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Tnze/go-mc@v1.19.3/net/rcon_test.go:10:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\tc := make(chan int, 1)\n\tgo server(t, c)\n\t\u003c-c"}]}
{"created_at":"2023-06-22 17:43:31.966798 UTC","module_path":"crawshaw.io/iox","version":"v0.0.0-20181124134642-c51c3df30797","sort_version":"0,0,0,~20181124134642-c51c3df30797","commit_time":"2018-11-24 13:46:42 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/webfetch [synthetic/webfetch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/crawshaw.io/iox@v0.0.0-20181124134642-c51c3df30797/webfetch/webfetch_test.go:433:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"synthetic/webfetch [synthetic/webfetch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/crawshaw.io/iox@v0.0.0-20181124134642-c51c3df30797/webfetch/webfetch_test.go:438:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"synthetic/webfetch [synthetic/webfetch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/crawshaw.io/iox@v0.0.0-20181124134642-c51c3df30797/webfetch/webfetch_test.go:458:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"synthetic/webfetch [synthetic/webfetch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/crawshaw.io/iox@v0.0.0-20181124134642-c51c3df30797/webfetch/webfetch_test.go:463:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:54:15.629612 UTC","module_path":"github.com/ory/nosurf","version":"v1.2.7","sort_version":"1,2,7~","commit_time":"2022-01-08 09:27:57 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/ory/nosurf [github.com/ory/nosurf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ory/nosurf@v1.2.7/handler_test.go:470:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/ory/nosurf [github.com/ory/nosurf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ory/nosurf@v1.2.7/handler_test.go:474:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/ory/nosurf [github.com/ory/nosurf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ory/nosurf@v1.2.7/utils_test.go:8:1","message":"TestsContains has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestsContains(t *testing.T) {\n\tslice := []string{\"abc\", \"def\", \"ghi\"}"},{"package_id":"github.com/ory/nosurf [github.com/ory/nosurf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ory/nosurf@v1.2.7/utils_test.go:22:1","message":"TestsameOrigin has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestsameOrigin(t *testing.T) {\n\t// a little helper that saves us time"}]}
{"created_at":"2023-06-22 17:25:02.225298 UTC","module_path":"github.com/serialx/hashring","version":"v0.0.0-20200727003509-22c0c7ab6b1b","sort_version":"0,0,0,~20200727003509-22c0c7ab6b1b","commit_time":"2020-07-27 00:35:09 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/serialx/hashring@v0.0.0-20200727003509-22c0c7ab6b1b/example_test.go:8:1","message":"ExampleGetAllNodes refers to unknown identifier: GetAllNodes","source":"\nfunc ExampleGetAllNodes() {\n\thashRing := New([]string{\"node1\", \"node2\", \"node3\"})"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/serialx/hashring@v0.0.0-20200727003509-22c0c7ab6b1b/example_test.go:15:1","message":"ExampleCustomHashError refers to unknown identifier: CustomHashError","source":"\nfunc ExampleCustomHashError() {\n\t_, err := NewHash(sha1.New).Use(NewInt64PairHashKey)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/serialx/hashring@v0.0.0-20200727003509-22c0c7ab6b1b/example_test.go:21:1","message":"ExampleCustomHash refers to unknown identifier: CustomHash","source":"\nfunc ExampleCustomHash() {\n\thashFunc, _ := NewHash(sha1.New).FirstBytes(16).Use(NewInt64PairHashKey)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/serialx/hashring@v0.0.0-20200727003509-22c0c7ab6b1b/example_test.go:29:1","message":"ExampleNewHashFunc refers to unknown identifier: NewHashFunc","source":"\nfunc ExampleNewHashFunc() {\n\thashFunc, _ := NewHash(sha1.New).FirstBytes(16).Use(NewInt64PairHashKey)"}]}
{"created_at":"2023-06-22 17:30:32.127058 UTC","module_path":"github.com/tiglabs/raft","version":"v0.0.0-20200304095606-b25a44ad8b33","sort_version":"0,0,0,~20200304095606-b25a44ad8b33","commit_time":"2020-03-04 09:56:06 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/storage/wal [synthetic/storage/wal.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tiglabs/raft@v0.0.0-20200304095606-b25a44ad8b33/storage/wal/storage_raft_test.go:120:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\tfor i := 1; i \u003c= 3; i++ {\n\t\tgo runNode(t, uint64(i), dir, exitC, \u0026wg)\n\t}"},{"package_id":"synthetic/storage/wal [synthetic/storage/wal.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tiglabs/raft@v0.0.0-20200304095606-b25a44ad8b33/storage/wal/storage_raft_test.go:120:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\tfor i := 1; i \u003c= 3; i++ {\n\t\tgo runNode(t, uint64(i), dir, exitC, \u0026wg)\n\t}"},{"package_id":"synthetic/storage/wal [synthetic/storage/wal.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tiglabs/raft@v0.0.0-20200304095606-b25a44ad8b33/storage/wal/storage_raft_test.go:120:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\tfor i := 1; i \u003c= 3; i++ {\n\t\tgo runNode(t, uint64(i), dir, exitC, \u0026wg)\n\t}"},{"package_id":"synthetic/storage/wal [synthetic/storage/wal.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tiglabs/raft@v0.0.0-20200304095606-b25a44ad8b33/storage/wal/storage_raft_test.go:120:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\tfor i := 1; i \u003c= 3; i++ {\n\t\tgo runNode(t, uint64(i), dir, exitC, \u0026wg)\n\t}"}]}
{"created_at":"2023-06-22 17:38:12.608137 UTC","module_path":"github.com/ozonru/etcd/v3","version":"v3.3.0-rc.0-grpc1.30.0","sort_version":"3,3,0,~rc,~0-grpc1,a30,0","commit_time":"2020-07-21 09:43:34 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/ozonru/etcd/v3/clientv3/concurrency_test [github.com/ozonru/etcd/v3/clientv3/concurrency.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ozonru/etcd/v3@v3.3.0-rc.0-grpc1.30.0/clientv3/concurrency/election_test.go:74:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif !ok {\n\t\t\t\t\tt.Fatal(\"Observe() channel closed prematurely\")\n\t\t\t\t}"},{"package_id":"github.com/ozonru/etcd/v3/clientv3/concurrency_test [github.com/ozonru/etcd/v3/clientv3/concurrency.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ozonru/etcd/v3@v3.3.0-rc.0-grpc1.30.0/clientv3/concurrency/mutex_test.go:57:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err2 = m2.Lock(context.TODO()); err2 == nil {\n\t\t\tt.Fatal(\"expect session expired error\")\n\t\t}"},{"package_id":"github.com/ozonru/etcd/v3/etcdserver [github.com/ozonru/etcd/v3/etcdserver.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ozonru/etcd/v3@v3.3.0-rc.0-grpc1.30.0/etcdserver/server_test.go:1002:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif len(gaction) != 2 {\n\t\t\tt.Fatalf(\"len(action) = %d, want 2\", len(gaction))\n\t\t}"},{"package_id":"github.com/ozonru/etcd/v3/etcdserver [github.com/ozonru/etcd/v3/etcdserver.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ozonru/etcd/v3@v3.3.0-rc.0-grpc1.30.0/etcdserver/server_test.go:1166:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tt.Logf(\"gaction: %v\", gaction)\n\t\t\tt.Fatalf(\"len(action) = %d, want %d\", len(gaction), wcnt)\n\t\t}"}]}
{"created_at":"2023-06-22 17:26:06.974319 UTC","module_path":"github.com/reconquest/karma-go","version":"v1.2.0","sort_version":"1,2,0~","commit_time":"2023-05-18 10:08:28 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/reconquest/karma-go [github.com/reconquest/karma-go.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/reconquest/karma-go@v1.2.0/karma_test.go:644:1","message":"ExampleContext_MultipleKeyValues refers to unknown field or method: Context.MultipleKeyValues","source":"\nfunc ExampleContext_MultipleKeyValues() {\n\tfoo := func(arg string) error {"},{"package_id":"github.com/reconquest/karma-go [github.com/reconquest/karma-go.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/reconquest/karma-go@v1.2.0/karma_test.go:670:1","message":"ExampleContext_NestedErrors refers to unknown field or method: Context.NestedErrors","source":"\nfunc ExampleContext_NestedErrors() {\n\tfoo := func(arg string) error {"},{"package_id":"github.com/reconquest/karma-go [github.com/reconquest/karma-go.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/reconquest/karma-go@v1.2.0/karma_test.go:710:1","message":"ExampleContext_AddNestedDescribe refers to unknown field or method: Context.AddNestedDescribe","source":"\nfunc ExampleContext_AddNestedDescribe() {\n\tfoo := func() error {"},{"package_id":"github.com/reconquest/karma-go [github.com/reconquest/karma-go.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/reconquest/karma-go@v1.2.0/karma_test.go:745:1","message":"ExampleContext_UseCustomLoggingFormat refers to unknown field or method: Context.UseCustomLoggingFormat","source":"\nfunc ExampleContext_UseCustomLoggingFormat() {\n\t// solve function represents deepest function in the call stack"}]}
{"created_at":"2023-06-22 17:23:46.683905 UTC","module_path":"github.com/hyperledger/aries-framework-go","version":"v0.3.2","sort_version":"0,3,2~","commit_time":"2023-05-09 10:56:44 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/hyperledger/aries-framework-go/pkg/doc/sdjwt [github.com/hyperledger/aries-framework-go/pkg/doc/sdjwt.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hyperledger/aries-framework-go@v0.3.2/pkg/doc/sdjwt/example_test.go:26:1","message":"ExampleSimpleClaims refers to unknown identifier: SimpleClaims","source":"\nfunc ExampleSimpleClaims() { //nolint:govet\n\tsigner, signatureVerifier, err := setUp()"},{"package_id":"github.com/hyperledger/aries-framework-go/pkg/doc/sdjwt [github.com/hyperledger/aries-framework-go/pkg/doc/sdjwt.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hyperledger/aries-framework-go@v0.3.2/pkg/doc/sdjwt/example_test.go:84:1","message":"ExampleComplexClaimsWithHolderBinding refers to unknown identifier: ComplexClaimsWithHolderBinding","source":"\nfunc ExampleComplexClaimsWithHolderBinding() { //nolint:govet\n\tsigner, signatureVerifier, err := setUp()"},{"package_id":"github.com/hyperledger/aries-framework-go/pkg/doc/sdjwt [github.com/hyperledger/aries-framework-go/pkg/doc/sdjwt.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hyperledger/aries-framework-go@v0.3.2/pkg/doc/sdjwt/example_test.go:171:1","message":"ExampleComplexObjectWithStructuredClaims refers to unknown identifier: ComplexObjectWithStructuredClaims","source":"\nfunc ExampleComplexObjectWithStructuredClaims() { //nolint:govet\n\tsigner, signatureVerifier, err := setUp()"},{"package_id":"github.com/hyperledger/aries-framework-go/pkg/doc/verifiable_test [github.com/hyperledger/aries-framework-go/pkg/doc/verifiable.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hyperledger/aries-framework-go@v0.3.2/pkg/doc/verifiable/example_credential_test.go:420:1","message":"ExampleCredential_AddLinkedDataProofMultiProofs refers to unknown field or method: Credential.AddLinkedDataProofMultiProofs","source":"//nolint:govet\nfunc ExampleCredential_AddLinkedDataProofMultiProofs() {\n\tlog.SetLevel(\"aries-framework/json-ld-processor\", spi.ERROR)"}]}
{"created_at":"2023-06-22 17:29:08.57548 UTC","module_path":"github.com/spacemonkeygo/errors","version":"v0.0.0-20201030155909-2f5f890dbc62","sort_version":"0,0,0,~20201030155909-2f5f890dbc62","commit_time":"2020-10-30 15:59:09 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/spacemonkeygo/errors@v0.0.0-20201030155909-2f5f890dbc62/errors_test.go:160:1","message":"ExampleSetData should be niladic","source":"\nfunc ExampleSetData(t *testing.T) {\n\t// Create our own DataKeys"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/spacemonkeygo/errors@v0.0.0-20201030155909-2f5f890dbc62/errors_test.go:188:1","message":"ExampleCatchPanic should be niladic","source":"\nfunc ExampleCatchPanic(t *testing.T) {\n\tpanicfn := func() {"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/spacemonkeygo/errors@v0.0.0-20201030155909-2f5f890dbc62/errors_test.go:201:1","message":"ExampleErrorGroup should be niladic","source":"\nfunc ExampleErrorGroup(t *testing.T) {\n\t// example utils"},{"package_id":"synthetic/errhttp [synthetic/errhttp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/spacemonkeygo/errors@v0.0.0-20201030155909-2f5f890dbc62/errhttp/http_test.go:27:1","message":"Example should be niladic","source":"\nfunc Example(t *testing.T) {\n\tInvalidRequest := errors.NewClass(\"Invalid request\","}]}
{"created_at":"2023-06-22 17:52:59.26275 UTC","module_path":"github.com/timshannon/badgerhold/v4","version":"v4.0.2","sort_version":"4,0,2~","commit_time":"2022-01-03 16:55:39 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/timshannon/badgerhold/v4_test [github.com/timshannon/badgerhold/v4.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/timshannon/badgerhold/v4@v4.0.2/put_test.go:673:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tgt.Fatalf(\"Error inserting test data for find test: %s\", err)\n\t\t\t\t}"},{"package_id":"github.com/timshannon/badgerhold/v4_test [github.com/timshannon/badgerhold/v4.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/timshannon/badgerhold/v4@v4.0.2/put_test.go:691:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tgt.Fatalf(\"Error inserting test data for find test: %s\", err)\n\t\t\t\t}"},{"package_id":"github.com/timshannon/badgerhold/v4_test [github.com/timshannon/badgerhold/v4.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/timshannon/badgerhold/v4@v4.0.2/put_test.go:710:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tgt.Fatalf(\"Error inserting test data for find test: %s\", err)\n\t\t\t\t}"},{"package_id":"github.com/timshannon/badgerhold/v4_test [github.com/timshannon/badgerhold/v4.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/timshannon/badgerhold/v4@v4.0.2/put_test.go:739:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tgt.Fatalf(\"Error updating test data for test: %s\", err)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:19:18.306261 UTC","module_path":"github.com/docker/go-events","version":"v0.0.0-20190806004212-e31b211e4f1c","sort_version":"0,0,0,~20190806004212-e31b211e4f1c","commit_time":"2019-08-06 00:42:12 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/docker/go-events@v0.0.0-20190806004212-e31b211e4f1c/broadcast_test.go:23:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := b.Write(event); err != nil {\n\t\t\t\tt.Fatalf(\"error writing event %v: %v\", event, err)\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/docker/go-events@v0.0.0-20190806004212-e31b211e4f1c/channel_test.go:22:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err := sink.Write(event); err != nil {\n\t\t\t\t\tt.Fatalf(\"error writing event: %v\", err)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/docker/go-events@v0.0.0-20190806004212-e31b211e4f1c/channel_test.go:32:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := sink.Write(i); err != ErrSinkClosed {\n\t\t\t\tt.Fatalf(\"unexpected error: %v != %v\", err, ErrSinkClosed)\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/docker/go-events@v0.0.0-20190806004212-e31b211e4f1c/queue_test.go:27:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := eq.Write(event); err != nil {\n\t\t\t\tt.Fatalf(\"error writing event: %v\", err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:50:52.176756 UTC","module_path":"github.com/cristalhq/hedgedhttp","version":"v0.7.2","sort_version":"0,7,2~","commit_time":"2022-01-28 13:28:05 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/cristalhq/hedgedhttp_test [github.com/cristalhq/hedgedhttp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cristalhq/hedgedhttp@v0.7.2/examples_test.go:14:1","message":"ExampleHedgedClient refers to unknown identifier: HedgedClient","source":"\nfunc ExampleHedgedClient() {\n\tctx := context.Background()"},{"package_id":"github.com/cristalhq/hedgedhttp_test [github.com/cristalhq/hedgedhttp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cristalhq/hedgedhttp@v0.7.2/examples_test.go:39:1","message":"ExampleHedgedRoundTripper refers to unknown identifier: HedgedRoundTripper","source":"\nfunc ExampleHedgedRoundTripper() {\n\tctx := context.Background()"},{"package_id":"github.com/cristalhq/hedgedhttp_test [github.com/cristalhq/hedgedhttp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cristalhq/hedgedhttp@v0.7.2/examples_test.go:72:1","message":"ExampleInstrumented refers to unknown identifier: Instrumented","source":"\nfunc ExampleInstrumented() {\n\ttransport := \u0026InstrumentedTransport{"},{"package_id":"github.com/cristalhq/hedgedhttp_test [github.com/cristalhq/hedgedhttp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cristalhq/hedgedhttp@v0.7.2/examples_test.go:100:1","message":"ExampleRatelimit refers to unknown identifier: Ratelimit","source":"\nfunc ExampleRatelimit() {\n\ttransport := \u0026RateLimitedHedgedTransport{"}]}
{"created_at":"2023-06-22 17:19:44.618079 UTC","module_path":"github.com/justinas/nosurf","version":"v1.1.1","sort_version":"1,1,1~","commit_time":"2020-08-30 15:00:32 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/justinas/nosurf [github.com/justinas/nosurf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/justinas/nosurf@v1.1.1/handler_test.go:342:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/justinas/nosurf [github.com/justinas/nosurf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/justinas/nosurf@v1.1.1/handler_test.go:346:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/justinas/nosurf [github.com/justinas/nosurf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/justinas/nosurf@v1.1.1/utils_test.go:8:1","message":"TestsContains has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestsContains(t *testing.T) {\n\tslice := []string{\"abc\", \"def\", \"ghi\"}"},{"package_id":"github.com/justinas/nosurf [github.com/justinas/nosurf.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/justinas/nosurf@v1.1.1/utils_test.go:22:1","message":"TestsameOrigin has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestsameOrigin(t *testing.T) {\n\t// a little helper that saves us time"}]}
{"created_at":"2023-06-22 17:39:15.838558 UTC","module_path":"github.com/mailgun/mailgun-go/v3","version":"v3.6.4","sort_version":"3,6,4~","commit_time":"2020-01-05 21:34:55 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/mailgun/mailgun-go/v3_test [github.com/mailgun/mailgun-go/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mailgun/mailgun-go/v3@v3.6.4/examples_test.go:18:1","message":"ExampleMailgunImpl_ValidateEmail refers to unknown field or method: MailgunImpl.ValidateEmail","source":"\nfunc ExampleMailgunImpl_ValidateEmail() {\n\tv := mailgun.NewEmailValidator(\"my_public_validation_api_key\")"},{"package_id":"github.com/mailgun/mailgun-go/v3_test [github.com/mailgun/mailgun-go/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mailgun/mailgun-go/v3@v3.6.4/examples_test.go:38:1","message":"ExampleMailgunImpl_ParseAddresses refers to unknown field or method: MailgunImpl.ParseAddresses","source":"\nfunc ExampleMailgunImpl_ParseAddresses() {\n\tv := mailgun.NewEmailValidator(\"my_public_validation_api_key\")"},{"package_id":"github.com/mailgun/mailgun-go/v3_test [github.com/mailgun/mailgun-go/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mailgun/mailgun-go/v3@v3.6.4/examples_test.go:62:1","message":"ExampleMailgunImpl_UpdateList refers to unknown field or method: MailgunImpl.UpdateList","source":"\nfunc ExampleMailgunImpl_UpdateList() {\n\tmg := mailgun.NewMailgun(\"example.com\", \"my_api_key\")"},{"package_id":"github.com/mailgun/mailgun-go/v3_test [github.com/mailgun/mailgun-go/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mailgun/mailgun-go/v3@v3.6.4/examples_test.go:123:1","message":"ExampleMailgunImpl_GetRoutes refers to unknown field or method: MailgunImpl.GetRoutes","source":"\nfunc ExampleMailgunImpl_GetRoutes() {\n\tmg := mailgun.NewMailgun(\"example.com\", \"my_api_key\")"}]}
{"created_at":"2023-06-22 17:22:22.457618 UTC","module_path":"gopkg.in/olivere/elastic.v2","version":"v2.0.61","sort_version":"2,0,a61~","commit_time":"2018-05-17 14:35:08 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/olivere/elastic.v2@v2.0.61/example_test.go:203:1","message":"ExampleClient_NewClient_default refers to unknown field or method: Client.NewClient","source":"\nfunc ExampleClient_NewClient_default() {\n\t// Obtain a client to the Elasticsearch instance on http://localhost:9200."},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/olivere/elastic.v2@v2.0.61/example_test.go:217:1","message":"ExampleClient_NewClient_cluster refers to unknown field or method: Client.NewClient","source":"\nfunc ExampleClient_NewClient_cluster() {\n\t// Obtain a client for an Elasticsearch cluster of two nodes,"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/olivere/elastic.v2@v2.0.61/example_test.go:228:1","message":"ExampleClient_NewClient_manyOptions refers to unknown field or method: Client.NewClient","source":"\nfunc ExampleClient_NewClient_manyOptions() {\n\t// Obtain a client for an Elasticsearch cluster of two nodes,"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/olivere/elastic.v2@v2.0.61/example_test.go:521:1","message":"ExampleClusterHealthService_WaitForGreen refers to unknown field or method: ClusterHealthService.WaitForGreen","source":"\nfunc ExampleClusterHealthService_WaitForGreen() {\n\tclient, err := elastic.NewClient()"}]}
{"created_at":"2023-06-22 17:18:51.797839 UTC","module_path":"github.com/klauspost/compress","version":"v1.16.6","sort_version":"1,a16,6~","commit_time":"2023-06-13 07:31:44 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/klauspost/compress/zstd [github.com/klauspost/compress/zstd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/klauspost/compress@v1.16.6/zstd/fuzz_test.go:33:4","message":"fuzz target must not call any *F methods","source":"\t\tif err != nil {\n\t\t\tf.Fatal(err)\n\t\t}"},{"package_id":"github.com/klauspost/compress/zstd [github.com/klauspost/compress/zstd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/klauspost/compress@v1.16.6/zstd/fuzz_test.go:38:4","message":"fuzz target must not call any *F methods","source":"\t\tif err != nil {\n\t\t\tf.Fatal(err)\n\t\t}"},{"package_id":"github.com/klauspost/compress/zstd [github.com/klauspost/compress/zstd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/klauspost/compress@v1.16.6/zstd/fuzz_test.go:85:4","message":"fuzz target must not call any *F methods","source":"\t\tif err != nil {\n\t\t\tf.Fatal(err)\n\t\t}"},{"package_id":"github.com/klauspost/compress/zstd [github.com/klauspost/compress/zstd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/klauspost/compress@v1.16.6/zstd/fuzz_test.go:92:4","message":"fuzz target must not call any *F methods","source":"\t\tif err != nil {\n\t\t\tf.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:29:56.096261 UTC","module_path":"github.com/tokenized/pkg","version":"v0.7.0","sort_version":"0,7,0~","commit_time":"2023-05-12 17:46:56 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/tokenized/pkg/peer_channels [github.com/tokenized/pkg/peer_channels.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tokenized/pkg@v0.7.0/peer_channels/peer_channels_test.go:212:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"Failed to marshal message : %s\", err)\n\t\t\t}"},{"package_id":"github.com/tokenized/pkg/peer_channels [github.com/tokenized/pkg/peer_channels.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tokenized/pkg@v0.7.0/peer_channels/peer_channels_test.go:234:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tbytes.NewReader([]byte(msg))); err != nil {\n\t\t\t\tt.Fatalf(\"Failed to write message : %s\", err)\n\t\t\t}"},{"package_id":"github.com/tokenized/pkg/peer_channels [github.com/tokenized/pkg/peer_channels.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tokenized/pkg@v0.7.0/peer_channels/peer_channels_test.go:279:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"Failed to marshal message : %s\", err)\n\t\t\t}"},{"package_id":"github.com/tokenized/pkg/peer_channels [github.com/tokenized/pkg/peer_channels.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tokenized/pkg@v0.7.0/peer_channels/peer_channels_test.go:301:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tbytes.NewReader([]byte(msg))); err != nil {\n\t\t\t\tt.Fatalf(\"Failed to write message : %s\", err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:26:06.514416 UTC","module_path":"github.com/glycerine/go-capnproto","version":"v0.0.0-20190118050403-2d07de3aa7fc","sort_version":"0,0,0,~20190118050403-2d07de3aa7fc","commit_time":"2019-01-18 05:04:03 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/glycerine/go-capnproto@v0.0.0-20190118050403-2d07de3aa7fc/customtype_test.go:14:1","message":"ExampleCreateEndpoint should return nothing","source":"\nfunc ExampleCreateEndpoint() (*capn.Segment, []byte) {\n\tseg := capn.NewBuffer(nil)"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/glycerine/go-capnproto@v0.0.0-20190118050403-2d07de3aa7fc/customtype_test.go:14:1","message":"ExampleCreateEndpoint refers to unknown identifier: CreateEndpoint","source":"\nfunc ExampleCreateEndpoint() (*capn.Segment, []byte) {\n\tseg := capn.NewBuffer(nil)"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/glycerine/go-capnproto@v0.0.0-20190118050403-2d07de3aa7fc/write_test.go:14:1","message":"ExampleAirplaneWrite should return nothing","source":"\nfunc ExampleAirplaneWrite() string {\n"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/glycerine/go-capnproto@v0.0.0-20190118050403-2d07de3aa7fc/write_test.go:14:1","message":"ExampleAirplaneWrite refers to unknown identifier: AirplaneWrite","source":"\nfunc ExampleAirplaneWrite() string {\n"}]}
{"created_at":"2023-06-22 17:50:55.406216 UTC","module_path":"github.com/badfortrains/mdns","version":"v0.0.0-20160325001438-447166384f51","sort_version":"0,0,0,~20160325001438-447166384f51","commit_time":"2016-03-25 00:14:38 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/badfortrains/mdns@v0.0.0-20160325001438-447166384f51/server_test.go:30:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Name != \"hostname._foobar._tcp.local.\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/badfortrains/mdns@v0.0.0-20160325001438-447166384f51/server_test.go:33:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Port != 80 {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/badfortrains/mdns@v0.0.0-20160325001438-447166384f51/server_test.go:36:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Info != \"Local web server\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/badfortrains/mdns@v0.0.0-20160325001438-447166384f51/server_test.go:41:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tcase \u003c-time.After(80 * time.Millisecond):\n\t\t\tt.Fatalf(\"timeout\")\n\t\t}"}]}
{"created_at":"2023-06-22 17:45:52.544128 UTC","module_path":"github.com/savsgio/atreugo","version":"v5.4.0+incompatible","sort_version":"5,4,0~","commit_time":"2018-10-29 07:39:11 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/savsgio/atreugo@v5.4.0+incompatible/atreugo_test.go:193:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/savsgio/atreugo@v5.4.0+incompatible/atreugo_test.go:196:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif _, err = c.Write([]byte(\"GET / HTTP/1.1\\r\\nHost: TestServer\\r\\n\\r\\n\")); err != nil {\n\t\t\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/savsgio/atreugo@v5.4.0+incompatible/atreugo_test.go:201:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err = resp.Read(br); err != nil {\n\t\t\t\t\tt.Fatalf(\"unexpected error: %s\", err)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/savsgio/atreugo@v5.4.0+incompatible/atreugo_test.go:205:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif resp.StatusCode() != tt.want.statusCode {\n\t\t\t\t\tt.Fatalf(\"Unexpected status code: '%d', want '%d'\", resp.StatusCode(), tt.want.statusCode)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 18:00:45.016981 UTC","module_path":"github.com/hyperledger/aries-framework-go/component/models","version":"v0.0.0-20230622082138-3ffab1691857","sort_version":"0,0,0,~20230622082138-3ffab1691857","commit_time":"2023-06-22 08:21:38 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/hyperledger/aries-framework-go/component/models/sdjwt [github.com/hyperledger/aries-framework-go/component/models/sdjwt.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hyperledger/aries-framework-go/component/models@v0.0.0-20230622082138-3ffab1691857/sdjwt/example_test.go:26:1","message":"ExampleSimpleClaims refers to unknown identifier: SimpleClaims","source":"\nfunc ExampleSimpleClaims() { //nolint:govet\n\tsigner, signatureVerifier, err := setUp()"},{"package_id":"github.com/hyperledger/aries-framework-go/component/models/sdjwt [github.com/hyperledger/aries-framework-go/component/models/sdjwt.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hyperledger/aries-framework-go/component/models@v0.0.0-20230622082138-3ffab1691857/sdjwt/example_test.go:84:1","message":"ExampleComplexClaimsWithHolderBinding refers to unknown identifier: ComplexClaimsWithHolderBinding","source":"\nfunc ExampleComplexClaimsWithHolderBinding() { //nolint:govet\n\tsigner, signatureVerifier, err := setUp()"},{"package_id":"github.com/hyperledger/aries-framework-go/component/models/sdjwt [github.com/hyperledger/aries-framework-go/component/models/sdjwt.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hyperledger/aries-framework-go/component/models@v0.0.0-20230622082138-3ffab1691857/sdjwt/example_test.go:171:1","message":"ExampleComplexObjectWithStructuredClaims refers to unknown identifier: ComplexObjectWithStructuredClaims","source":"\nfunc ExampleComplexObjectWithStructuredClaims() { //nolint:govet\n\tsigner, signatureVerifier, err := setUp()"},{"package_id":"github.com/hyperledger/aries-framework-go/component/models/verifiable_test [github.com/hyperledger/aries-framework-go/component/models/verifiable.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hyperledger/aries-framework-go/component/models@v0.0.0-20230622082138-3ffab1691857/verifiable/example_credential_test.go:421:1","message":"ExampleCredential_AddLinkedDataProofMultiProofs refers to unknown field or method: Credential.AddLinkedDataProofMultiProofs","source":"//nolint:govet\nfunc ExampleCredential_AddLinkedDataProofMultiProofs() {\n\tlog.SetLevel(\"aries-framework/json-ld-processor\", spi.ERROR)"}]}
{"created_at":"2023-06-22 17:51:32.871688 UTC","module_path":"github.com/Psiphon-Labs/net","version":"v0.0.0-20191204183604-f5d60dada742","sort_version":"0,0,0,~20191204183604-f5d60dada742","commit_time":"2019-12-04 18:36:04 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/Psiphon-Labs/net/http2 [github.com/Psiphon-Labs/net/http2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Psiphon-Labs/net@v0.0.0-20191204183604-f5d60dada742/http2/transport_test.go:359:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/Psiphon-Labs/net/http2 [github.com/Psiphon-Labs/net/http2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Psiphon-Labs/net@v0.0.0-20191204183604-f5d60dada742/http2/transport_test.go:363:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/Psiphon-Labs/net/netutil [github.com/Psiphon-Labs/net/netutil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Psiphon-Labs/net@v0.0.0-20191204183604-f5d60dada742/netutil/listen_test.go:91:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != errFake {\n\t\t\t\tt.Fatalf(\"Accept error = %v; want errFake\", err)\n\t\t\t}"},{"package_id":"github.com/Psiphon-Labs/net/netutil [github.com/Psiphon-Labs/net/netutil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Psiphon-Labs/net@v0.0.0-20191204183604-f5d60dada742/netutil/listen_test.go:116:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:36:25.88589 UTC","module_path":"github.com/Shopify/ejson","version":"v1.4.0","sort_version":"1,4,0~","commit_time":"2023-05-03 13:42:30 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/Shopify/ejson/crypto [github.com/Shopify/ejson/crypto.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Shopify/ejson@v1.4.0/crypto/crypto_test.go:66:1","message":"ExampleEncrypt should be niladic","source":"\nfunc ExampleEncrypt(peerPublic [32]byte) {\n\tvar kp Keypair"},{"package_id":"github.com/Shopify/ejson/crypto [github.com/Shopify/ejson/crypto.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Shopify/ejson@v1.4.0/crypto/crypto_test.go:66:1","message":"ExampleEncrypt refers to unknown identifier: Encrypt","source":"\nfunc ExampleEncrypt(peerPublic [32]byte) {\n\tvar kp Keypair"},{"package_id":"github.com/Shopify/ejson/crypto [github.com/Shopify/ejson/crypto.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Shopify/ejson@v1.4.0/crypto/crypto_test.go:77:1","message":"ExampleDecrypt should be niladic","source":"\nfunc ExampleDecrypt(myPublic, myPrivate [32]byte, encrypted []byte) {\n\tkp := Keypair{"},{"package_id":"github.com/Shopify/ejson/crypto [github.com/Shopify/ejson/crypto.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Shopify/ejson@v1.4.0/crypto/crypto_test.go:77:1","message":"ExampleDecrypt refers to unknown identifier: Decrypt","source":"\nfunc ExampleDecrypt(myPublic, myPrivate [32]byte, encrypted []byte) {\n\tkp := Keypair{"}]}
{"created_at":"2023-06-22 17:27:07.179142 UTC","module_path":"github.com/infobloxopen/atlas-app-toolkit","version":"v1.4.0","sort_version":"1,4,0~","commit_time":"2022-12-12 18:57:00 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/infobloxopen/atlas-app-toolkit/server [github.com/infobloxopen/atlas-app-toolkit/server.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/infobloxopen/atlas-app-toolkit@v1.4.0/server/server_test.go:465:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err := s.Serve(grpcL, httpL); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/infobloxopen/atlas-app-toolkit/server [github.com/infobloxopen/atlas-app-toolkit/server.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/infobloxopen/atlas-app-toolkit@v1.4.0/server/server_test.go:572:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/infobloxopen/atlas-app-toolkit/server [github.com/infobloxopen/atlas-app-toolkit/server.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/infobloxopen/atlas-app-toolkit@v1.4.0/server/server_test.go:593:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/infobloxopen/atlas-app-toolkit/server [github.com/infobloxopen/atlas-app-toolkit/server.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/infobloxopen/atlas-app-toolkit@v1.4.0/server/server_test.go:597:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:44:30.429614 UTC","module_path":"github.com/hysios/log","version":"v0.0.1","sort_version":"0,0,1~","commit_time":"2021-09-21 10:50:43 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/hysios/log [github.com/hysios/log.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hysios/log@v0.0.1/log_test.go:3:1","message":"Example_Test has malformed example suffix: Test","source":"\nfunc Example_Test() {\n\tSetLevel(DebugLevel)"},{"package_id":"github.com/hysios/log [github.com/hysios/log.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hysios/log@v0.0.1/log_test.go:12:1","message":"Example_Error has malformed example suffix: Error","source":"\nfunc Example_Error() {\n\tSetLevel(DebugLevel)"},{"package_id":"github.com/hysios/log [github.com/hysios/log.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hysios/log@v0.0.1/log_test.go:19:1","message":"Example_Panic has malformed example suffix: Panic","source":"\nfunc Example_Panic() {\n\tSetLevel(DebugLevel)"},{"package_id":"github.com/hysios/log [github.com/hysios/log.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hysios/log@v0.0.1/log_test.go:27:1","message":"Example_Fatal has malformed example suffix: Fatal","source":"\nfunc Example_Fatal() {\n\tSetLevel(DebugLevel)"}]}
{"created_at":"2023-06-22 17:21:11.416035 UTC","module_path":"github.com/NebulousLabs/fastrand","version":"v0.0.0-20181203155948-6fb6489aac4e","sort_version":"0,0,0,~20181203155948-6fb6489aac4e","commit_time":"2018-12-03 15:59:48 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/NebulousLabs/fastrand@v0.0.0-20181203155948-6fb6489aac4e/fastrand_test.go:484:6","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tb.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/NebulousLabs/fastrand@v0.0.0-20181203155948-6fb6489aac4e/fastrand_test.go:512:6","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tb.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/NebulousLabs/fastrand@v0.0.0-20181203155948-6fb6489aac4e/fastrand_test.go:540:6","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tb.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/NebulousLabs/fastrand@v0.0.0-20181203155948-6fb6489aac4e/fastrand_test.go:568:6","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tb.Fatal(err)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:58:44.880522 UTC","module_path":"github.com/klauspost/shutdown2","version":"v1.1.0","sort_version":"1,1,0~","commit_time":"2017-12-30 12:19:25 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/klauspost/shutdown2@v1.1.0/shutdown_test.go:721:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif ok0 || ok1 || ok2 || ok3 {\n\t\t\t\t\tt.Fatal(\"unexpected order\", ok0, ok1, ok2, ok3)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/klauspost/shutdown2@v1.1.0/shutdown_test.go:727:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif !ok0 || ok1 || ok2 || ok3 {\n\t\t\t\t\tt.Fatal(\"unexpected order\", ok0, ok1, ok2, ok3)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/klauspost/shutdown2@v1.1.0/shutdown_test.go:733:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif !ok0 || !ok1 || ok2 || ok3 {\n\t\t\t\t\tt.Fatal(\"unexpected order\", ok0, ok1, ok2, ok3)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/klauspost/shutdown2@v1.1.0/shutdown_test.go:739:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif !ok0 || !ok1 || !ok2 || ok3 {\n\t\t\t\t\tt.Fatal(\"unexpected order\", ok0, ok1, ok2, ok3)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:44:12.54673 UTC","module_path":"gitlab.com/I3VNetDisk/fastrand","version":"v0.0.0-20200320082916-4d2f2c58ad4b","sort_version":"0,0,0,~20200320082916-4d2f2c58ad4b","commit_time":"2020-03-20 08:29:16 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/I3VNetDisk/fastrand@v0.0.0-20200320082916-4d2f2c58ad4b/fastrand_test.go:544:6","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tb.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/I3VNetDisk/fastrand@v0.0.0-20200320082916-4d2f2c58ad4b/fastrand_test.go:573:6","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tb.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/I3VNetDisk/fastrand@v0.0.0-20200320082916-4d2f2c58ad4b/fastrand_test.go:602:6","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tb.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/I3VNetDisk/fastrand@v0.0.0-20200320082916-4d2f2c58ad4b/fastrand_test.go:631:6","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tb.Fatal(err)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:54:25.855457 UTC","module_path":"github.com/carolynvs/magex","version":"v0.9.0","sort_version":"0,9,0~","commit_time":"2022-07-25 15:40:22 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/carolynvs/magex/pkg_test [github.com/carolynvs/magex/pkg.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/carolynvs/magex@v0.9.0/pkg/install_example_test.go:44:1","message":"ExampleEnsurePackageWith_LatestVersion refers to unknown field or method: EnsurePackageWith.LatestVersion","source":"\nfunc ExampleEnsurePackageWith_LatestVersion() {\n\t// Install packr2@latest into bin/ using the command `packr2 version` to detect if the"},{"package_id":"github.com/carolynvs/magex/pkg_test [github.com/carolynvs/magex/pkg.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/carolynvs/magex@v0.9.0/pkg/install_example_test.go:61:1","message":"ExampleEnsurePackageWith_DefaultVersion refers to unknown field or method: EnsurePackageWith.DefaultVersion","source":"\nfunc ExampleEnsurePackageWith_DefaultVersion() {\n\t// Install packr2@v2.8.3 into bin/ using the command `packr2 version` to detect if the"},{"package_id":"github.com/carolynvs/magex/pkg_test [github.com/carolynvs/magex/pkg.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/carolynvs/magex@v0.9.0/pkg/install_example_test.go:79:1","message":"ExampleEnsurePackage_VersionConstraint refers to unknown field or method: EnsurePackage.VersionConstraint","source":"\nfunc ExampleEnsurePackage_VersionConstraint() {\n\t// Install packr2@v2.8.3 using the command `packr2 version` to detect if"},{"package_id":"github.com/carolynvs/magex/pkg_test [github.com/carolynvs/magex/pkg.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/carolynvs/magex@v0.9.0/pkg/install_example_test.go:92:1","message":"ExampleEnsurePackageWith_VersionConstraint refers to unknown field or method: EnsurePackageWith.VersionConstraint","source":"\nfunc ExampleEnsurePackageWith_VersionConstraint() {\n\t// Install packr2@v2.8.3 into bin/ using the command `packr2 version` to detect if"}]}
{"created_at":"2023-06-22 17:21:47.691246 UTC","module_path":"gitlab.com/NebulousLabs/fastrand","version":"v0.0.0-20181126182046-603482d69e40","sort_version":"0,0,0,~20181126182046-603482d69e40","commit_time":"2018-11-26 18:20:46 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/NebulousLabs/fastrand@v0.0.0-20181126182046-603482d69e40/fastrand_test.go:544:6","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tb.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/NebulousLabs/fastrand@v0.0.0-20181126182046-603482d69e40/fastrand_test.go:573:6","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tb.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/NebulousLabs/fastrand@v0.0.0-20181126182046-603482d69e40/fastrand_test.go:602:6","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tb.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitlab.com/NebulousLabs/fastrand@v0.0.0-20181126182046-603482d69e40/fastrand_test.go:631:6","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tb.Fatal(err)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:48:44.408174 UTC","module_path":"github.com/TRON-US/go-btfs-chunker","version":"v0.3.0","sort_version":"0,3,0~","commit_time":"2020-05-13 02:55:21 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/TRON-US/go-btfs-chunker [github.com/TRON-US/go-btfs-chunker.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/TRON-US/go-btfs-chunker@v0.3.0/reed_solomon_test.go:144:7","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\tif len(chunk) \u003e testRsDefaultSize {\n\t\t\t\t\t\tt.Fatalf(\"splitter returns a larger than expected size (chunk number %d): %d\",\n\t\t\t\t\t\t\tcn, len(chunk))"},{"package_id":"github.com/TRON-US/go-btfs-chunker [github.com/TRON-US/go-btfs-chunker.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/TRON-US/go-btfs-chunker@v0.3.0/reed_solomon_test.go:154:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tcase err := \u003c-errc:\n\t\t\t\t\tt.Fatal(\"failed to split all chunks\", err)\n\t\t\t\tcase \u003c-time.After(5 * time.Second):"},{"package_id":"github.com/TRON-US/go-btfs-chunker [github.com/TRON-US/go-btfs-chunker.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/TRON-US/go-btfs-chunker@v0.3.0/reed_solomon_test.go:156:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tcase \u003c-time.After(5 * time.Second):\n\t\t\t\t\tt.Fatal(\"timed out while waiting for chunk split\")\n\t\t\t\t}"},{"package_id":"github.com/TRON-US/go-btfs-chunker [github.com/TRON-US/go-btfs-chunker.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/TRON-US/go-btfs-chunker@v0.3.0/reed_solomon_test.go:165:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif !bytes.Equal(bs, shard) {\n\t\t\t\tt.Fatalf(\"shard not correct: (shard number: %d) %d != %d, %v != %v\",\n\t\t\t\t\tsn, len(bs), len(shard), bs[:100], shard[:100])"}]}
{"created_at":"2023-06-22 17:38:24.17162 UTC","module_path":"github.com/HyperspaceApp/fastrand","version":"v0.0.0-20180930130200-6b650a339f5d","sort_version":"0,0,0,~20180930130200-6b650a339f5d","commit_time":"2018-09-30 13:02:00 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/HyperspaceApp/fastrand@v0.0.0-20180930130200-6b650a339f5d/fastrand_test.go:523:6","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tb.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/HyperspaceApp/fastrand@v0.0.0-20180930130200-6b650a339f5d/fastrand_test.go:551:6","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tb.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/HyperspaceApp/fastrand@v0.0.0-20180930130200-6b650a339f5d/fastrand_test.go:579:6","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tb.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/HyperspaceApp/fastrand@v0.0.0-20180930130200-6b650a339f5d/fastrand_test.go:607:6","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tb.Fatal(err)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:27:44.105425 UTC","module_path":"github.com/micro/mdns","version":"v0.3.0","sort_version":"0,3,0~","commit_time":"2019-08-12 10:59:10 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/micro/mdns [github.com/micro/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/mdns@v0.3.0/server_test.go:31:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Name != \"hostname._foobar._tcp.local.\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/micro/mdns [github.com/micro/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/mdns@v0.3.0/server_test.go:34:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Port != 80 {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/micro/mdns [github.com/micro/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/mdns@v0.3.0/server_test.go:37:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Info != \"Local web server\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/micro/mdns [github.com/micro/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/mdns@v0.3.0/server_test.go:42:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tcase \u003c-time.After(80 * time.Millisecond):\n\t\t\tt.Fatalf(\"timeout\")\n\t\t}"}]}
{"created_at":"2023-06-22 17:27:10.285376 UTC","module_path":"github.com/mailgun/mailgun-go/v4","version":"v4.9.1","sort_version":"4,9,1~","commit_time":"2023-06-19 14:41:41 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/mailgun/mailgun-go/v4_test [github.com/mailgun/mailgun-go/v4.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mailgun/mailgun-go/v4@v4.9.1/examples_test.go:18:1","message":"ExampleMailgunImpl_ValidateEmail refers to unknown field or method: MailgunImpl.ValidateEmail","source":"\nfunc ExampleMailgunImpl_ValidateEmail() {\n\tv := mailgun.NewEmailValidator(\"my_public_validation_api_key\")"},{"package_id":"github.com/mailgun/mailgun-go/v4_test [github.com/mailgun/mailgun-go/v4.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mailgun/mailgun-go/v4@v4.9.1/examples_test.go:38:1","message":"ExampleMailgunImpl_ParseAddresses refers to unknown field or method: MailgunImpl.ParseAddresses","source":"\nfunc ExampleMailgunImpl_ParseAddresses() {\n\tv := mailgun.NewEmailValidator(\"my_public_validation_api_key\")"},{"package_id":"github.com/mailgun/mailgun-go/v4_test [github.com/mailgun/mailgun-go/v4.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mailgun/mailgun-go/v4@v4.9.1/examples_test.go:62:1","message":"ExampleMailgunImpl_UpdateList refers to unknown field or method: MailgunImpl.UpdateList","source":"\nfunc ExampleMailgunImpl_UpdateList() {\n\tmg := mailgun.NewMailgun(\"example.com\", \"my_api_key\")"},{"package_id":"github.com/mailgun/mailgun-go/v4_test [github.com/mailgun/mailgun-go/v4.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mailgun/mailgun-go/v4@v4.9.1/examples_test.go:123:1","message":"ExampleMailgunImpl_GetRoutes refers to unknown field or method: MailgunImpl.GetRoutes","source":"\nfunc ExampleMailgunImpl_GetRoutes() {\n\tmg := mailgun.NewMailgun(\"example.com\", \"my_api_key\")"}]}
{"created_at":"2023-06-22 17:28:48.256339 UTC","module_path":"crawshaw.io/sqlite","version":"v0.3.2","sort_version":"0,3,2~","commit_time":"2020-06-07 23:42:25 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"crawshaw.io/sqlite/sqlitex [crawshaw.io/sqlite/sqlitex.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/crawshaw.io/sqlite@v0.3.2/sqlitex/savepoint_test.go:350:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := Exec(conn, `INSERT INTO t (c) VALUES (3);`, nil); err != nil {\n\t\t\tt.Fatalf(\"interrupted too early\")\n\t\t}"},{"package_id":"crawshaw.io/sqlite/sqlitex_test [crawshaw.io/sqlite/sqlitex.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/crawshaw.io/sqlite@v0.3.2/sqlitex/pool_test.go:197:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif _, err := stmt.Step(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"crawshaw.io/sqlite_test [crawshaw.io/sqlite.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/crawshaw.io/sqlite@v0.3.2/blob_test.go:217:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"crawshaw.io/sqlite_test [crawshaw.io/sqlite.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/crawshaw.io/sqlite@v0.3.2/blob_test.go:236:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif n != len(b) {\n\t\t\t\t\tt.Fatalf(\"n=%d, want %d (i=%d, j=%d)\", n, len(b), i, j)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:40:48.459448 UTC","module_path":"github.com/eyedeekay/sam3","version":"v0.33.5","sort_version":"0,a33,5~","commit_time":"2023-01-16 04:18:11 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/eyedeekay/sam3 [github.com/eyedeekay/sam3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/eyedeekay/sam3@v0.33.5/datagram_test.go:134:1","message":"ExampleMiniDatagramSession refers to unknown identifier: MiniDatagramSession","source":"\nfunc ExampleMiniDatagramSession() {\n\t// Creates a new DatagramSession, which behaves just like a net.PacketConn."},{"package_id":"github.com/eyedeekay/sam3 [github.com/eyedeekay/sam3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/eyedeekay/sam3@v0.33.5/primary_datagram_test.go:96:1","message":"ExamplePrimaryDatagramSession refers to unknown identifier: PrimaryDatagramSession","source":"\nfunc ExamplePrimaryDatagramSession() {\n\t// Creates a new PrimarySession, then creates a Datagram subsession on top of it"},{"package_id":"github.com/eyedeekay/sam3 [github.com/eyedeekay/sam3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/eyedeekay/sam3@v0.33.5/primary_stream_test.go:170:1","message":"ExamplePrimaryStreamSession refers to unknown identifier: PrimaryStreamSession","source":"\nfunc ExamplePrimaryStreamSession() {\n\t// Creates a new StreamingSession, dials to idk.i2p and gets a SAMConn"},{"package_id":"github.com/eyedeekay/sam3 [github.com/eyedeekay/sam3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/eyedeekay/sam3@v0.33.5/primary_stream_test.go:219:1","message":"ExamplePrimaryStreamListener refers to unknown identifier: PrimaryStreamListener","source":"\nfunc ExamplePrimaryStreamListener() {\n\t// One server Accept()ing on a StreamListener, and one client that Dials"}]}
{"created_at":"2023-06-22 17:35:38.823558 UTC","module_path":"github.com/GoogleCloudPlatform/docker-credential-gcr","version":"v2.0.5+incompatible","sort_version":"2,0,5~","commit_time":"2021-07-13 21:22:22 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/auth [synthetic/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/GoogleCloudPlatform/docker-credential-gcr@v2.0.5+incompatible/auth/login_integration_test.go:233:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start a goroutine to act as the browser\n\tgo performBrowserActions(t, mockBrowser)\n"},{"package_id":"synthetic/auth [synthetic/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/GoogleCloudPlatform/docker-credential-gcr@v2.0.5+incompatible/auth/login_integration_test.go:236:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start a goroutine to act as the auth server\n\tgo performAuthServerActions(t, testLn)\n"},{"package_id":"synthetic/auth [synthetic/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/GoogleCloudPlatform/docker-credential-gcr@v2.0.5+incompatible/auth/login_integration_test.go:343:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// with the client\n\tgo performAuthServerActions(t, testLn)\n"},{"package_id":"synthetic/auth [synthetic/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/GoogleCloudPlatform/docker-credential-gcr@v2.0.5+incompatible/auth/login_integration_test.go:389:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// with the client\n\tgo performAuthServerActions(t, testLn)\n"}]}
{"created_at":"2023-06-22 17:57:01.8905 UTC","module_path":"github.com/argcv/webeh","version":"v0.0.0-20181213215239-2d67580d1288","sort_version":"0,0,0,~20181213215239-2d67580d1288","commit_time":"2018-12-13 21:52:39 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/argcv/webeh@v0.0.0-20181213215239-2d67580d1288/once_test.go:26:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif value != 1 {\n\t\t\t\tt.Fatal(fmt.Sprintf(\"value %d is NOT equal to 1\", value))\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/argcv/webeh@v0.0.0-20181213215239-2d67580d1288/once_test.go:44:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif value != -1 {\n\t\t\t\tt.Fatal(fmt.Sprintf(\"value %d is NOT equal to -1\", value))\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/argcv/webeh@v0.0.0-20181213215239-2d67580d1288/once_test.go:68:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif value != 1 {\n\t\t\t\tt.Fatal(fmt.Sprintf(\"value %d is NOT equal to 1\", value))\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/argcv/webeh@v0.0.0-20181213215239-2d67580d1288/once_test.go:85:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif value != -1 {\n\t\t\t\tt.Fatal(fmt.Sprintf(\"value %d is NOT equal to -1\", value))\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:32:33.883588 UTC","module_path":"github.com/futurehomeno/fimpgo","version":"v1.12.1","sort_version":"1,a12,1~","commit_time":"2023-04-19 14:00:19 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/futurehomeno/fimpgo/fimptype/primefimp [github.com/futurehomeno/fimpgo/fimptype/primefimp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/futurehomeno/fimpgo@v1.12.1/fimptype/primefimp/api-client_test.go:194:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(\"Connection pool error , Err:\",err.Error())\n\t\t\t}"},{"package_id":"github.com/futurehomeno/fimpgo/fimptype/primefimp [github.com/futurehomeno/fimpgo/fimptype/primefimp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/futurehomeno/fimpgo@v1.12.1/fimptype/primefimp/api-client_test.go:200:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil || len(state.Devices)==0 {\n\t\t\t\tt.Fatal(\"Cache is empty. Cache must contain data.\")\n\t\t\t}else {"},{"package_id":"github.com/futurehomeno/fimpgo/fimptype/primefimp [github.com/futurehomeno/fimpgo/fimptype/primefimp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/futurehomeno/fimpgo@v1.12.1/fimptype/primefimp/api-client_test.go:213:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(\"Connection pool error , Err:\", err.Error())\n\t\t\t}"},{"package_id":"github.com/futurehomeno/fimpgo/fimptype/primefimp [github.com/futurehomeno/fimpgo/fimptype/primefimp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/futurehomeno/fimpgo@v1.12.1/fimptype/primefimp/api-client_test.go:219:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil || len(shortcuts) == 0 {\n\t\t\t\tt.Fatal(\"Cache is empty. Cache must contain data.\")\n\t\t\t} else {"}]}
{"created_at":"2023-06-22 17:18:39.304854 UTC","module_path":"github.com/soheilhy/cmux","version":"v0.1.5","sort_version":"0,1,5~","commit_time":"2021-02-05 19:11:34 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/soheilhy/cmux [github.com/soheilhy/cmux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/soheilhy/cmux@v0.1.5/cmux_test.go:338:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif _, err := io.WriteString(writer, strings.Repeat(payload, mult)); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/soheilhy/cmux [github.com/soheilhy/cmux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/soheilhy/cmux@v0.1.5/cmux_test.go:341:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := writer.Close(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/soheilhy/cmux [github.com/soheilhy/cmux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/soheilhy/cmux@v0.1.5/cmux_test.go:442:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif _, err := io.WriteString(writer, http2.ClientPreface); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/soheilhy/cmux [github.com/soheilhy/cmux.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/soheilhy/cmux@v0.1.5/cmux_test.go:445:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := writer.Close(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:31:37.771417 UTC","module_path":"github.com/ledisdb/ledisdb","version":"v0.0.0-20200510135210-d35789ec47e6","sort_version":"0,0,0,~20200510135210-d35789ec47e6","commit_time":"2020-05-10 13:52:10 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/ledisdb/ledisdb/ledis [github.com/ledisdb/ledisdb/ledis.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ledisdb/ledisdb@v0.0.0-20200510135210-d35789ec47e6/ledis/t_list_test.go:215:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\n\tgo f(1)\n\tgo f(2)"},{"package_id":"github.com/ledisdb/ledisdb/ledis [github.com/ledisdb/ledisdb/ledis.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ledisdb/ledisdb@v0.0.0-20200510135210-d35789ec47e6/ledis/t_list_test.go:215:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\n\tgo f(1)\n\tgo f(2)"},{"package_id":"github.com/ledisdb/ledisdb/ledis [github.com/ledisdb/ledisdb/ledis.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ledisdb/ledisdb@v0.0.0-20200510135210-d35789ec47e6/ledis/t_list_test.go:216:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\tgo f(1)\n\tgo f(2)\n"},{"package_id":"github.com/ledisdb/ledisdb/ledis [github.com/ledisdb/ledisdb/ledis.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ledisdb/ledisdb@v0.0.0-20200510135210-d35789ec47e6/ledis/t_list_test.go:216:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\tgo f(1)\n\tgo f(2)\n"}]}
{"created_at":"2023-06-22 17:40:48.953943 UTC","module_path":"github.com/whyrusleeping/mdns","version":"v0.0.0-20190826153040-b9b60ed33aa9","sort_version":"0,0,0,~20190826153040-b9b60ed33aa9","commit_time":"2019-08-26 15:30:40 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/whyrusleeping/mdns@v0.0.0-20190826153040-b9b60ed33aa9/server_test.go:31:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Name != \"hostname._foobar._tcp.local.\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/whyrusleeping/mdns@v0.0.0-20190826153040-b9b60ed33aa9/server_test.go:34:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Port != 80 {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/whyrusleeping/mdns@v0.0.0-20190826153040-b9b60ed33aa9/server_test.go:37:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Info != \"Local web server\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/whyrusleeping/mdns@v0.0.0-20190826153040-b9b60ed33aa9/server_test.go:42:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tcase \u003c-time.After(80 * time.Millisecond):\n\t\t\tt.Fatalf(\"timeout\")\n\t\t}"}]}
{"created_at":"2023-06-22 17:27:22.173348 UTC","module_path":"github.com/pariz/gountries","version":"v0.1.6","sort_version":"0,1,6~","commit_time":"2022-08-12 12:12:00 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/pariz/gountries [github.com/pariz/gountries.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pariz/gountries@v0.1.6/country_test.go:23:1","message":"ExampleBorderingCountries refers to unknown identifier: BorderingCountries","source":"\nfunc ExampleBorderingCountries() {\n"},{"package_id":"github.com/pariz/gountries [github.com/pariz/gountries.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pariz/gountries@v0.1.6/country_test.go:36:1","message":"ExampleTranslations refers to unknown identifier: Translations","source":"\nfunc ExampleTranslations() {\n"},{"package_id":"github.com/pariz/gountries [github.com/pariz/gountries.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pariz/gountries@v0.1.6/query_test.go:271:1","message":"ExampleFindCountriesBorderingCountries refers to unknown identifier: FindCountriesBorderingCountries","source":"\nfunc ExampleFindCountriesBorderingCountries() {\n"},{"package_id":"github.com/pariz/gountries [github.com/pariz/gountries.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pariz/gountries@v0.1.6/query_test.go:302:1","message":"ExampleFindCountriesBorderingCountries2 refers to unknown identifier: FindCountriesBorderingCountries2","source":"\nfunc ExampleFindCountriesBorderingCountries2() {\n"}]}
{"created_at":"2023-06-22 17:34:50.120706 UTC","module_path":"github.com/zyedidia/generic","version":"v1.2.1","sort_version":"1,2,1~","commit_time":"2023-01-12 01:45:55 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/zyedidia/generic/queue [github.com/zyedidia/generic/queue.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zyedidia/generic@v1.2.1/queue/queue_test.go:156:1","message":"Example_Enqueue has malformed example suffix: Enqueue","source":"\nfunc Example_Enqueue() {\n\tq := New[int]()"},{"package_id":"github.com/zyedidia/generic/queue [github.com/zyedidia/generic/queue.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zyedidia/generic@v1.2.1/queue/queue_test.go:161:1","message":"Example_Peek has malformed example suffix: Peek","source":"\nfunc Example_Peek() {\n\tq := New[int]()"},{"package_id":"github.com/zyedidia/generic/queue [github.com/zyedidia/generic/queue.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zyedidia/generic@v1.2.1/queue/queue_test.go:169:1","message":"Example_Dequeue has malformed example suffix: Dequeue","source":"\nfunc Example_Dequeue() {\n\tq := New[int]()"},{"package_id":"github.com/zyedidia/generic/queue [github.com/zyedidia/generic/queue.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zyedidia/generic@v1.2.1/queue/queue_test.go:190:1","message":"Example_Empty_empty has malformed example suffix: Empty_empty","source":"\nfunc Example_Empty_empty() {\n\tq := New[int]()"},{"package_id":"github.com/zyedidia/generic/queue [github.com/zyedidia/generic/queue.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zyedidia/generic@v1.2.1/queue/queue_test.go:197:1","message":"Example_Empty_nonempty has malformed example suffix: Empty_nonempty","source":"\nfunc Example_Empty_nonempty() {\n\tq := New[int]()"}]}
{"created_at":"2023-06-22 17:24:29.959618 UTC","module_path":"github.com/luraproject/lura/v2","version":"v2.2.8","sort_version":"2,2,8~","commit_time":"2023-05-29 15:44:42 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/luraproject/lura/v2/sd/dnssrv [github.com/luraproject/lura/v2/sd/dnssrv.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/luraproject/lura/v2@v2.2.8/sd/dnssrv/subscriber_test.go:166:1","message":"ExampleWeights_compact_basic refers to unknown identifier: Weights","source":"\nfunc ExampleWeights_compact_basic() {\n\tfor _, tc := range [][]uint16{"},{"package_id":"github.com/luraproject/lura/v2/sd/dnssrv [github.com/luraproject/lura/v2/sd/dnssrv.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/luraproject/lura/v2@v2.2.8/sd/dnssrv/subscriber_test.go:185:1","message":"ExampleWeights_compact_custom refers to unknown identifier: Weights","source":"\nfunc ExampleWeights_compact_custom() {\n\ttc := make([]uint16, 200)"},{"package_id":"github.com/luraproject/lura/v2/transport/http/client/graphql [github.com/luraproject/lura/v2/transport/http/client/graphql.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/luraproject/lura/v2@v2.2.8/transport/http/client/graphql/graphql_test.go:13:1","message":"ExampleNewGraphQLParamExtractor refers to unknown identifier: NewGraphQLParamExtractor","source":"\nfunc ExampleNewGraphQLParamExtractor() {\n\tcfg, err := GetOptions(config.ExtraConfig{"},{"package_id":"github.com/luraproject/lura/v2/transport/http/client/graphql [github.com/luraproject/lura/v2/transport/http/client/graphql.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/luraproject/lura/v2@v2.2.8/transport/http/client/graphql/graphql_test.go:96:1","message":"ExampleNewGraphQLParamExtractor_fromFile refers to unknown identifier: NewGraphQLParamExtractor","source":"\nfunc ExampleNewGraphQLParamExtractor_fromFile() {\n\tos.WriteFile(\".graphql_query.txt\", []byte(\"{\\n  find_follower(func: uid(\\\"0x3\\\")) {\\n    name \\n    }\\n  }\\n\"), 0664)"},{"package_id":"github.com/luraproject/lura/v2/transport/http/client/graphql [github.com/luraproject/lura/v2/transport/http/client/graphql.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/luraproject/lura/v2@v2.2.8/transport/http/client/graphql/graphql_test.go:182:1","message":"ExampleNewGraphQLParamExtractor_noReplacement refers to unknown identifier: NewGraphQLParamExtractor","source":"\nfunc ExampleNewGraphQLParamExtractor_noReplacement() {\n\tcfg, err := GetOptions(config.ExtraConfig{"}]}
{"created_at":"2023-06-22 17:41:40.552127 UTC","module_path":"github.com/GoogleCloudPlatform/gcp-service-broker","version":"v5.1.0+incompatible","sort_version":"5,1,0~","commit_time":"2020-05-27 15:23:16 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/pkg/client [synthetic/pkg/client.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/GoogleCloudPlatform/gcp-service-broker@v5.1.0+incompatible/pkg/client/example-runner_test.go:12:1","message":"ExampleGetAllCompleteServiceExamples_jsonSpec refers to unknown identifier: GetAllCompleteServiceExamples","source":"\nfunc ExampleGetAllCompleteServiceExamples_jsonSpec() {\n"},{"package_id":"synthetic/pkg/providers/tf/wrapper [synthetic/pkg/providers/tf/wrapper.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/GoogleCloudPlatform/gcp-service-broker@v5.1.0+incompatible/pkg/providers/tf/wrapper/tfstate_test.go:19:1","message":"ExampleNewTfstate_Good refers to unknown field or method: NewTfstate.Good","source":"\nfunc ExampleNewTfstate_Good() {\n\tstate := `{"},{"package_id":"synthetic/pkg/providers/tf/wrapper [synthetic/pkg/providers/tf/wrapper.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/GoogleCloudPlatform/gcp-service-broker@v5.1.0+incompatible/pkg/providers/tf/wrapper/tfstate_test.go:46:1","message":"ExampleNewTfstate_BadVersion refers to unknown field or method: NewTfstate.BadVersion","source":"\nfunc ExampleNewTfstate_BadVersion() {\n\tstate := `{"},{"package_id":"synthetic/utils/stream [synthetic/utils/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/GoogleCloudPlatform/gcp-service-broker@v5.1.0+incompatible/utils/stream/stream_test.go:95:1","message":"ExampleYaml refers to unknown identifier: Yaml","source":"\nfunc ExampleYaml() {\n\ttype Test struct {"},{"package_id":"synthetic/utils/stream [synthetic/utils/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/GoogleCloudPlatform/gcp-service-broker@v5.1.0+incompatible/utils/stream/stream_test.go:140:1","message":"ExampleMultiCloser_Error refers to unknown field or method: MultiCloser.Error","source":"\nfunc ExampleMultiCloser_Error() {\n\tvar mc MultiCloser"}]}
{"created_at":"2023-06-22 17:30:21.989708 UTC","module_path":"github.com/ghemawat/stream","version":"v0.0.0-20171120220530-696b145b53b9","sort_version":"0,0,0,~20171120220530-696b145b53b9","commit_time":"2017-11-20 22:05:30 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ghemawat/stream@v0.0.0-20171120220530-696b145b53b9/stream_test.go:217:1","message":"ExampleSorter_Num refers to unknown identifier: Sorter","source":"\nfunc ExampleSorter_Num() {\n\tstream.Run("},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ghemawat/stream@v0.0.0-20171120220530-696b145b53b9/stream_test.go:235:1","message":"ExampleSorter_NumDecreasing refers to unknown identifier: Sorter","source":"\nfunc ExampleSorter_NumDecreasing() {\n\tstream.Run("},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ghemawat/stream@v0.0.0-20171120220530-696b145b53b9/stream_test.go:253:1","message":"ExampleSorter_Text refers to unknown identifier: Sorter","source":"\nfunc ExampleSorter_Text() {\n\tstream.Run("},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ghemawat/stream@v0.0.0-20171120220530-696b145b53b9/stream_test.go:269:1","message":"ExampleSorter_TextDecreasing refers to unknown identifier: Sorter","source":"\nfunc ExampleSorter_TextDecreasing() {\n\tstream.Run("},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ghemawat/stream@v0.0.0-20171120220530-696b145b53b9/stream_test.go:285:1","message":"ExampleSorter_By refers to unknown identifier: Sorter","source":"\nfunc ExampleSorter_By() {\n\tstream.Run("}]}
{"created_at":"2023-06-22 17:17:44.690812 UTC","module_path":"github.com/hyperledger/fabric-sdk-go","version":"v1.0.0","sort_version":"1,0,0~","commit_time":"2021-02-01 21:10:18 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/hyperledger/fabric-sdk-go/pkg/client/msp [github.com/hyperledger/fabric-sdk-go/pkg/client/msp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hyperledger/fabric-sdk-go@v1.0.0/pkg/client/msp/example_test.go:102:1","message":"ExampleEnrollWithSecret refers to unknown identifier: EnrollWithSecret","source":"\nfunc ExampleEnrollWithSecret() {\n"},{"package_id":"github.com/hyperledger/fabric-sdk-go/pkg/client/msp [github.com/hyperledger/fabric-sdk-go/pkg/client/msp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hyperledger/fabric-sdk-go@v1.0.0/pkg/client/msp/example_test.go:124:1","message":"ExampleEnrollWithProfile refers to unknown identifier: EnrollWithProfile","source":"\nfunc ExampleEnrollWithProfile() {\n\tctx := mockClientProvider()"},{"package_id":"github.com/hyperledger/fabric-sdk-go/pkg/client/msp [github.com/hyperledger/fabric-sdk-go/pkg/client/msp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hyperledger/fabric-sdk-go@v1.0.0/pkg/client/msp/example_test.go:144:1","message":"ExampleEnrollWithType refers to unknown identifier: EnrollWithType","source":"\nfunc ExampleEnrollWithType() {\n\tctx := mockClientProvider()"},{"package_id":"github.com/hyperledger/fabric-sdk-go/pkg/client/msp [github.com/hyperledger/fabric-sdk-go/pkg/client/msp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hyperledger/fabric-sdk-go@v1.0.0/pkg/client/msp/example_test.go:164:1","message":"ExampleEnrollWithLabel refers to unknown identifier: EnrollWithLabel","source":"\nfunc ExampleEnrollWithLabel() {\n\tctx := mockClientProvider()"},{"package_id":"github.com/hyperledger/fabric-sdk-go/pkg/client/msp [github.com/hyperledger/fabric-sdk-go/pkg/client/msp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hyperledger/fabric-sdk-go@v1.0.0/pkg/client/msp/example_test.go:184:1","message":"ExampleEnrollWithAttributeRequests refers to unknown identifier: EnrollWithAttributeRequests","source":"\nfunc ExampleEnrollWithAttributeRequests() {\n\tctx := mockClientProvider()"}]}
{"created_at":"2023-06-22 17:17:51.333111 UTC","module_path":"k8s.io/kube-openapi","version":"v0.0.0-20230614213217-ba0abe644833","sort_version":"0,0,0,~20230614213217-ba0abe644833","commit_time":"2023-06-14 21:32:17 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"k8s.io/kube-openapi/pkg/idl_test [k8s.io/kube-openapi/pkg/idl.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/k8s.io/kube-openapi@v0.0.0-20230614213217-ba0abe644833/pkg/idl/listtype_test.go:22:1","message":"ExampleListType_map refers to unknown identifier: ListType","source":"// attribute is used to specify that Name is the key of the map.\nfunc ExampleListType_map() {\n\ttype SomeStruct struct {"},{"package_id":"k8s.io/kube-openapi/pkg/idl_test [k8s.io/kube-openapi/pkg/idl.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/k8s.io/kube-openapi@v0.0.0-20230614213217-ba0abe644833/pkg/idl/listtype_test.go:37:1","message":"ExampleListType_set refers to unknown identifier: ListType","source":"// duplicated.\nfunc ExampleListType_set() {\n\ttype SomeAPI struct {"},{"package_id":"k8s.io/kube-openapi/pkg/idl_test [k8s.io/kube-openapi/pkg/idl.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/k8s.io/kube-openapi@v0.0.0-20230614213217-ba0abe644833/pkg/idl/listtype_test.go:46:1","message":"ExampleListType_atomic refers to unknown identifier: ListType","source":"// specify that this list should be treated as a whole.\nfunc ExampleListType_atomic() {\n\ttype SomeStruct struct {"},{"package_id":"k8s.io/kube-openapi/pkg/idl_test [k8s.io/kube-openapi/pkg/idl.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/k8s.io/kube-openapi@v0.0.0-20230614213217-ba0abe644833/pkg/idl/maptype_test.go:21:1","message":"ExampleMapType_atomic refers to unknown identifier: MapType","source":"// specify that this map should be treated as a whole.\nfunc ExampleMapType_atomic() {\n\ttype SomeAPI struct {"},{"package_id":"k8s.io/kube-openapi/pkg/idl_test [k8s.io/kube-openapi/pkg/idl.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/k8s.io/kube-openapi@v0.0.0-20230614213217-ba0abe644833/pkg/idl/structtype_test.go:21:1","message":"ExampleStructType_atomic refers to unknown identifier: StructType","source":"// specify that this struct should be treated as a whole.\nfunc ExampleStructType_atomic() {\n\ttype SomeStruct struct {"}]}
{"created_at":"2023-06-22 17:41:29.010647 UTC","module_path":"github.com/JeffreyRichter/enum","version":"v0.0.0-20180725232043-2567042f9cda","sort_version":"0,0,0,~20180725232043-2567042f9cda","commit_time":"2018-07-25 23:20:43 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/enum_test [synthetic/enum.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/JeffreyRichter/enum@v0.0.0-20180725232043-2567042f9cda/enum/enum_test.go:70:1","message":"ExampleIdiomaticEnum refers to unknown identifier: IdiomaticEnum","source":"\nfunc ExampleIdiomaticEnum() {\n\tvar c ColorIdiomaticEnum = ColorRed"},{"package_id":"synthetic/enum_test [synthetic/enum.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/JeffreyRichter/enum@v0.0.0-20180725232043-2567042f9cda/enum/enum_test.go:159:1","message":"ExampleStructEnum refers to unknown identifier: StructEnum","source":"\nfunc ExampleStructEnum() {\n\tvar c ColorStruct = EColorStruct.Red"},{"package_id":"synthetic/enum_test [synthetic/enum.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/JeffreyRichter/enum@v0.0.0-20180725232043-2567042f9cda/enum/enum_test.go:271:1","message":"ExampleReflectionEnum refers to unknown identifier: ReflectionEnum","source":"\nfunc ExampleReflectionEnum() {\n\tvar c Color = EColor.Red()"},{"package_id":"synthetic/enum_test [synthetic/enum.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/JeffreyRichter/enum@v0.0.0-20180725232043-2567042f9cda/enum/enum_test.go:345:1","message":"ExampleStringEnum refers to unknown identifier: StringEnum","source":"\nfunc ExampleStringEnum() {\n\tvar p Protocol = EProtocol.TCP()"},{"package_id":"synthetic/enum_test [synthetic/enum.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/JeffreyRichter/enum@v0.0.0-20180725232043-2567042f9cda/enum/enum_test.go:420:1","message":"ExampleUintFlags refers to unknown identifier: UintFlags","source":"\nfunc ExampleUintFlags() {\n\tvar a Access = EAccess.Write() | EAccess.Read()"}]}
{"created_at":"2023-06-22 17:52:44.527338 UTC","module_path":"github.com/SENERGY-Platform/platform-connector-lib","version":"v0.0.0-20230516110647-6795752e65e9","sort_version":"0,0,0,~20230516110647-6795752e65e9","commit_time":"2023-05-16 11:06:47 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/SENERGY-Platform/platform-connector-lib/marshalling/xml [github.com/SENERGY-Platform/platform-connector-lib/marshalling/xml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/SENERGY-Platform/platform-connector-lib@v0.0.0-20230516110647-6795752e65e9/marshalling/xml/marshal_test.go:9:1","message":"ExampleMarshalPrimitiveInt refers to unknown identifier: MarshalPrimitiveInt","source":"\nfunc ExampleMarshalPrimitiveInt() {\n\tvalue := 24"},{"package_id":"github.com/SENERGY-Platform/platform-connector-lib/marshalling/xml [github.com/SENERGY-Platform/platform-connector-lib/marshalling/xml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/SENERGY-Platform/platform-connector-lib@v0.0.0-20230516110647-6795752e65e9/marshalling/xml/marshal_test.go:24:1","message":"ExampleMarshalPrimitiveFloat refers to unknown identifier: MarshalPrimitiveFloat","source":"\nfunc ExampleMarshalPrimitiveFloat() {\n\tvalue := 2.4"},{"package_id":"github.com/SENERGY-Platform/platform-connector-lib/marshalling/xml [github.com/SENERGY-Platform/platform-connector-lib/marshalling/xml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/SENERGY-Platform/platform-connector-lib@v0.0.0-20230516110647-6795752e65e9/marshalling/xml/marshal_test.go:39:1","message":"ExampleMarshalPrimitiveString refers to unknown identifier: MarshalPrimitiveString","source":"\nfunc ExampleMarshalPrimitiveString() {\n\tvalue := \"foo\""},{"package_id":"github.com/SENERGY-Platform/platform-connector-lib/marshalling/xml [github.com/SENERGY-Platform/platform-connector-lib/marshalling/xml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/SENERGY-Platform/platform-connector-lib@v0.0.0-20230516110647-6795752e65e9/marshalling/xml/marshal_test.go:54:1","message":"ExampleMarshalPrimitiveBool refers to unknown identifier: MarshalPrimitiveBool","source":"\nfunc ExampleMarshalPrimitiveBool() {\n\tvalue := true"},{"package_id":"github.com/SENERGY-Platform/platform-connector-lib/marshalling/xml [github.com/SENERGY-Platform/platform-connector-lib/marshalling/xml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/SENERGY-Platform/platform-connector-lib@v0.0.0-20230516110647-6795752e65e9/marshalling/xml/marshal_test.go:69:1","message":"ExampleMarshal refers to unknown identifier: Marshal","source":"\nfunc ExampleMarshal() {\n\tvalue := map[string]interface{}{\"-attr\": \"attrVal\", \"body\": \"bodyVal\"}"}]}
{"created_at":"2023-06-22 17:21:37.522772 UTC","module_path":"github.com/codeskyblue/go-sh","version":"v0.0.0-20200712050446-30169cf553fe","sort_version":"0,0,0,~20200712050446-30169cf553fe","commit_time":"2020-07-12 05:04:46 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/codeskyblue/go-sh [github.com/codeskyblue/go-sh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/codeskyblue/go-sh@v0.0.0-20200712050446-30169cf553fe/sh_test.go:95:1","message":"Example should be niladic","source":"*/\nfunc Example(t *testing.T) {\n\ts := NewSession()"},{"package_id":"github.com/codeskyblue/go-sh_test [github.com/codeskyblue/go-sh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/codeskyblue/go-sh@v0.0.0-20200712050446-30169cf553fe/example_test.go:14:1","message":"ExampleCommandPipe refers to unknown identifier: CommandPipe","source":"\nfunc ExampleCommandPipe() {\n\tout, err := sh.Command(\"echo\", \"-n\", \"hi\").Command(\"wc\", \"-c\").Output()"},{"package_id":"github.com/codeskyblue/go-sh_test [github.com/codeskyblue/go-sh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/codeskyblue/go-sh@v0.0.0-20200712050446-30169cf553fe/example_test.go:19:1","message":"ExampleCommandSetDir refers to unknown identifier: CommandSetDir","source":"\nfunc ExampleCommandSetDir() {\n\tout, err := sh.Command(\"pwd\", sh.Dir(\"/\")).Output()"},{"package_id":"github.com/codeskyblue/go-sh_test [github.com/codeskyblue/go-sh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/codeskyblue/go-sh@v0.0.0-20200712050446-30169cf553fe/test_test.go:45:1","message":"ExampleShellTest should be niladic","source":"\nfunc ExampleShellTest(t *testing.T) {\n\t// test -L"},{"package_id":"github.com/codeskyblue/go-sh_test [github.com/codeskyblue/go-sh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/codeskyblue/go-sh@v0.0.0-20200712050446-30169cf553fe/test_test.go:45:1","message":"ExampleShellTest refers to unknown identifier: ShellTest","source":"\nfunc ExampleShellTest(t *testing.T) {\n\t// test -L"}]}
{"created_at":"2023-06-22 17:42:57.217249 UTC","module_path":"github.com/rwxrob/to","version":"v0.12.1","sort_version":"0,a12,1~","commit_time":"2022-12-01 02:15:16 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/rwxrob/to_test [github.com/rwxrob/to.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rwxrob/to@v0.12.1/to_test.go:95:1","message":"ExampleDedent_simple refers to unknown identifier: Dedent","source":"\nfunc ExampleDedent_simple() {\n\tfmt.Printf(\"%q\\n\", to.Dedented(\"\\n    foo\\n    bar\"))"},{"package_id":"github.com/rwxrob/to_test [github.com/rwxrob/to.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rwxrob/to@v0.12.1/to_test.go:101:1","message":"ExampleDedent_tabs_or_Spaces refers to unknown identifier: Dedent","source":"\nfunc ExampleDedent_tabs_or_Spaces() {\n\tfmt.Printf(\"%q\\n\", to.Dedented(\"\\n\\t\\tfoo\\n\\t\\tbar\"))"},{"package_id":"github.com/rwxrob/to_test [github.com/rwxrob/to.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rwxrob/to@v0.12.1/to_test.go:107:1","message":"ExampleDedent_multiple_Blank_Lines refers to unknown identifier: Dedent","source":"\nfunc ExampleDedent_multiple_Blank_Lines() {\n\tfmt.Printf(\"%q\\n\", to.Dedented(\"\\n\\n   \\n\\n    foo\\n    bar\"))"},{"package_id":"github.com/rwxrob/to_test [github.com/rwxrob/to.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rwxrob/to@v0.12.1/to_test.go:115:1","message":"ExampleDedent_accidental_Chop refers to unknown identifier: Dedent","source":"\nfunc ExampleDedent_accidental_Chop() {\n\tfmt.Printf(\"%q\\n\", to.Dedented(\"\\n\\n   \\n\\n    foo\\n   bar\"))"},{"package_id":"github.com/rwxrob/to_test [github.com/rwxrob/to.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rwxrob/to@v0.12.1/to_test.go:121:1","message":"ExampleDedent_single_blank_line refers to unknown identifier: Dedent","source":"\nfunc ExampleDedent_single_blank_line() {\n\tfmt.Printf(\"%q\\n\", to.Dedented(\"    \\n\"))"}]}
{"created_at":"2023-06-22 17:26:57.114029 UTC","module_path":"github.com/elastic/go-elasticsearch/v6","version":"v6.8.10","sort_version":"6,8,a10~","commit_time":"2020-06-09 08:53:44 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/elastic/go-elasticsearch/v6/estransport [github.com/elastic/go-elasticsearch/v6/estransport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/elastic/go-elasticsearch/v6@v6.8.10/estransport/discovery_internal_test.go:35:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := srv.ListenAndServe(); err != nil \u0026\u0026 err != http.ErrServerClosed {\n\t\t\tt.Fatalf(\"Unable to start server: %s\", err)\n\t\t}"},{"package_id":"github.com/elastic/go-elasticsearch/v6/estransport [github.com/elastic/go-elasticsearch/v6/estransport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/elastic/go-elasticsearch/v6@v6.8.10/estransport/discovery_internal_test.go:40:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := srvTLS.ListenAndServeTLS(\"testdata/cert.pem\", \"testdata/key.pem\"); err != nil \u0026\u0026 err != http.ErrServerClosed {\n\t\t\tt.Fatalf(\"Unable to start server: %s\", err)\n\t\t}"},{"package_id":"github.com/elastic/go-elasticsearch/v6/estransport [github.com/elastic/go-elasticsearch/v6/estransport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/elastic/go-elasticsearch/v6@v6.8.10/estransport/logger_internal_test.go:62:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"Unexpected error: %s\", err)\n\t\t\t\t}"},{"package_id":"github.com/elastic/go-elasticsearch/v6/esutil [github.com/elastic/go-elasticsearch/v6/esutil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/elastic/go-elasticsearch/v6@v6.8.10/esutil/bulk_indexer_internal_test.go:94:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"Unexpected error: %s\", err)\n\t\t\t\t}"},{"package_id":"github.com/elastic/go-elasticsearch/v6/esutil [github.com/elastic/go-elasticsearch/v6/esutil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/elastic/go-elasticsearch/v6@v6.8.10/esutil/bulk_indexer_internal_test.go:495:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"Unexpected error: %s\", err)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:27:19.277102 UTC","module_path":"gopkg.in/doug-martin/goqu.v5","version":"v5.0.0","sort_version":"5,0,0~","commit_time":"2018-09-10 00:56:07 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/doug-martin/goqu.v5@v5.0.0/example_test.go:298:1","message":"ExampleRangeMethods_Ex refers to unknown field or method: RangeMethods.Ex","source":"\nfunc ExampleRangeMethods_Ex() {\n\tdb := goqu.New(\"default\", driver)"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/doug-martin/goqu.v5@v5.0.0/example_test.go:566:1","message":"ExampleDataset_WithCTE refers to unknown field or method: Dataset.WithCTE","source":"\nfunc ExampleDataset_WithCTE() {\n\tdb := goqu.New(\"default\", driver)"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/doug-martin/goqu.v5@v5.0.0/example_test.go:590:1","message":"ExampleDataset_ModifyWithCTE refers to unknown field or method: Dataset.ModifyWithCTE","source":"\nfunc ExampleDataset_ModifyWithCTE() {\n\tdb := goqu.New(\"default\", driver)"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/doug-martin/goqu.v5@v5.0.0/example_test.go:612:1","message":"ExampleDataset_WithCTERecursive refers to unknown field or method: Dataset.WithCTERecursive","source":"\nfunc ExampleDataset_WithCTERecursive() {\n\tdb := goqu.New(\"default\", driver)"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/doug-martin/goqu.v5@v5.0.0/example_test.go:1434:1","message":"ExampleDataset_ToInsertIgnore refers to unknown field or method: Dataset.ToInsertIgnore","source":"\nfunc ExampleDataset_ToInsertIgnore() {\n\tdb := goqu.New(\"mysql\", driver)"}]}
{"created_at":"2023-06-22 17:41:31.578497 UTC","module_path":"gomodules.xyz/go-sh","version":"v0.1.0","sort_version":"0,1,0~","commit_time":"2021-06-03 11:46:07 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"gomodules.xyz/go-sh [gomodules.xyz/go-sh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gomodules.xyz/go-sh@v0.1.0/sh_test.go:95:1","message":"Example should be niladic","source":"*/\nfunc Example(t *testing.T) {\n\ts := NewSession()"},{"package_id":"gomodules.xyz/go-sh_test [gomodules.xyz/go-sh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gomodules.xyz/go-sh@v0.1.0/example_test.go:14:1","message":"ExampleCommandPipe refers to unknown identifier: CommandPipe","source":"\nfunc ExampleCommandPipe() {\n\tout, err := sh.Command(\"echo\", \"-n\", \"hi\").Command(\"wc\", \"-c\").Output()"},{"package_id":"gomodules.xyz/go-sh_test [gomodules.xyz/go-sh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gomodules.xyz/go-sh@v0.1.0/example_test.go:19:1","message":"ExampleCommandSetDir refers to unknown identifier: CommandSetDir","source":"\nfunc ExampleCommandSetDir() {\n\tout, err := sh.Command(\"pwd\", sh.Dir(\"/\")).Output()"},{"package_id":"gomodules.xyz/go-sh_test [gomodules.xyz/go-sh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gomodules.xyz/go-sh@v0.1.0/test_test.go:45:1","message":"ExampleShellTest should be niladic","source":"\nfunc ExampleShellTest(t *testing.T) {\n\t// test -L"},{"package_id":"gomodules.xyz/go-sh_test [gomodules.xyz/go-sh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gomodules.xyz/go-sh@v0.1.0/test_test.go:45:1","message":"ExampleShellTest refers to unknown identifier: ShellTest","source":"\nfunc ExampleShellTest(t *testing.T) {\n\t// test -L"}]}
{"created_at":"2023-06-22 17:37:57.806397 UTC","module_path":"github.com/getlantern/idletiming","version":"v0.0.0-20201229174729-33d04d220c4e","sort_version":"0,0,0,~20201229174729-33d04d220c4e","commit_time":"2020-12-29 17:47:29 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/getlantern/idletiming [github.com/getlantern/idletiming.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/getlantern/idletiming@v0.0.0-20201229174729-33d04d220c4e/idletiming_test.go:59:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Unable to accept: %s\", err)\n\t\t}"},{"package_id":"github.com/getlantern/idletiming [github.com/getlantern/idletiming.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/getlantern/idletiming@v0.0.0-20201229174729-33d04d220c4e/idletiming_test.go:64:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif _, err := io.Copy(ioutil.Discard, conn); err != nil {\n\t\t\t\tt.Fatalf(\"Unable to discard data: %v\", err)\n\t\t\t}"},{"package_id":"github.com/getlantern/idletiming [github.com/getlantern/idletiming.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/getlantern/idletiming@v0.0.0-20201229174729-33d04d220c4e/idletiming_test.go:168:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Unable to accept: %s\", err)\n\t\t}"},{"package_id":"github.com/getlantern/idletiming [github.com/getlantern/idletiming.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/getlantern/idletiming@v0.0.0-20201229174729-33d04d220c4e/idletiming_test.go:296:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Unable to accept: %s\", err)\n\t\t}"},{"package_id":"github.com/getlantern/idletiming [github.com/getlantern/idletiming.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/getlantern/idletiming@v0.0.0-20201229174729-33d04d220c4e/idletiming_test.go:300:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif _, err := io.Copy(conn, conn); err != nil {\n\t\t\t\tt.Fatalf(\"Unable to discard data: %v\", err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:36:35.043742 UTC","module_path":"github.com/stretchr/stew","version":"v0.0.0-20130812190256-80ef0842b48b","sort_version":"0,0,0,~20130812190256-80ef0842b48b","commit_time":"2013-08-12 19:02:56 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/strings [synthetic/strings.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stretchr/stew@v0.0.0-20130812190256-80ef0842b48b/strings/bytes_test.go:8:1","message":"Teststrings_MergeBytes has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc Teststrings_MergeBytes(t *testing.T) {\n"},{"package_id":"synthetic/strings [synthetic/strings.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stretchr/stew@v0.0.0-20130812190256-80ef0842b48b/strings/bytes_test.go:14:1","message":"Teststrings_JoinBytes has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc Teststrings_JoinBytes(t *testing.T) {\n"},{"package_id":"synthetic/strings [synthetic/strings.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stretchr/stew@v0.0.0-20130812190256-80ef0842b48b/strings/strings_test.go:41:1","message":"Teststrings_MergeStrings has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc Teststrings_MergeStrings(t *testing.T) {\n"},{"package_id":"synthetic/strings [synthetic/strings.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stretchr/stew@v0.0.0-20130812190256-80ef0842b48b/strings/strings_test.go:47:1","message":"Teststrings_MergeStringsReversed has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc Teststrings_MergeStringsReversed(t *testing.T) {\n"},{"package_id":"synthetic/strings [synthetic/strings.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stretchr/stew@v0.0.0-20130812190256-80ef0842b48b/strings/strings_test.go:53:1","message":"Teststrings_JoinStrings has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc Teststrings_JoinStrings(t *testing.T) {\n"}]}
{"created_at":"2023-06-22 17:41:34.894452 UTC","module_path":"github.com/r3labs/diff/v3","version":"v3.0.1","sort_version":"3,0,1~","commit_time":"2023-01-18 12:36:21 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/r3labs/diff/v3_test [github.com/r3labs/diff/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/r3labs/diff/v3@v3.0.1/diff_examples_test.go:13:1","message":"ExamplePatchWithErrors refers to unknown identifier: PatchWithErrors","source":"//when trying to apply either a valid or invalid changelog\nfunc ExamplePatchWithErrors() {\n"},{"package_id":"github.com/r3labs/diff/v3_test [github.com/r3labs/diff/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/r3labs/diff/v3@v3.0.1/diff_examples_test.go:173:1","message":"ExamplePrimitiveSlice refers to unknown identifier: PrimitiveSlice","source":"//ExamplePrimitiveSlice demonstrates working with arrays and primitive values\nfunc ExamplePrimitiveSlice() {\n\tsla := []string{"},{"package_id":"github.com/r3labs/diff/v3_test [github.com/r3labs/diff/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/r3labs/diff/v3@v3.0.1/diff_examples_test.go:257:1","message":"ExampleComplexSlicePatch refers to unknown identifier: ComplexSlicePatch","source":"//      the default.\nfunc ExampleComplexSlicePatch() {\n"},{"package_id":"github.com/r3labs/diff/v3_test [github.com/r3labs/diff/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/r3labs/diff/v3@v3.0.1/diff_examples_test.go:319:1","message":"ExampleComplexMapPatch refers to unknown identifier: ComplexMapPatch","source":"//ExampleComplexMapPatch demonstrates how to use the Patch function for complex slices.\nfunc ExampleComplexMapPatch() {\n"},{"package_id":"github.com/r3labs/diff/v3_test [github.com/r3labs/diff/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/r3labs/diff/v3@v3.0.1/diff_examples_test.go:596:1","message":"ExamplePrivatePtr refers to unknown identifier: PrivatePtr","source":"\nfunc ExamplePrivatePtr() {\n\ttype number struct {"}]}
{"created_at":"2023-06-22 18:00:54.362561 UTC","module_path":"github.com/Qitmeer/qng","version":"v1.0.23","sort_version":"1,0,a23~","commit_time":"2023-06-16 08:47:17 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/Qitmeer/qng/common/encode/base58_test [github.com/Qitmeer/qng/common/encode/base58.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Qitmeer/qng@v1.0.23/common/encode/base58/example_test.go:43:1","message":"ExampleCheckDecodeBtc refers to unknown identifier: CheckDecodeBtc","source":"// This example demonstrates how to decode Base58Check encoded data.\nfunc ExampleCheckDecodeBtc() {\n\t// Decode an example Base58Check encoded data."},{"package_id":"github.com/Qitmeer/qng/common/encode/base58_test [github.com/Qitmeer/qng/common/encode/base58.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Qitmeer/qng@v1.0.23/common/encode/base58/example_test.go:61:1","message":"ExampleCheckEncodeBtc1 refers to unknown identifier: CheckEncodeBtc1","source":"\nfunc ExampleCheckEncodeBtc1() {\n\t// Encode example data with the Base58Check encoding scheme."},{"package_id":"github.com/Qitmeer/qng/common/encode/base58_test [github.com/Qitmeer/qng/common/encode/base58.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Qitmeer/qng@v1.0.23/common/encode/base58/example_test.go:75:1","message":"ExampleCheckEncodeBtc refers to unknown identifier: CheckEncodeBtc","source":"// scheme.\nfunc ExampleCheckEncodeBtc() {\n\t// Encode example data with the Base58Check encoding scheme."},{"package_id":"github.com/Qitmeer/qng/common/encode/base58_test [github.com/Qitmeer/qng/common/encode/base58.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Qitmeer/qng@v1.0.23/common/encode/base58/example_test.go:87:1","message":"ExampleCheckEncodeDcr refers to unknown identifier: CheckEncodeDcr","source":"\nfunc ExampleCheckEncodeDcr() {\n\t// Encode example data with the Base58Check encoding scheme."},{"package_id":"github.com/Qitmeer/qng/common/encode/base58_test [github.com/Qitmeer/qng/common/encode/base58.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Qitmeer/qng@v1.0.23/common/encode/base58/example_test.go:101:1","message":"ExampleCheckDecodeDcr refers to unknown identifier: CheckDecodeDcr","source":"\nfunc ExampleCheckDecodeDcr() {\n\tencoded := \"2uLtqkeVgFqTUBnjicK8o\""}]}
{"created_at":"2023-06-22 17:31:55.537971 UTC","module_path":"github.com/r3labs/diff/v2","version":"v2.15.1","sort_version":"2,a15,1~","commit_time":"2022-03-21 16:05:36 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/r3labs/diff/v2_test [github.com/r3labs/diff/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/r3labs/diff/v2@v2.15.1/diff_examples_test.go:13:1","message":"ExamplePatchWithErrors refers to unknown identifier: PatchWithErrors","source":"//when trying to apply either a valid or invalid changelog\nfunc ExamplePatchWithErrors() {\n"},{"package_id":"github.com/r3labs/diff/v2_test [github.com/r3labs/diff/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/r3labs/diff/v2@v2.15.1/diff_examples_test.go:173:1","message":"ExamplePrimitiveSlice refers to unknown identifier: PrimitiveSlice","source":"//ExamplePrimitiveSlice demonstrates working with arrays and primitive values\nfunc ExamplePrimitiveSlice() {\n\tsla := []string{"},{"package_id":"github.com/r3labs/diff/v2_test [github.com/r3labs/diff/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/r3labs/diff/v2@v2.15.1/diff_examples_test.go:257:1","message":"ExampleComplexSlicePatch refers to unknown identifier: ComplexSlicePatch","source":"//      the default.\nfunc ExampleComplexSlicePatch() {\n"},{"package_id":"github.com/r3labs/diff/v2_test [github.com/r3labs/diff/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/r3labs/diff/v2@v2.15.1/diff_examples_test.go:319:1","message":"ExampleComplexMapPatch refers to unknown identifier: ComplexMapPatch","source":"//ExampleComplexMapPatch demonstrates how to use the Patch function for complex slices.\nfunc ExampleComplexMapPatch() {\n"},{"package_id":"github.com/r3labs/diff/v2_test [github.com/r3labs/diff/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/r3labs/diff/v2@v2.15.1/diff_examples_test.go:596:1","message":"ExamplePrivatePtr refers to unknown identifier: PrivatePtr","source":"\nfunc ExamplePrivatePtr() {\n\ttype number struct {"}]}
{"created_at":"2023-06-22 17:29:07.157319 UTC","module_path":"gopkg.in/doug-martin/goqu.v4","version":"v4.2.0","sort_version":"4,2,0~","commit_time":"2017-12-27 16:44:32 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/doug-martin/goqu.v4@v4.2.0/example_test.go:298:1","message":"ExampleRangeMethods_Ex refers to unknown field or method: RangeMethods.Ex","source":"\nfunc ExampleRangeMethods_Ex() {\n\tdb := goqu.New(\"default\", driver)"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/doug-martin/goqu.v4@v4.2.0/example_test.go:566:1","message":"ExampleDataset_WithCTE refers to unknown field or method: Dataset.WithCTE","source":"\nfunc ExampleDataset_WithCTE() {\n\tdb := goqu.New(\"default\", driver)"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/doug-martin/goqu.v4@v4.2.0/example_test.go:590:1","message":"ExampleDataset_ModifyWithCTE refers to unknown field or method: Dataset.ModifyWithCTE","source":"\nfunc ExampleDataset_ModifyWithCTE() {\n\tdb := goqu.New(\"default\", driver)"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/doug-martin/goqu.v4@v4.2.0/example_test.go:612:1","message":"ExampleDataset_WithCTERecursive refers to unknown field or method: Dataset.WithCTERecursive","source":"\nfunc ExampleDataset_WithCTERecursive() {\n\tdb := goqu.New(\"default\", driver)"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/doug-martin/goqu.v4@v4.2.0/example_test.go:1434:1","message":"ExampleDataset_ToInsertIgnore refers to unknown field or method: Dataset.ToInsertIgnore","source":"\nfunc ExampleDataset_ToInsertIgnore() {\n\tdb := goqu.New(\"mysql\", driver)"}]}
{"created_at":"2023-06-22 17:34:08.965593 UTC","module_path":"github.com/smira/go-ftp-protocol","version":"v0.0.0-20140829150050-066b75c2b70d","sort_version":"0,0,0,~20140829150050-066b75c2b70d","commit_time":"2014-08-29 15:00:50 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/protocol [synthetic/protocol.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/smira/go-ftp-protocol@v0.0.0-20140829150050-066b75c2b70d/protocol/protocol_test.go:67:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic/protocol [synthetic/protocol.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/smira/go-ftp-protocol@v0.0.0-20140829150050-066b75c2b70d/protocol/protocol_test.go:71:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif resp.StatusCode != 200 {\n\t\t\t\t\tt.Fatalf(\"resp.StatusCode 200 != %d\", resp.StatusCode)\n\t\t\t\t}"},{"package_id":"synthetic/protocol [synthetic/protocol.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/smira/go-ftp-protocol@v0.0.0-20140829150050-066b75c2b70d/protocol/protocol_test.go:76:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic/protocol [synthetic/protocol.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/smira/go-ftp-protocol@v0.0.0-20140829150050-066b75c2b70d/protocol/protocol_test.go:81:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic/protocol [synthetic/protocol.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/smira/go-ftp-protocol@v0.0.0-20140829150050-066b75c2b70d/protocol/protocol_test.go:85:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif !strings.HasPrefix(string(content), \"See http://www.debian.org/ for information about Debian GNU/Linux.\") {\n\t\t\t\t\tt.Fatalf(\"unexpected content: %s\", content)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:23:11.389139 UTC","module_path":"github.com/zensqlmonitor/go-mssqldb","version":"v0.0.0-20170730055629-e8fbf836e44e","sort_version":"0,0,0,~20170730055629-e8fbf836e44e","commit_time":"2017-07-30 05:56:29 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zensqlmonitor/go-mssqldb@v0.0.0-20170730055629-e8fbf836e44e/error_example_test.go:5:1","message":"ExampleError_1 refers to unknown field or method: Error.1","source":"\nfunc ExampleError_1() {\n\t// call a function that might return a mssql error"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zensqlmonitor/go-mssqldb@v0.0.0-20170730055629-e8fbf836e44e/error_example_test.go:20:1","message":"ExampleError_2 refers to unknown field or method: Error.2","source":"\nfunc ExampleError_2() {\n\t// call a function that might return a mssql error"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zensqlmonitor/go-mssqldb@v0.0.0-20170730055629-e8fbf836e44e/queries_go18_test.go:767:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zensqlmonitor/go-mssqldb@v0.0.0-20170730055629-e8fbf836e44e/queries_go18_test.go:771:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := db.PingContext(ctx); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zensqlmonitor/go-mssqldb@v0.0.0-20170730055629-e8fbf836e44e/queries_go18_test.go:777:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:19:26.044271 UTC","module_path":"github.com/Azure/azure-storage-blob-go","version":"v0.15.0","sort_version":"0,a15,0~","commit_time":"2022-04-28 06:39:35 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/Azure/azure-storage-blob-go/azblob [github.com/Azure/azure-storage-blob-go/azblob.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Azure/azure-storage-blob-go@v0.15.0/azblob/zt_examples_test.go:407:1","message":"ExampleContainerURL_SetContainerAccessPolicy refers to unknown field or method: ContainerURL.SetContainerAccessPolicy","source":"// This example shows how to manipulate a container's permissions.\nfunc ExampleContainerURL_SetContainerAccessPolicy() {\n\t// From the Azure portal, get your Storage account's name and account key."},{"package_id":"github.com/Azure/azure-storage-blob-go/azblob [github.com/Azure/azure-storage-blob-go/azblob.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Azure/azure-storage-blob-go@v0.15.0/azblob/zt_examples_test.go:1027:1","message":"ExampleUploadFileToBlockBlobAndDownloadItBack refers to unknown identifier: UploadFileToBlockBlobAndDownloadItBack","source":"// This example shows how to copy a large stream in blocks (chunks) to a block blob.\nfunc ExampleUploadFileToBlockBlobAndDownloadItBack() {\n\tfile, err := os.Open(\"BigFile.bin\") // Open the file we want to upload"},{"package_id":"github.com/Azure/azure-storage-blob-go/azblob [github.com/Azure/azure-storage-blob-go/azblob.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Azure/azure-storage-blob-go@v0.15.0/azblob/zt_examples_test.go:1085:1","message":"ExampleBlobUrl_Download refers to unknown identifier: BlobUrl","source":"// GetBlob call passing a range that starts from the last byte successfully read before the failure.\nfunc ExampleBlobUrl_Download() {\n\t// From the Azure portal, get your Storage account blob service URL endpoint."},{"package_id":"github.com/Azure/azure-storage-blob-go/azblob [github.com/Azure/azure-storage-blob-go/azblob.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Azure/azure-storage-blob-go@v0.15.0/azblob/zt_examples_test.go:1161:1","message":"ExampleLeaseContainer refers to unknown identifier: LeaseContainer","source":"// protects it from both modifications and deletions.\nfunc ExampleLeaseContainer() {\n\t// From the Azure portal, get your Storage account's name and account key."},{"package_id":"github.com/Azure/azure-storage-blob-go/azblob [github.com/Azure/azure-storage-blob-go/azblob.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Azure/azure-storage-blob-go@v0.15.0/azblob/zt_examples_test.go:1233:1","message":"ExampleListBlobsHierarchy refers to unknown identifier: ListBlobsHierarchy","source":"// This example shows how to list blobs with hierarchy, by using a delimiter.\nfunc ExampleListBlobsHierarchy() {\n\t// From the Azure portal, get your Storage account's name and account key."},{"package_id":"github.com/Azure/azure-storage-blob-go/azblob [github.com/Azure/azure-storage-blob-go/azblob.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Azure/azure-storage-blob-go@v0.15.0/azblob/zt_examples_test.go:1373:1","message":"ExampleMSILogin refers to unknown identifier: MSILogin","source":"\nfunc ExampleMSILogin() {\n\tvar accountName string"}]}
{"created_at":"2023-06-22 17:57:49.935549 UTC","module_path":"github.com/gy-games-libs/seelog","version":"v0.0.0-20170602050313-5ce18b61bbea","sort_version":"0,0,0,~20170602050313-5ce18b61bbea","commit_time":"2017-06-02 05:03:13 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gy-games-libs/seelog@v0.0.0-20170602050313-5ce18b61bbea/common_constraints_test.go:63:1","message":"TestlistConstraintsWithDuplicates has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestlistConstraintsWithDuplicates(t *testing.T) {\n\tduplicateList := []LogLevel{TraceLvl, DebugLvl, InfoLvl,"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gy-games-libs/seelog@v0.0.0-20170602050313-5ce18b61bbea/common_constraints_test.go:88:1","message":"TestlistConstraintsWithOffInList has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestlistConstraintsWithOffInList(t *testing.T) {\n\toffList := []LogLevel{TraceLvl, DebugLvl, Off}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gy-games-libs/seelog@v0.0.0-20170602050313-5ce18b61bbea/dispatch_filterdispatcher_test.go:31:1","message":"TestfilterDispatcher_Pass has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestfilterDispatcher_Pass(t *testing.T) {\n\twriter, _ := newBytesVerifier(t)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gy-games-libs/seelog@v0.0.0-20170602050313-5ce18b61bbea/dispatch_filterdispatcher_test.go:51:1","message":"TestfilterDispatcher_Deny has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestfilterDispatcher_Deny(t *testing.T) {\n\twriter, _ := newBytesVerifier(t)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gy-games-libs/seelog@v0.0.0-20170602050313-5ce18b61bbea/dispatch_splitdispatcher_test.go:42:1","message":"TestsplitDispatcher has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestsplitDispatcher(t *testing.T) {\n\twriter1, _ := newBytesVerifier(t)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gy-games-libs/seelog@v0.0.0-20170602050313-5ce18b61bbea/writers_formattedwriter_test.go:31:1","message":"TestformattedWriter has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestformattedWriter(t *testing.T) {\n\tformatStr := \"%Level %LEVEL %Msg\""}]}
{"created_at":"2023-06-22 17:43:10.400327 UTC","module_path":"github.com/rwxrob/vars","version":"v0.6.4","sort_version":"0,6,4~","commit_time":"2022-12-22 10:33:39 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/rwxrob/vars_test [github.com/rwxrob/vars.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rwxrob/vars@v0.6.4/vars_test.go:11:1","message":"ExampleVars refers to unknown identifier: Vars","source":"\nfunc ExampleVars() {\n\tm := vars.New()"},{"package_id":"github.com/rwxrob/vars_test [github.com/rwxrob/vars.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rwxrob/vars@v0.6.4/vars_test.go:23:1","message":"ExampleVars_Init refers to unknown identifier: Vars","source":"\nfunc ExampleVars_Init() {\n"},{"package_id":"github.com/rwxrob/vars_test [github.com/rwxrob/vars.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rwxrob/vars@v0.6.4/vars_test.go:39:1","message":"ExampleVars_Set refers to unknown identifier: Vars","source":"\nfunc ExampleVars_Set() {\n"},{"package_id":"github.com/rwxrob/vars_test [github.com/rwxrob/vars.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rwxrob/vars@v0.6.4/vars_test.go:59:1","message":"ExampleVars_Get refers to unknown identifier: Vars","source":"\nfunc ExampleVars_Get() {\n"},{"package_id":"github.com/rwxrob/vars_test [github.com/rwxrob/vars.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rwxrob/vars@v0.6.4/vars_test.go:78:1","message":"ExampleVars_UnmarshalText refers to unknown identifier: Vars","source":"\nfunc ExampleVars_UnmarshalText() {\n"},{"package_id":"github.com/rwxrob/vars_test [github.com/rwxrob/vars.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rwxrob/vars@v0.6.4/vars_test.go:97:1","message":"ExampleVars_MarshalText refers to unknown identifier: Vars","source":"\nfunc ExampleVars_MarshalText() {\n"}]}
{"created_at":"2023-06-22 17:58:22.906445 UTC","module_path":"github.com/gtechx/seelog","version":"v0.0.0-20190416064219-44c3d88be0d3","sort_version":"0,0,0,~20190416064219-44c3d88be0d3","commit_time":"2019-04-16 06:42:19 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gtechx/seelog@v0.0.0-20190416064219-44c3d88be0d3/common_constraints_test.go:63:1","message":"TestlistConstraintsWithDuplicates has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestlistConstraintsWithDuplicates(t *testing.T) {\n\tduplicateList := []LogLevel{TraceLvl, DebugLvl, InfoLvl,"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gtechx/seelog@v0.0.0-20190416064219-44c3d88be0d3/common_constraints_test.go:88:1","message":"TestlistConstraintsWithOffInList has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestlistConstraintsWithOffInList(t *testing.T) {\n\toffList := []LogLevel{TraceLvl, DebugLvl, Off}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gtechx/seelog@v0.0.0-20190416064219-44c3d88be0d3/dispatch_filterdispatcher_test.go:31:1","message":"TestfilterDispatcher_Pass has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestfilterDispatcher_Pass(t *testing.T) {\n\twriter, _ := newBytesVerifier(t)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gtechx/seelog@v0.0.0-20190416064219-44c3d88be0d3/dispatch_filterdispatcher_test.go:51:1","message":"TestfilterDispatcher_Deny has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestfilterDispatcher_Deny(t *testing.T) {\n\twriter, _ := newBytesVerifier(t)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gtechx/seelog@v0.0.0-20190416064219-44c3d88be0d3/dispatch_splitdispatcher_test.go:42:1","message":"TestsplitDispatcher has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestsplitDispatcher(t *testing.T) {\n\twriter1, _ := newBytesVerifier(t)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gtechx/seelog@v0.0.0-20190416064219-44c3d88be0d3/writers_formattedwriter_test.go:31:1","message":"TestformattedWriter has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestformattedWriter(t *testing.T) {\n\tformatStr := \"%Level %LEVEL %Msg\""}]}
{"created_at":"2023-06-22 17:20:22.074538 UTC","module_path":"github.com/mkideal/cli","version":"v0.2.7","sort_version":"0,2,7~","commit_time":"2021-07-11 06:01:47 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/mkideal/cli_test [github.com/mkideal/cli.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mkideal/cli@v0.2.7/example_test.go:273:1","message":"ExampleNumArgFunc_exactN refers to unknown identifier: NumArgFunc","source":"\nfunc ExampleNumArgFunc_exactN() {\n\ttype argT struct {"},{"package_id":"github.com/mkideal/cli_test [github.com/mkideal/cli.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mkideal/cli@v0.2.7/example_test.go:300:1","message":"ExampleNumArgFunc_atLeast refers to unknown identifier: NumArgFunc","source":"\nfunc ExampleNumArgFunc_atLeast() {\n\ttype argT struct {"},{"package_id":"github.com/mkideal/cli_test [github.com/mkideal/cli.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mkideal/cli@v0.2.7/example_test.go:327:1","message":"ExampleNumArgFunc_atMost refers to unknown identifier: NumArgFunc","source":"\nfunc ExampleNumArgFunc_atMost() {\n\ttype argT struct {"},{"package_id":"github.com/mkideal/cli_test [github.com/mkideal/cli.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mkideal/cli@v0.2.7/example_test.go:356:1","message":"ExampleNumOptionFunc_exactN refers to unknown identifier: NumOptionFunc","source":"\nfunc ExampleNumOptionFunc_exactN() {\n\ttype argT struct {"},{"package_id":"github.com/mkideal/cli_test [github.com/mkideal/cli.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mkideal/cli@v0.2.7/example_test.go:381:1","message":"ExampleNumOptionFunc_atLeast refers to unknown identifier: NumOptionFunc","source":"\nfunc ExampleNumOptionFunc_atLeast() {\n\ttype argT struct {"},{"package_id":"github.com/mkideal/cli_test [github.com/mkideal/cli.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mkideal/cli@v0.2.7/example_test.go:406:1","message":"ExampleNumOptionFunc_atMost refers to unknown identifier: NumOptionFunc","source":"\nfunc ExampleNumOptionFunc_atMost() {\n\ttype argT struct {"}]}
{"created_at":"2023-06-22 17:57:40.14943 UTC","module_path":"github.com/cristalhq/jwt","version":"v1.2.0","sort_version":"1,2,0~","commit_time":"2020-04-19 10:22:53 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/cristalhq/jwt_test [github.com/cristalhq/jwt.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cristalhq/jwt@v1.2.0/example_build_test.go:10:1","message":"Example_BuildSimple has malformed example suffix: BuildSimple","source":"\nfunc Example_BuildSimple() {\n\tkey := []byte(`secret`)"},{"package_id":"github.com/cristalhq/jwt_test [github.com/cristalhq/jwt.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cristalhq/jwt@v1.2.0/example_build_test.go:49:1","message":"Example_BuildUserClaims has malformed example suffix: BuildUserClaims","source":"\nfunc Example_BuildUserClaims() {\n\tkey := []byte(`secret`)"},{"package_id":"github.com/cristalhq/jwt_test [github.com/cristalhq/jwt.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cristalhq/jwt@v1.2.0/example_build_test.go:83:1","message":"Example_DummyClaims has malformed example suffix: DummyClaims","source":"\nfunc Example_DummyClaims() {\n\tkey := []byte(`secret`)"},{"package_id":"github.com/cristalhq/jwt_test [github.com/cristalhq/jwt.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cristalhq/jwt@v1.2.0/example_parse_test.go:9:1","message":"Example_Parse has malformed example suffix: Parse","source":"\nfunc Example_Parse() {\n\tt := `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJhZG1pbiIsImp0aSI6InJhbmRvbS11bmlxdWUtc3RyaW5nIn0.dv9-XpY9P8ypm1uWQwB6eKvq3jeyodLA7brhjsf4JVs`"},{"package_id":"github.com/cristalhq/jwt_test [github.com/cristalhq/jwt.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cristalhq/jwt@v1.2.0/example_parse_test.go:38:1","message":"Example_ParseAndVerify has malformed example suffix: ParseAndVerify","source":"\nfunc Example_ParseAndVerify() {\n\tkey := []byte(`secret`)"},{"package_id":"github.com/cristalhq/jwt_test [github.com/cristalhq/jwt.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cristalhq/jwt@v1.2.0/example_validate_test.go:10:1","message":"Example_Validate has malformed example suffix: Validate","source":"\nfunc Example_Validate() {\n\tt := `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJhZG1pbiIsImp0aSI6InJhbmRvbS11bmlxdWUtc3RyaW5nIn0.dv9-XpY9P8ypm1uWQwB6eKvq3jeyodLA7brhjsf4JVs`"}]}
{"created_at":"2023-06-22 17:59:14.021806 UTC","module_path":"github.com/cyrus-and/gdb","version":"v0.0.0-20230321224603-9424cb2f2a86","sort_version":"0,0,0,~20230321224603-9424cb2f2a86","commit_time":"2023-03-21 22:46:03 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/cyrus-and/gdb [github.com/cyrus-and/gdb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cyrus-and/gdb@v0.0.0-20230321224603-9424cb2f2a86/interrupt_test.go:33:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := gdb.Interrupt(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/cyrus-and/gdb [github.com/cyrus-and/gdb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cyrus-and/gdb@v0.0.0-20230321224603-9424cb2f2a86/io_test.go:28:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/cyrus-and/gdb [github.com/cyrus-and/gdb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cyrus-and/gdb@v0.0.0-20230321224603-9424cb2f2a86/io_test.go:33:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tfmt.Printf(\"'%s'\\n\", []byte(expectedIn))\n\t\t\tt.Fatal(\"should read back the input\")\n\t\t}"},{"package_id":"github.com/cyrus-and/gdb [github.com/cyrus-and/gdb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cyrus-and/gdb@v0.0.0-20230321224603-9424cb2f2a86/io_test.go:39:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/cyrus-and/gdb [github.com/cyrus-and/gdb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cyrus-and/gdb@v0.0.0-20230321224603-9424cb2f2a86/io_test.go:44:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tfmt.Printf(\"'%s'\\n\", []byte(expectedOut))\n\t\t\tt.Fatal(\"should read the proper output\")\n\t\t}"},{"package_id":"github.com/cyrus-and/gdb [github.com/cyrus-and/gdb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cyrus-and/gdb@v0.0.0-20230321224603-9424cb2f2a86/io_test.go:50:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err == nil {\n\t\t\tt.Fatal(\"read should fail\")\n\t\t}"}]}
{"created_at":"2023-06-22 17:18:36.765404 UTC","module_path":"github.com/linkedin/goavro","version":"v2.1.0+incompatible","sort_version":"2,1,0~","commit_time":"2018-01-31 18:26:24 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/linkedin/goavro@v2.1.0+incompatible/record_test.go:470:1","message":"ExampleRecordRecursiveRoundTrip refers to unknown identifier: RecordRecursiveRoundTrip","source":"\nfunc ExampleRecordRecursiveRoundTrip() {\n\tcodec, err := NewCodec(`"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/linkedin/goavro@v2.1.0+incompatible/record_test.go:517:1","message":"ExampleBinaryFromNative refers to unknown identifier: BinaryFromNative","source":"\nfunc ExampleBinaryFromNative() {\n\tcodec, err := NewCodec(`"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/linkedin/goavro@v2.1.0+incompatible/record_test.go:551:1","message":"ExampleNativeFromBinary refers to unknown identifier: NativeFromBinary","source":"\nfunc ExampleNativeFromBinary() {\n\tcodec, err := NewCodec(`"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/linkedin/goavro@v2.1.0+incompatible/record_test.go:577:1","message":"ExampleNativeFromTextual refers to unknown identifier: NativeFromTextual","source":"\nfunc ExampleNativeFromTextual() {\n\tcodec, err := NewCodec(`"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/linkedin/goavro@v2.1.0+incompatible/record_test.go:603:1","message":"ExampleTextualFromNative refers to unknown identifier: TextualFromNative","source":"\nfunc ExampleTextualFromNative() {\n\tcodec, err := NewCodec(`"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/linkedin/goavro@v2.1.0+incompatible/union_test.go:175:1","message":"ExampleUnion3 refers to unknown identifier: Union3","source":"\nfunc ExampleUnion3() {\n\t// Imagine a record field with the following union type. I have seen this"}]}
{"created_at":"2023-06-22 17:31:58.04574 UTC","module_path":"github.com/gochain/gochain/v3","version":"v3.4.9","sort_version":"3,4,9~","commit_time":"2021-09-11 13:44:37 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/gochain/gochain/v3/core [github.com/gochain/gochain/v3/core.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gochain/gochain/v3@v3.4.9/core/blockchain_test.go:1086:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif ch != block.Hash() {\n\t\t\t\t\tt.Fatalf(\"unknown canonical hash, want %s, got %s\", block.Hash().Hex(), ch.Hex())\n\t\t\t\t}"},{"package_id":"github.com/gochain/gochain/v3/core [github.com/gochain/gochain/v3/core.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gochain/gochain/v3@v3.4.9/core/blockchain_test.go:1090:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif fb == nil {\n\t\t\t\t\tt.Fatalf(\"unable to retrieve block %d for canonical hash: %s\", block.NumberU64(), ch.Hex())\n\t\t\t\t}"},{"package_id":"github.com/gochain/gochain/v3/core [github.com/gochain/gochain/v3/core.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gochain/gochain/v3@v3.4.9/core/blockchain_test.go:1093:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif fb.Hash() != block.Hash() {\n\t\t\t\t\tt.Fatalf(\"invalid block hash for block %d, want %s, got %s\", block.NumberU64(), block.Hash().Hex(), fb.Hash().Hex())\n\t\t\t\t}"},{"package_id":"github.com/gochain/gochain/v3/ethdb_test [github.com/gochain/gochain/v3/ethdb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gochain/gochain/v3@v3.4.9/ethdb/segment_set_test.go:65:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif s, err := ss.Acquire(\"0002\"); err != nil {\n\t\t\tt.Fatal(err)\n\t\t} else if s != segment2 {"},{"package_id":"github.com/gochain/gochain/v3/ethdb_test [github.com/gochain/gochain/v3/ethdb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gochain/gochain/v3@v3.4.9/ethdb/segment_set_test.go:67:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t} else if s != segment2 {\n\t\t\tt.Fatal(\"unexpected segment(2)\")\n\t\t}"},{"package_id":"github.com/gochain/gochain/v3/p2p/simulations [github.com/gochain/gochain/v3/p2p/simulations.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gochain/gochain/v3@v3.4.9/p2p/simulations/mocker_test.go:112:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\twg.Done()\n\t\t\t\tt.Fatalf(\"Timeout waiting for nodes being started up!\")\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:16:42.112001 UTC","module_path":"github.com/cihub/seelog","version":"v0.0.0-20170130134532-f561c5e57575","sort_version":"0,0,0,~20170130134532-f561c5e57575","commit_time":"2017-01-30 13:45:32 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cihub/seelog@v0.0.0-20170130134532-f561c5e57575/common_constraints_test.go:63:1","message":"TestlistConstraintsWithDuplicates has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestlistConstraintsWithDuplicates(t *testing.T) {\n\tduplicateList := []LogLevel{TraceLvl, DebugLvl, InfoLvl,"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cihub/seelog@v0.0.0-20170130134532-f561c5e57575/common_constraints_test.go:88:1","message":"TestlistConstraintsWithOffInList has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestlistConstraintsWithOffInList(t *testing.T) {\n\toffList := []LogLevel{TraceLvl, DebugLvl, Off}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cihub/seelog@v0.0.0-20170130134532-f561c5e57575/dispatch_filterdispatcher_test.go:31:1","message":"TestfilterDispatcher_Pass has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestfilterDispatcher_Pass(t *testing.T) {\n\twriter, _ := newBytesVerifier(t)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cihub/seelog@v0.0.0-20170130134532-f561c5e57575/dispatch_filterdispatcher_test.go:51:1","message":"TestfilterDispatcher_Deny has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestfilterDispatcher_Deny(t *testing.T) {\n\twriter, _ := newBytesVerifier(t)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cihub/seelog@v0.0.0-20170130134532-f561c5e57575/dispatch_splitdispatcher_test.go:42:1","message":"TestsplitDispatcher has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestsplitDispatcher(t *testing.T) {\n\twriter1, _ := newBytesVerifier(t)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/cihub/seelog@v0.0.0-20170130134532-f561c5e57575/writers_formattedwriter_test.go:31:1","message":"TestformattedWriter has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestformattedWriter(t *testing.T) {\n\tformatStr := \"%Level %LEVEL %Msg\""}]}
{"created_at":"2023-06-22 17:39:34.473195 UTC","module_path":"gopkg.in/cihub/seelog.v2","version":"v2.0.0-20151216151435-d2c6e5aa9fbf","sort_version":"2,0,0,~20151216151435-d2c6e5aa9fbf","commit_time":"2015-12-16 15:14:35 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/cihub/seelog.v2@v2.0.0-20151216151435-d2c6e5aa9fbf/common_constraints_test.go:63:1","message":"TestlistConstraintsWithDuplicates has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestlistConstraintsWithDuplicates(t *testing.T) {\n\tduplicateList := []LogLevel{TraceLvl, DebugLvl, InfoLvl,"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/cihub/seelog.v2@v2.0.0-20151216151435-d2c6e5aa9fbf/common_constraints_test.go:88:1","message":"TestlistConstraintsWithOffInList has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestlistConstraintsWithOffInList(t *testing.T) {\n\toffList := []LogLevel{TraceLvl, DebugLvl, Off}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/cihub/seelog.v2@v2.0.0-20151216151435-d2c6e5aa9fbf/dispatch_filterdispatcher_test.go:31:1","message":"TestfilterDispatcher_Pass has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestfilterDispatcher_Pass(t *testing.T) {\n\twriter, _ := newBytesVerifier(t)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/cihub/seelog.v2@v2.0.0-20151216151435-d2c6e5aa9fbf/dispatch_filterdispatcher_test.go:51:1","message":"TestfilterDispatcher_Deny has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestfilterDispatcher_Deny(t *testing.T) {\n\twriter, _ := newBytesVerifier(t)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/cihub/seelog.v2@v2.0.0-20151216151435-d2c6e5aa9fbf/dispatch_splitdispatcher_test.go:42:1","message":"TestsplitDispatcher has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestsplitDispatcher(t *testing.T) {\n\twriter1, _ := newBytesVerifier(t)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/cihub/seelog.v2@v2.0.0-20151216151435-d2c6e5aa9fbf/writers_formattedwriter_test.go:31:1","message":"TestformattedWriter has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestformattedWriter(t *testing.T) {\n\tformatStr := \"%Level %LEVEL %Msg\""}]}
{"created_at":"2023-06-22 17:29:20.163959 UTC","module_path":"github.com/mattn/go-mastodon","version":"v0.0.6","sort_version":"0,0,6~","commit_time":"2022-11-16 22:16:38 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/mattn/go-mastodon [github.com/mattn/go-mastodon.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mattn/go-mastodon@v0.0.6/streaming_test.go:36:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"should not be fail: %v\", err)\n\t\t}"},{"package_id":"github.com/mattn/go-mastodon [github.com/mattn/go-mastodon.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mattn/go-mastodon@v0.0.6/streaming_test.go:155:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"should not be fail: %v\", err)\n\t\t}"},{"package_id":"github.com/mattn/go-mastodon [github.com/mattn/go-mastodon.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mattn/go-mastodon@v0.0.6/streaming_ws_test.go:157:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif errorEvent, ok := e.(*ErrorEvent); !ok {\n\t\t\tt.Fatalf(\"should be fail: %v\", errorEvent.err)\n\t\t}"},{"package_id":"github.com/mattn/go-mastodon [github.com/mattn/go-mastodon.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mattn/go-mastodon@v0.0.6/streaming_ws_test.go:189:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif errorEvent, ok := e.(*ErrorEvent); !ok {\n\t\t\tt.Fatalf(\"should be fail: %v\", errorEvent.err)\n\t\t}"},{"package_id":"github.com/mattn/go-mastodon [github.com/mattn/go-mastodon.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mattn/go-mastodon@v0.0.6/streaming_ws_test.go:202:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif errorEvent, ok := e.(*ErrorEvent); !ok {\n\t\t\tt.Fatalf(\"should be fail: %v\", errorEvent.err)\n\t\t}"},{"package_id":"github.com/mattn/go-mastodon [github.com/mattn/go-mastodon.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/mattn/go-mastodon@v0.0.6/streaming_ws_test.go:213:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif errorEvent, ok := e.(*ErrorEvent); !ok {\n\t\t\tt.Fatalf(\"should be fail: %v\", errorEvent.err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:31:43.661399 UTC","module_path":"github.com/gochain/gochain/v4","version":"v4.2.0","sort_version":"4,2,0~","commit_time":"2023-04-05 02:04:42 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/gochain/gochain/v4/core [github.com/gochain/gochain/v4/core.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gochain/gochain/v4@v4.2.0/core/blockchain_test.go:1086:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif ch != block.Hash() {\n\t\t\t\t\tt.Fatalf(\"unknown canonical hash, want %s, got %s\", block.Hash().Hex(), ch.Hex())\n\t\t\t\t}"},{"package_id":"github.com/gochain/gochain/v4/core [github.com/gochain/gochain/v4/core.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gochain/gochain/v4@v4.2.0/core/blockchain_test.go:1090:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif fb == nil {\n\t\t\t\t\tt.Fatalf(\"unable to retrieve block %d for canonical hash: %s\", block.NumberU64(), ch.Hex())\n\t\t\t\t}"},{"package_id":"github.com/gochain/gochain/v4/core [github.com/gochain/gochain/v4/core.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gochain/gochain/v4@v4.2.0/core/blockchain_test.go:1093:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif fb.Hash() != block.Hash() {\n\t\t\t\t\tt.Fatalf(\"invalid block hash for block %d, want %s, got %s\", block.NumberU64(), block.Hash().Hex(), fb.Hash().Hex())\n\t\t\t\t}"},{"package_id":"github.com/gochain/gochain/v4/ethdb_test [github.com/gochain/gochain/v4/ethdb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gochain/gochain/v4@v4.2.0/ethdb/segment_set_test.go:65:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif s, err := ss.Acquire(\"0002\"); err != nil {\n\t\t\tt.Fatal(err)\n\t\t} else if s != segment2 {"},{"package_id":"github.com/gochain/gochain/v4/ethdb_test [github.com/gochain/gochain/v4/ethdb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gochain/gochain/v4@v4.2.0/ethdb/segment_set_test.go:67:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t} else if s != segment2 {\n\t\t\tt.Fatal(\"unexpected segment(2)\")\n\t\t}"},{"package_id":"github.com/gochain/gochain/v4/p2p/simulations [github.com/gochain/gochain/v4/p2p/simulations.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gochain/gochain/v4@v4.2.0/p2p/simulations/mocker_test.go:112:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\twg.Done()\n\t\t\t\tt.Fatalf(\"Timeout waiting for nodes being started up!\")\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:17:14.975697 UTC","module_path":"github.com/google/gofuzz","version":"v1.2.0","sort_version":"1,2,0~","commit_time":"2020-08-04 22:43:24 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/google/gofuzz_test [github.com/google/gofuzz.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/gofuzz@v1.2.0/example_test.go:28:1","message":"ExampleSimple refers to unknown identifier: Simple","source":"\nfunc ExampleSimple() {\n\ttype MyType struct {"},{"package_id":"github.com/google/gofuzz_test [github.com/google/gofuzz.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/gofuzz@v1.2.0/example_test.go:52:1","message":"ExampleCustom refers to unknown identifier: Custom","source":"\nfunc ExampleCustom() {\n\ttype MyType struct {"},{"package_id":"github.com/google/gofuzz_test [github.com/google/gofuzz.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/gofuzz@v1.2.0/example_test.go:81:1","message":"ExampleComplex refers to unknown identifier: Complex","source":"\nfunc ExampleComplex() {\n\ttype OtherType struct {"},{"package_id":"github.com/google/gofuzz_test [github.com/google/gofuzz.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/gofuzz@v1.2.0/example_test.go:165:1","message":"ExampleSingle refers to unknown identifier: Single","source":"\nfunc ExampleSingle() {\n\tf := fuzz.New()"},{"package_id":"github.com/google/gofuzz_test [github.com/google/gofuzz.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/gofuzz@v1.2.0/example_test.go:176:1","message":"ExampleEnum refers to unknown identifier: Enum","source":"\nfunc ExampleEnum() {\n\ttype MyEnum string"},{"package_id":"github.com/google/gofuzz_test [github.com/google/gofuzz.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/gofuzz@v1.2.0/example_test.go:228:1","message":"ExampleCustomString refers to unknown identifier: CustomString","source":"\nfunc ExampleCustomString() {\n\ta2z := \"abcdefghijklmnopqrstuvwxyz\""}]}
{"created_at":"2023-06-22 17:44:46.890698 UTC","module_path":"github.com/TykTechnologies/gorpc","version":"v0.0.0-20210624160652-fe65bda0ccb9","sort_version":"0,0,0,~20210624160652-fe65bda0ccb9","commit_time":"2021-06-24 16:06:52 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/TykTechnologies/gorpc [github.com/TykTechnologies/gorpc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/TykTechnologies/gorpc@v0.0.0-20210624160652-fe65bda0ccb9/rpc_test.go:937:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"Unexpected error: [%s]\", err)\n\t\t\t\t}"},{"package_id":"github.com/TykTechnologies/gorpc [github.com/TykTechnologies/gorpc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/TykTechnologies/gorpc@v0.0.0-20210624160652-fe65bda0ccb9/rpc_test.go:940:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif resp.(int) != j {\n\t\t\t\t\tt.Fatalf(\"Unexpected value: %d. Expected %d\", resp, j)\n\t\t\t\t}"},{"package_id":"github.com/TykTechnologies/gorpc [github.com/TykTechnologies/gorpc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/TykTechnologies/gorpc@v0.0.0-20210624160652-fe65bda0ccb9/rpc_test.go:986:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"Unexpected error: [%s]\", err)\n\t\t\t\t}"},{"package_id":"github.com/TykTechnologies/gorpc [github.com/TykTechnologies/gorpc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/TykTechnologies/gorpc@v0.0.0-20210624160652-fe65bda0ccb9/rpc_test.go:989:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif resp.(string) != s {\n\t\t\t\t\tt.Fatalf(\"Unexpected value: %s. Expected %s\", resp, s)\n\t\t\t\t}"},{"package_id":"github.com/TykTechnologies/gorpc [github.com/TykTechnologies/gorpc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/TykTechnologies/gorpc@v0.0.0-20210624160652-fe65bda0ccb9/rpc_test.go:993:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"Unexpected error: [%s]\", err)\n\t\t\t\t}"},{"package_id":"github.com/TykTechnologies/gorpc [github.com/TykTechnologies/gorpc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/TykTechnologies/gorpc@v0.0.0-20210624160652-fe65bda0ccb9/rpc_test.go:996:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif resp.(int) != i+j {\n\t\t\t\t\tt.Fatalf(\"Unexpected value: %d. Expected %d\", resp, i+j)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:45:10.069482 UTC","module_path":"github.com/linxiaozhi/go-telnet","version":"v0.0.0-20190217183315-a500ff0c2efc","sort_version":"0,0,0,~20190217183315-a500ff0c2efc","commit_time":"2019-02-17 18:33:15 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/linxiaozhi/go-telnet@v0.0.0-20190217183315-a500ff0c2efc/telnet_test.go:41:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/linxiaozhi/go-telnet@v0.0.0-20190217183315-a500ff0c2efc/telnet_test.go:64:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/linxiaozhi/go-telnet@v0.0.0-20190217183315-a500ff0c2efc/telnet_test.go:107:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/linxiaozhi/go-telnet@v0.0.0-20190217183315-a500ff0c2efc/telnet_test.go:124:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/linxiaozhi/go-telnet@v0.0.0-20190217183315-a500ff0c2efc/telnet_test.go:166:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/linxiaozhi/go-telnet@v0.0.0-20190217183315-a500ff0c2efc/telnet_test.go:212:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:43:54.376026 UTC","module_path":"github.com/livepeer/m3u8","version":"v0.11.1","sort_version":"0,a11,1~","commit_time":"2020-12-06 14:55:13 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/livepeer/m3u8 [github.com/livepeer/m3u8.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/livepeer/m3u8@v0.11.1/writer_test.go:556:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/livepeer/m3u8 [github.com/livepeer/m3u8.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/livepeer/m3u8@v0.11.1/writer_test.go:560:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"Create media playlist failed: %s\", err)\n\t\t\t}"},{"package_id":"github.com/livepeer/m3u8 [github.com/livepeer/m3u8.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/livepeer/m3u8@v0.11.1/writer_test.go:563:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err = p.DecodeFrom(bufio.NewReader(f), true); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/livepeer/m3u8 [github.com/livepeer/m3u8.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/livepeer/m3u8@v0.11.1/writer_test.go:568:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif bytes.Compare(expect, actual) != 0 {\n\t\t\t\tt.Fatal(\"not matched\")\n\t\t\t}"},{"package_id":"github.com/livepeer/m3u8 [github.com/livepeer/m3u8.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/livepeer/m3u8@v0.11.1/writer_test.go:823:1","message":"ExampleMediaPlaylist_String_Winsize0 has malformed example suffix: Winsize0","source":"// Print it\nfunc ExampleMediaPlaylist_String_Winsize0() {\n\tp, _ := NewMediaPlaylist(0, 2)"},{"package_id":"github.com/livepeer/m3u8 [github.com/livepeer/m3u8.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/livepeer/m3u8@v0.11.1/writer_test.go:842:1","message":"ExampleMediaPlaylist_String_Winsize0_VOD has malformed example suffix: Winsize0_VOD","source":"// Print it\nfunc ExampleMediaPlaylist_String_Winsize0_VOD() {\n\tp, _ := NewMediaPlaylist(0, 2)"}]}
{"created_at":"2023-06-22 17:25:00.996377 UTC","module_path":"github.com/btcsuite/seelog","version":"v0.0.0-20150116041118-313961b101eb","sort_version":"0,0,0,~20150116041118-313961b101eb","commit_time":"2015-01-16 04:11:18 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/seelog@v0.0.0-20150116041118-313961b101eb/common_constraints_test.go:63:1","message":"TestlistConstraintsWithDuplicates has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestlistConstraintsWithDuplicates(t *testing.T) {\n\tduplicateList := []LogLevel{TraceLvl, DebugLvl, InfoLvl,"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/seelog@v0.0.0-20150116041118-313961b101eb/common_constraints_test.go:88:1","message":"TestlistConstraintsWithOffInList has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestlistConstraintsWithOffInList(t *testing.T) {\n\toffList := []LogLevel{TraceLvl, DebugLvl, Off}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/seelog@v0.0.0-20150116041118-313961b101eb/dispatch_filterdispatcher_test.go:31:1","message":"TestfilterDispatcher_Pass has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestfilterDispatcher_Pass(t *testing.T) {\n\twriter, _ := newBytesVerifier(t)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/seelog@v0.0.0-20150116041118-313961b101eb/dispatch_filterdispatcher_test.go:51:1","message":"TestfilterDispatcher_Deny has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestfilterDispatcher_Deny(t *testing.T) {\n\twriter, _ := newBytesVerifier(t)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/seelog@v0.0.0-20150116041118-313961b101eb/dispatch_splitdispatcher_test.go:42:1","message":"TestsplitDispatcher has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestsplitDispatcher(t *testing.T) {\n\twriter1, _ := newBytesVerifier(t)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/seelog@v0.0.0-20150116041118-313961b101eb/writers_formattedwriter_test.go:31:1","message":"TestformattedWriter has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestformattedWriter(t *testing.T) {\n\tformatStr := \"%Level %LEVEL %Msg\""}]}
{"created_at":"2023-06-22 17:22:50.770718 UTC","module_path":"github.com/ethereumproject/go-ethereum","version":"v5.5.2+incompatible","sort_version":"5,5,2~","commit_time":"2018-11-08 18:09:11 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/core [synthetic/core.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ethereumproject/go-ethereum@v5.5.2+incompatible/core/blockchain_test.go:390:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\n\tgo insertChain(done, blockchain, chain1, t)\n\tgo insertChain(done, blockchain, chain2, t)"},{"package_id":"synthetic/core [synthetic/core.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ethereumproject/go-ethereum@v5.5.2+incompatible/core/blockchain_test.go:391:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\tgo insertChain(done, blockchain, chain1, t)\n\tgo insertChain(done, blockchain, chain2, t)\n"},{"package_id":"synthetic/core [synthetic/core.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ethereumproject/go-ethereum@v5.5.2+incompatible/core/blockchain_test.go:1603:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif ch != block.Hash() {\n\t\t\t\t\tt.Fatalf(\"unknown canonical hash, want %s, got %s\", block.Hash().Hex(), ch.Hex())\n\t\t\t\t}"},{"package_id":"synthetic/core [synthetic/core.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ethereumproject/go-ethereum@v5.5.2+incompatible/core/blockchain_test.go:1607:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif fb == nil {\n\t\t\t\t\tt.Fatalf(\"unable to retrieve block %d for canonical hash: %s\", block.NumberU64(), ch.Hex())\n\t\t\t\t}"},{"package_id":"synthetic/core [synthetic/core.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ethereumproject/go-ethereum@v5.5.2+incompatible/core/blockchain_test.go:1610:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif fb.Hash() != block.Hash() {\n\t\t\t\t\tt.Fatalf(\"invalid block hash for block %d, want %s, got %s\", block.NumberU64(), block.Hash().Hex(), fb.Hash().Hex())\n\t\t\t\t}"},{"package_id":"synthetic/node_test [synthetic/node.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ethereumproject/go-ethereum@v5.5.2+incompatible/node/node_example_test.go:44:1","message":"ExampleUsage refers to unknown identifier: Usage","source":"\nfunc ExampleUsage() {\n\t// Create a network node to run protocols with the default values. The below list"}]}
{"created_at":"2023-06-22 17:50:49.502938 UTC","module_path":"github.com/bingoohuang/golog","version":"v0.0.0-20230419014218-5f573ce65b7f","sort_version":"0,0,0,~20230419014218-5f573ce65b7f","commit_time":"2023-04-19 01:42:18 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/bingoohuang/golog/pkg/clock_test [github.com/bingoohuang/golog/pkg/clock.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/golog@v0.0.0-20230419014218-5f573ce65b7f/pkg/clock/clock_test.go:31:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tdefault:\n\t\t\tt.Fatal(\"too late\")\n\t\t}"},{"package_id":"github.com/bingoohuang/golog/pkg/clock_test [github.com/bingoohuang/golog/pkg/clock.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/golog@v0.0.0-20230419014218-5f573ce65b7f/pkg/clock/clock_test.go:58:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tdefault:\n\t\t\tt.Fatal(\"too late\")\n\t\t}"},{"package_id":"github.com/bingoohuang/golog/pkg/clock_test [github.com/bingoohuang/golog/pkg/clock.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/golog@v0.0.0-20230419014218-5f573ce65b7f/pkg/clock/clock_test.go:99:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tdefault:\n\t\t\tt.Fatal(\"too late\")\n\t\t}"},{"package_id":"github.com/bingoohuang/golog/pkg/clock_test [github.com/bingoohuang/golog/pkg/clock.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/golog@v0.0.0-20230419014218-5f573ce65b7f/pkg/clock/clock_test.go:127:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tdefault:\n\t\t\tt.Fatal(\"too late\")\n\t\t}"},{"package_id":"github.com/bingoohuang/golog/pkg/clock_test [github.com/bingoohuang/golog/pkg/clock.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/golog@v0.0.0-20230419014218-5f573ce65b7f/pkg/clock/clock_test.go:156:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tdefault:\n\t\t\tt.Fatal(\"too late\")\n\t\t}"},{"package_id":"github.com/bingoohuang/golog/pkg/clock_test [github.com/bingoohuang/golog/pkg/clock.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/golog@v0.0.0-20230419014218-5f573ce65b7f/pkg/clock/clock_test.go:203:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tdefault:\n\t\t\tt.Fatal(\"too late\")\n\t\t}"}]}
{"created_at":"2023-06-22 17:36:15.053131 UTC","module_path":"github.com/valyala/gorpc","version":"v0.0.0-20160519171614-908281bef774","sort_version":"0,0,0,~20160519171614-908281bef774","commit_time":"2016-05-19 17:16:14 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/valyala/gorpc@v0.0.0-20160519171614-908281bef774/rpc_test.go:1177:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"Unexpected error: [%s]\", err)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/valyala/gorpc@v0.0.0-20160519171614-908281bef774/rpc_test.go:1180:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif resp.(int) != j {\n\t\t\t\t\tt.Fatalf(\"Unexpected value: %d. Expected %d\", resp, j)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/valyala/gorpc@v0.0.0-20160519171614-908281bef774/rpc_test.go:1226:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"Unexpected error: [%s]\", err)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/valyala/gorpc@v0.0.0-20160519171614-908281bef774/rpc_test.go:1229:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif resp.(string) != s {\n\t\t\t\t\tt.Fatalf(\"Unexpected value: %s. Expected %s\", resp, s)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/valyala/gorpc@v0.0.0-20160519171614-908281bef774/rpc_test.go:1233:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"Unexpected error: [%s]\", err)\n\t\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/valyala/gorpc@v0.0.0-20160519171614-908281bef774/rpc_test.go:1236:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif resp.(int) != i+j {\n\t\t\t\t\tt.Fatalf(\"Unexpected value: %d. Expected %d\", resp, i+j)\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:45:01.534935 UTC","module_path":"github.com/huandu/skiplist","version":"v1.2.0","sort_version":"1,2,0~","commit_time":"2021-09-24 02:44:04 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/huandu/skiplist [github.com/huandu/skiplist.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/huandu/skiplist@v1.2.0/skiplist_test.go:330:38","message":"there can only be one output comment block per example","source":"\telem := list.Get(34)                // Value is stored in elem.Value.\n\tfmt.Println(elem.Value)             // Output: 56\n\tnext := elem.Next()                 // Get next element."},{"package_id":"github.com/huandu/skiplist [github.com/huandu/skiplist.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/huandu/skiplist@v1.2.0/skiplist_test.go:333:38","message":"there can only be one output comment block per example","source":"\tprev := next.Prev()                 // Get previous element.\n\tfmt.Println(next.Value, prev.Value) // Output: 90.12    56\n"},{"package_id":"github.com/huandu/skiplist [github.com/huandu/skiplist.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/huandu/skiplist@v1.2.0/skiplist_test.go:337:23","message":"there can only be one output comment block per example","source":"\tval, ok := list.GetValue(34)\n\tfmt.Println(val, ok) // Output: 56  true\n"},{"package_id":"github.com/huandu/skiplist [github.com/huandu/skiplist.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/huandu/skiplist@v1.2.0/skiplist_test.go:341:48","message":"there can only be one output comment block per example","source":"\tfoundElem := list.Find(30)\n\tfmt.Println(foundElem.Key(), foundElem.Value) // Output: 34 56\n"},{"package_id":"github.com/huandu/skiplist [github.com/huandu/skiplist.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/huandu/skiplist@v1.2.0/skiplist_test.go:367:34","message":"there can only be one output comment block per example","source":"\n\tfmt.Println(list.Front().Value) // Output: sin(π)\n\tfmt.Println(list.Back().Value)  // Output: sin(π/2)"},{"package_id":"github.com/huandu/skiplist [github.com/huandu/skiplist.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/huandu/skiplist@v1.2.0/skiplist_test.go:368:34","message":"there can only be one output comment block per example","source":"\tfmt.Println(list.Front().Value) // Output: sin(π)\n\tfmt.Println(list.Back().Value)  // Output: sin(π/2)\n"}]}
{"created_at":"2023-06-22 17:16:11.169355 UTC","module_path":"github.com/prometheus/client_golang","version":"v1.16.0","sort_version":"1,a16,0~","commit_time":"2023-06-15 10:46:32 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/prometheus/client_golang/prometheus/collectors [github.com/prometheus/client_golang/prometheus/collectors.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/prometheus/client_golang@v1.16.0/prometheus/collectors/go_collector_latest_test.go:186:1","message":"ExampleGoCollector refers to unknown identifier: GoCollector","source":"\nfunc ExampleGoCollector() {\n\treg := prometheus.NewRegistry()"},{"package_id":"github.com/prometheus/client_golang/prometheus/collectors [github.com/prometheus/client_golang/prometheus/collectors.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/prometheus/client_golang@v1.16.0/prometheus/collectors/go_collector_latest_test.go:196:1","message":"ExampleGoCollector_WithAdvancedGoMetrics refers to unknown identifier: GoCollector","source":"\nfunc ExampleGoCollector_WithAdvancedGoMetrics() {\n\treg := prometheus.NewRegistry()"},{"package_id":"github.com/prometheus/client_golang/prometheus/collectors [github.com/prometheus/client_golang/prometheus/collectors.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/prometheus/client_golang@v1.16.0/prometheus/collectors/go_collector_latest_test.go:217:1","message":"ExampleGoCollector_DefaultRegister refers to unknown identifier: GoCollector","source":"\nfunc ExampleGoCollector_DefaultRegister() {\n\t// Unregister the default GoCollector."},{"package_id":"github.com/prometheus/client_golang/prometheus/internal [github.com/prometheus/client_golang/prometheus/internal.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/prometheus/client_golang@v1.16.0/prometheus/internal/difflib_test.go:117:1","message":"ExampleGetUnifiedDiffCode refers to unknown identifier: GetUnifiedDiffCode","source":"\nfunc ExampleGetUnifiedDiffCode() {\n\ta := `one"},{"package_id":"github.com/prometheus/client_golang/prometheus/promhttp [github.com/prometheus/client_golang/prometheus/promhttp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/prometheus/client_golang@v1.16.0/prometheus/promhttp/option_test.go:30:1","message":"ExampleInstrumentHandlerWithExtraMethods refers to unknown identifier: InstrumentHandlerWithExtraMethods","source":"\nfunc ExampleInstrumentHandlerWithExtraMethods() {\n\tcounter := prometheus.NewCounterVec("},{"package_id":"github.com/prometheus/client_golang/prometheus/promhttp [github.com/prometheus/client_golang/prometheus/promhttp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/prometheus/client_golang@v1.16.0/prometheus/promhttp/option_test.go:73:1","message":"ExampleInstrumentHandlerWithLabelResolver refers to unknown identifier: InstrumentHandlerWithLabelResolver","source":"\nfunc ExampleInstrumentHandlerWithLabelResolver() {\n\tcounter := prometheus.NewCounterVec("},{"package_id":"github.com/prometheus/client_golang/prometheus_test [github.com/prometheus/client_golang/prometheus.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/prometheus/client_golang@v1.16.0/prometheus/examples_test.go:440:1","message":"ExampleNewConstHistogram_WithExemplar refers to unknown field or method: NewConstHistogram.WithExemplar","source":"\nfunc ExampleNewConstHistogram_WithExemplar() {\n\tdesc := prometheus.NewDesc("}]}
{"created_at":"2023-06-22 17:26:19.837263 UTC","module_path":"github.com/stretchr/graceful","version":"v1.2.15","sort_version":"1,2,a15~","commit_time":"2017-02-01 19:58:55 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stretchr/graceful@v1.2.15/http2_test.go:76:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\twg.Add(1)\n\tgo checkIfConnectionToServerIsHTTP2(t, \u0026wg, c)\n\twg.Wait()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stretchr/graceful@v1.2.15/http2_test.go:76:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\twg.Add(1)\n\tgo checkIfConnectionToServerIsHTTP2(t, \u0026wg, c)\n\twg.Wait()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stretchr/graceful@v1.2.15/http2_test.go:76:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\twg.Add(1)\n\tgo checkIfConnectionToServerIsHTTP2(t, \u0026wg, c)\n\twg.Wait()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stretchr/graceful@v1.2.15/http2_test.go:106:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stretchr/graceful@v1.2.15/http2_test.go:123:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\twg.Add(1)\n\tgo checkIfConnectionToServerIsHTTP2(t, \u0026wg, c)\n\twg.Wait()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stretchr/graceful@v1.2.15/http2_test.go:123:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\twg.Add(1)\n\tgo checkIfConnectionToServerIsHTTP2(t, \u0026wg, c)\n\twg.Wait()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stretchr/graceful@v1.2.15/http2_test.go:123:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\twg.Add(1)\n\tgo checkIfConnectionToServerIsHTTP2(t, \u0026wg, c)\n\twg.Wait()"}]}
{"created_at":"2023-06-22 17:21:07.38851 UTC","module_path":"github.com/asim/go-micro/v3","version":"v3.7.1","sort_version":"3,7,1~","commit_time":"2022-02-23 03:55:18 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/asim/go-micro/v3 [github.com/asim/go-micro/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/asim/go-micro/v3@v3.7.1/service_test.go:85:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := testRequest(ctx, service.Client(), \"test.service\"); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/asim/go-micro/v3/transport [github.com/asim/go-micro/v3/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/asim/go-micro/v3@v3.7.1/transport/http_transport_test.go:207:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tcase \u003c-time.After(time.Second):\n\t\t\t\tt.Fatal(\"deadline not executed\")\n\t\t\t}"},{"package_id":"github.com/asim/go-micro/v3/transport [github.com/asim/go-micro/v3/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/asim/go-micro/v3@v3.7.1/transport/memory_test.go:36:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t}); err != nil {\n\t\t\tt.Fatalf(\"Unexpected error accepting %v\", err)\n\t\t}"},{"package_id":"github.com/asim/go-micro/v3/util/mdns [github.com/asim/go-micro/v3/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/asim/go-micro/v3@v3.7.1/util/mdns/server_test.go:31:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Name != \"hostname._foobar._tcp.local.\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/asim/go-micro/v3/util/mdns [github.com/asim/go-micro/v3/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/asim/go-micro/v3@v3.7.1/util/mdns/server_test.go:34:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Port != 80 {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/asim/go-micro/v3/util/mdns [github.com/asim/go-micro/v3/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/asim/go-micro/v3@v3.7.1/util/mdns/server_test.go:37:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Info != \"Local web server\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/asim/go-micro/v3/util/mdns [github.com/asim/go-micro/v3/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/asim/go-micro/v3@v3.7.1/util/mdns/server_test.go:42:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tcase \u003c-time.After(80 * time.Millisecond):\n\t\t\tt.Fatalf(\"timeout\")\n\t\t}"}]}
{"created_at":"2023-06-22 17:21:46.571278 UTC","module_path":"gopkg.in/olivere/elastic.v3","version":"v3.0.75","sort_version":"3,0,a75~","commit_time":"2018-11-03 09:32:23 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/olivere/elastic.v3@v3.0.75/example_test.go:207:1","message":"ExampleClient_NewClient_default refers to unknown field or method: Client.NewClient","source":"\nfunc ExampleClient_NewClient_default() {\n\t// Obtain a client to the Elasticsearch instance on http://127.0.0.1:9200."},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/olivere/elastic.v3@v3.0.75/example_test.go:221:1","message":"ExampleClient_NewClient_cluster refers to unknown field or method: Client.NewClient","source":"\nfunc ExampleClient_NewClient_cluster() {\n\t// Obtain a client for an Elasticsearch cluster of two nodes,"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/olivere/elastic.v3@v3.0.75/example_test.go:232:1","message":"ExampleClient_NewClient_manyOptions refers to unknown field or method: Client.NewClient","source":"\nfunc ExampleClient_NewClient_manyOptions() {\n\t// Obtain a client for an Elasticsearch cluster of two nodes,"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/olivere/elastic.v3@v3.0.75/example_test.go:252:1","message":"ExampleIndexExistsService refers to unknown identifier: IndexExistsService","source":"\nfunc ExampleIndexExistsService() {\n\t// Get a client to the local Elasticsearch instance."},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/olivere/elastic.v3@v3.0.75/example_test.go:270:1","message":"ExampleCreateIndexService refers to unknown identifier: CreateIndexService","source":"\nfunc ExampleCreateIndexService() {\n\t// Get a client to the local Elasticsearch instance."},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/olivere/elastic.v3@v3.0.75/example_test.go:288:1","message":"ExampleDeleteIndexService refers to unknown identifier: DeleteIndexService","source":"\nfunc ExampleDeleteIndexService() {\n\t// Get a client to the local Elasticsearch instance."},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/olivere/elastic.v3@v3.0.75/example_test.go:607:1","message":"ExampleClusterHealthService_WaitForGreen refers to unknown field or method: ClusterHealthService.WaitForGreen","source":"\nfunc ExampleClusterHealthService_WaitForGreen() {\n\tclient, err := elastic.NewClient()"}]}
{"created_at":"2023-06-22 17:51:48.065684 UTC","module_path":"github.com/dmuth/google-go-log4go","version":"v0.0.0-20131204042717-62b289e3b1aa","sort_version":"0,0,0,~20131204042717-62b289e3b1aa","commit_time":"2013-12-04 04:27:17 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dmuth/google-go-log4go@v0.0.0-20131204042717-62b289e3b1aa/log4go_test.go:113:1","message":"ExampleErrorString refers to unknown identifier: ErrorString","source":"*/\nfunc ExampleErrorString() {\n\tSetLevel(DebugLevel)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dmuth/google-go-log4go@v0.0.0-20131204042717-62b289e3b1aa/log4go_test.go:122:1","message":"ExampleWarnString refers to unknown identifier: WarnString","source":"\nfunc ExampleWarnString() {\n\tSetLevel(ErrorLevel)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dmuth/google-go-log4go@v0.0.0-20131204042717-62b289e3b1aa/log4go_test.go:133:1","message":"ExampleInfoString refers to unknown identifier: InfoString","source":"\nfunc ExampleInfoString() {\n\tSetLevel(ErrorLevel)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dmuth/google-go-log4go@v0.0.0-20131204042717-62b289e3b1aa/log4go_test.go:146:1","message":"ExampleDebugString refers to unknown identifier: DebugString","source":"\nfunc ExampleDebugString() {\n\tSetLevel(ErrorLevel)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dmuth/google-go-log4go@v0.0.0-20131204042717-62b289e3b1aa/log4go_test.go:161:1","message":"ExampleTraceString refers to unknown identifier: TraceString","source":"\nfunc ExampleTraceString() {\n\tSetLevel(ErrorLevel)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dmuth/google-go-log4go@v0.0.0-20131204042717-62b289e3b1aa/log4go_test.go:178:1","message":"ExampleMultiLine refers to unknown identifier: MultiLine","source":"\nfunc ExampleMultiLine() {\n\tSetDisplayTime(false)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dmuth/google-go-log4go@v0.0.0-20131204042717-62b289e3b1aa/log4go_test.go:191:1","message":"ExampleBackspaceAndMore refers to unknown identifier: BackspaceAndMore","source":"\nfunc ExampleBackspaceAndMore() {\n\tSetLevelString(\"info\")"}]}
{"created_at":"2023-06-22 17:18:15.838505 UTC","module_path":"github.com/tylerb/graceful","version":"v1.2.15","sort_version":"1,2,a15~","commit_time":"2017-02-01 19:58:55 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tylerb/graceful@v1.2.15/http2_test.go:76:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\twg.Add(1)\n\tgo checkIfConnectionToServerIsHTTP2(t, \u0026wg, c)\n\twg.Wait()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tylerb/graceful@v1.2.15/http2_test.go:76:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\twg.Add(1)\n\tgo checkIfConnectionToServerIsHTTP2(t, \u0026wg, c)\n\twg.Wait()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tylerb/graceful@v1.2.15/http2_test.go:76:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\twg.Add(1)\n\tgo checkIfConnectionToServerIsHTTP2(t, \u0026wg, c)\n\twg.Wait()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tylerb/graceful@v1.2.15/http2_test.go:106:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tylerb/graceful@v1.2.15/http2_test.go:123:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\twg.Add(1)\n\tgo checkIfConnectionToServerIsHTTP2(t, \u0026wg, c)\n\twg.Wait()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tylerb/graceful@v1.2.15/http2_test.go:123:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\twg.Add(1)\n\tgo checkIfConnectionToServerIsHTTP2(t, \u0026wg, c)\n\twg.Wait()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/tylerb/graceful@v1.2.15/http2_test.go:123:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\twg.Add(1)\n\tgo checkIfConnectionToServerIsHTTP2(t, \u0026wg, c)\n\twg.Wait()"}]}
{"created_at":"2023-06-22 17:35:47.920223 UTC","module_path":"github.com/xfali/xlog","version":"v0.1.6","sort_version":"0,1,6~","commit_time":"2021-06-10 14:07:51 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/xfali/xlog/test/writer [github.com/xfali/xlog/test/writer.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/xfali/xlog@v0.1.6/test/writer/write_test.go:38:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"github.com/xfali/xlog/test/writer [github.com/xfali/xlog/test/writer.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/xfali/xlog@v0.1.6/test/writer/write_test.go:68:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"github.com/xfali/xlog/test/writer [github.com/xfali/xlog/test/writer.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/xfali/xlog@v0.1.6/test/writer/write_test.go:100:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"github.com/xfali/xlog/test/writer [github.com/xfali/xlog/test/writer.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/xfali/xlog@v0.1.6/test/writer/write_test.go:133:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"github.com/xfali/xlog/test/writer [github.com/xfali/xlog/test/writer.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/xfali/xlog@v0.1.6/test/writer/write_test.go:169:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"github.com/xfali/xlog/test/writer [github.com/xfali/xlog/test/writer.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/xfali/xlog@v0.1.6/test/writer/write_test.go:231:7","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t\tif err != nil {\n\t\t\t\t\t\tt.Fatal(err)\n\t\t\t\t\t}"},{"package_id":"github.com/xfali/xlog/test/writer [github.com/xfali/xlog/test/writer.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/xfali/xlog@v0.1.6/test/writer/write_test.go:293:7","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t\tif err != nil {\n\t\t\t\t\t\tt.Fatal(err)\n\t\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:18:44.666992 UTC","module_path":"github.com/gliderlabs/ssh","version":"v0.3.5","sort_version":"0,3,5~","commit_time":"2022-08-31 21:55:33 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/gliderlabs/ssh [github.com/gliderlabs/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gliderlabs/ssh@v0.3.5/server_test.go:43:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil \u0026\u0026 err != ErrServerClosed {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/gliderlabs/ssh [github.com/gliderlabs/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gliderlabs/ssh@v0.3.5/server_test.go:54:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := sess.Run(\"\"); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/gliderlabs/ssh [github.com/gliderlabs/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gliderlabs/ssh@v0.3.5/server_test.go:57:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif !bytes.Equal(stdout.Bytes(), testBytes) {\n\t\t\tt.Fatalf(\"expected = %s; got %s\", testBytes, stdout.Bytes())\n\t\t}"},{"package_id":"github.com/gliderlabs/ssh [github.com/gliderlabs/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gliderlabs/ssh@v0.3.5/server_test.go:66:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/gliderlabs/ssh [github.com/gliderlabs/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gliderlabs/ssh@v0.3.5/server_test.go:92:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil \u0026\u0026 err != ErrServerClosed {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/gliderlabs/ssh [github.com/gliderlabs/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gliderlabs/ssh@v0.3.5/server_test.go:105:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := sess.Run(\"\"); err != nil \u0026\u0026 err != io.EOF {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/gliderlabs/ssh [github.com/gliderlabs/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gliderlabs/ssh@v0.3.5/server_test.go:112:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:59:43.700979 UTC","module_path":"github.com/nanobox-io/nanobox-router","version":"v0.0.0-20190311151444-8468a5929ca1","sort_version":"0,0,0,~20190311151444-8468a5929ca1","commit_time":"2019-03-11 15:14:44 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/nanobox-io/nanobox-router@v0.0.0-20190311151444-8468a5929ca1/router_test.go:303:2","message":"call to (*T).FailNow from a non-test goroutine","source":"\treq.Host = \"admin.nanobox-router.test\"\n\tgo getIt(req)\n\t\u003c-headers"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/nanobox-io/nanobox-router@v0.0.0-20190311151444-8468a5929ca1/router_test.go:303:2","message":"call to (*T).FailNow from a non-test goroutine","source":"\treq.Host = \"admin.nanobox-router.test\"\n\tgo getIt(req)\n\t\u003c-headers"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/nanobox-io/nanobox-router@v0.0.0-20190311151444-8468a5929ca1/router_test.go:309:2","message":"call to (*T).FailNow from a non-test goroutine","source":"\treq.Host = \"nanobox-router.test\"\n\tgo getIt(req)\n\t\u003c-headers"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/nanobox-io/nanobox-router@v0.0.0-20190311151444-8468a5929ca1/router_test.go:309:2","message":"call to (*T).FailNow from a non-test goroutine","source":"\treq.Host = \"nanobox-router.test\"\n\tgo getIt(req)\n\t\u003c-headers"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/nanobox-io/nanobox-router@v0.0.0-20190311151444-8468a5929ca1/router_test.go:315:2","message":"call to (*T).FailNow from a non-test goroutine","source":"\treq.Host = \"nanobox-router.test\"\n\tgo getIt(req)\n\t\u003c-headers"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/nanobox-io/nanobox-router@v0.0.0-20190311151444-8468a5929ca1/router_test.go:315:2","message":"call to (*T).FailNow from a non-test goroutine","source":"\treq.Host = \"nanobox-router.test\"\n\tgo getIt(req)\n\t\u003c-headers"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/nanobox-io/nanobox-router@v0.0.0-20190311151444-8468a5929ca1/router_test.go:389:4","message":"call to (*T).FailNow from a non-test goroutine","source":"\t\t\tt.Errorf(\"Failed test GET - %s\", err.Error())\n\t\t\tt.FailNow()\n\t\t}"}]}
{"created_at":"2023-06-22 17:45:07.444502 UTC","module_path":"github.com/raulk/clock","version":"v1.1.0","sort_version":"1,1,0~","commit_time":"2020-07-10 14:25:48 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/raulk/clock [github.com/raulk/clock.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/raulk/clock@v1.1.0/clock_test.go:23:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\ttime.Sleep(30 * time.Millisecond)\n\t\tt.Fatal(\"too late\")\n\t}()"},{"package_id":"github.com/raulk/clock [github.com/raulk/clock.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/raulk/clock@v1.1.0/clock_test.go:44:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\ttime.Sleep(30 * time.Millisecond)\n\t\tt.Fatal(\"too late\")\n\t}()"},{"package_id":"github.com/raulk/clock [github.com/raulk/clock.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/raulk/clock@v1.1.0/clock_test.go:79:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\ttime.Sleep(30 * time.Millisecond)\n\t\tt.Fatal(\"too late\")\n\t}()"},{"package_id":"github.com/raulk/clock [github.com/raulk/clock.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/raulk/clock@v1.1.0/clock_test.go:100:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\ttime.Sleep(50 * time.Millisecond)\n\t\tt.Fatal(\"too late\")\n\t}()"},{"package_id":"github.com/raulk/clock [github.com/raulk/clock.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/raulk/clock@v1.1.0/clock_test.go:123:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\ttime.Sleep(200 * time.Millisecond)\n\t\tt.Fatal(\"too late\")\n\t}()"},{"package_id":"github.com/raulk/clock [github.com/raulk/clock.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/raulk/clock@v1.1.0/clock_test.go:165:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\ttime.Sleep(30 * time.Millisecond)\n\t\tt.Fatal(\"too late\")\n\t}()"},{"package_id":"github.com/raulk/clock [github.com/raulk/clock.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/raulk/clock@v1.1.0/clock_test.go:213:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\ttime.Sleep(30 * time.Millisecond)\n\t\tt.Fatal(\"too late\")\n\t}()"}]}
{"created_at":"2023-06-22 17:23:37.447043 UTC","module_path":"github.com/grafov/m3u8","version":"v0.12.0","sort_version":"0,a12,0~","commit_time":"2023-04-09 16:22:37 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/grafov/m3u8 [github.com/grafov/m3u8.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/grafov/m3u8@v0.12.0/writer_test.go:599:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/grafov/m3u8 [github.com/grafov/m3u8.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/grafov/m3u8@v0.12.0/writer_test.go:603:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"Create media playlist failed: %s\", err)\n\t\t\t}"},{"package_id":"github.com/grafov/m3u8 [github.com/grafov/m3u8.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/grafov/m3u8@v0.12.0/writer_test.go:606:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err = p.DecodeFrom(bufio.NewReader(f), true); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/grafov/m3u8 [github.com/grafov/m3u8.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/grafov/m3u8@v0.12.0/writer_test.go:611:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif bytes.Compare(expect, actual) != 0 {\n\t\t\t\tt.Fatal(\"not matched\")\n\t\t\t}"},{"package_id":"github.com/grafov/m3u8 [github.com/grafov/m3u8.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/grafov/m3u8@v0.12.0/writer_test.go:974:1","message":"ExampleMediaPlaylist_String_Winsize0 has malformed example suffix: Winsize0","source":"// Print it\nfunc ExampleMediaPlaylist_String_Winsize0() {\n\tp, _ := NewMediaPlaylist(0, 2)"},{"package_id":"github.com/grafov/m3u8 [github.com/grafov/m3u8.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/grafov/m3u8@v0.12.0/writer_test.go:993:1","message":"ExampleMediaPlaylist_String_Winsize0_VOD has malformed example suffix: Winsize0_VOD","source":"// Print it\nfunc ExampleMediaPlaylist_String_Winsize0_VOD() {\n\tp, _ := NewMediaPlaylist(0, 2)"},{"package_id":"github.com/grafov/m3u8 [github.com/grafov/m3u8.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/grafov/m3u8@v0.12.0/writer_test.go:1092:1","message":"ExampleMediaPlaylistGetAllSegments refers to unknown identifier: MediaPlaylistGetAllSegments","source":"// cases.\nfunc ExampleMediaPlaylistGetAllSegments() {\n\tm, _ := NewMediaPlaylist(3, 3)"}]}
{"created_at":"2023-06-22 17:35:57.803155 UTC","module_path":"github.com/charmbracelet/ssh","version":"v0.0.0-20221117131612-e845afef7941","sort_version":"0,0,0,~20221117131612-e845afef7941","commit_time":"2022-11-17 13:16:12 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/charmbracelet/ssh [github.com/charmbracelet/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/charmbracelet/ssh@v0.0.0-20221117131612-e845afef7941/server_test.go:43:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil \u0026\u0026 err != ErrServerClosed {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/charmbracelet/ssh [github.com/charmbracelet/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/charmbracelet/ssh@v0.0.0-20221117131612-e845afef7941/server_test.go:54:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := sess.Run(\"\"); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/charmbracelet/ssh [github.com/charmbracelet/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/charmbracelet/ssh@v0.0.0-20221117131612-e845afef7941/server_test.go:57:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif !bytes.Equal(stdout.Bytes(), testBytes) {\n\t\t\tt.Fatalf(\"expected = %s; got %s\", testBytes, stdout.Bytes())\n\t\t}"},{"package_id":"github.com/charmbracelet/ssh [github.com/charmbracelet/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/charmbracelet/ssh@v0.0.0-20221117131612-e845afef7941/server_test.go:66:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/charmbracelet/ssh [github.com/charmbracelet/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/charmbracelet/ssh@v0.0.0-20221117131612-e845afef7941/server_test.go:92:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil \u0026\u0026 err != ErrServerClosed {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/charmbracelet/ssh [github.com/charmbracelet/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/charmbracelet/ssh@v0.0.0-20221117131612-e845afef7941/server_test.go:105:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := sess.Run(\"\"); err != nil \u0026\u0026 err != io.EOF {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/charmbracelet/ssh [github.com/charmbracelet/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/charmbracelet/ssh@v0.0.0-20221117131612-e845afef7941/server_test.go:112:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:43:37.229531 UTC","module_path":"github.com/xmidt-org/webpa-common","version":"v1.11.9","sort_version":"1,a11,9~","commit_time":"2021-07-26 16:52:42 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/xmidt-org/webpa-common/capacitor [github.com/xmidt-org/webpa-common/capacitor.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/xmidt-org/webpa-common@v1.11.9/capacitor/capacitor_test.go:16:1","message":"ExampleBasicUsage refers to unknown identifier: BasicUsage","source":"\nfunc ExampleBasicUsage() {\n\tvar ("},{"package_id":"github.com/xmidt-org/webpa-common/secure [github.com/xmidt-org/webpa-common/secure.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/xmidt-org/webpa-common@v1.11.9/secure/validator_test.go:18:1","message":"ExampleSimpleJWSValidator should be niladic","source":"\nfunc ExampleSimpleJWSValidator(t *testing.T) {\n\t// A basic validator with useful defaults"},{"package_id":"github.com/xmidt-org/webpa-common/secure [github.com/xmidt-org/webpa-common/secure.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/xmidt-org/webpa-common@v1.11.9/secure/validator_test.go:18:1","message":"ExampleSimpleJWSValidator refers to unknown identifier: SimpleJWSValidator","source":"\nfunc ExampleSimpleJWSValidator(t *testing.T) {\n\t// A basic validator with useful defaults"},{"package_id":"github.com/xmidt-org/webpa-common/secure/key [github.com/xmidt-org/webpa-common/secure/key.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/xmidt-org/webpa-common@v1.11.9/secure/key/resolverFactory_test.go:16:1","message":"ExampleSingleKeyConfiguration refers to unknown identifier: SingleKeyConfiguration","source":"\nfunc ExampleSingleKeyConfiguration() {\n\tjsonConfiguration := fmt.Sprintf(`{"},{"package_id":"github.com/xmidt-org/webpa-common/secure/key [github.com/xmidt-org/webpa-common/secure/key.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/xmidt-org/webpa-common@v1.11.9/secure/key/resolverFactory_test.go:57:1","message":"ExampleURITemplateConfiguration refers to unknown identifier: URITemplateConfiguration","source":"\nfunc ExampleURITemplateConfiguration() {\n\tjsonConfiguration := fmt.Sprintf(`{"},{"package_id":"github.com/xmidt-org/webpa-common/server [github.com/xmidt-org/webpa-common/server.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/xmidt-org/webpa-common@v1.11.9/server/viper_test.go:47:1","message":"ExampleInitializeWithFlags refers to unknown identifier: InitializeWithFlags","source":"\nfunc ExampleInitializeWithFlags() {\n\tvar ("},{"package_id":"github.com/xmidt-org/webpa-common/store [github.com/xmidt-org/webpa-common/store.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/xmidt-org/webpa-common@v1.11.9/store/circularPool_test.go:22:1","message":"ExampleResourcePool refers to unknown identifier: ResourcePool","source":"\nfunc ExampleResourcePool() {\n\tpool, err := NewCircularPool(poolSize, poolSize, resourceFunc)"}]}
{"created_at":"2023-06-22 17:20:56.10068 UTC","module_path":"gopkg.in/tylerb/graceful.v1","version":"v1.2.15","sort_version":"1,2,a15~","commit_time":"2017-02-01 19:58:55 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/tylerb/graceful.v1@v1.2.15/http2_test.go:76:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\twg.Add(1)\n\tgo checkIfConnectionToServerIsHTTP2(t, \u0026wg, c)\n\twg.Wait()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/tylerb/graceful.v1@v1.2.15/http2_test.go:76:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\twg.Add(1)\n\tgo checkIfConnectionToServerIsHTTP2(t, \u0026wg, c)\n\twg.Wait()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/tylerb/graceful.v1@v1.2.15/http2_test.go:76:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\twg.Add(1)\n\tgo checkIfConnectionToServerIsHTTP2(t, \u0026wg, c)\n\twg.Wait()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/tylerb/graceful.v1@v1.2.15/http2_test.go:106:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Unexpected error: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/tylerb/graceful.v1@v1.2.15/http2_test.go:123:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\twg.Add(1)\n\tgo checkIfConnectionToServerIsHTTP2(t, \u0026wg, c)\n\twg.Wait()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/tylerb/graceful.v1@v1.2.15/http2_test.go:123:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\twg.Add(1)\n\tgo checkIfConnectionToServerIsHTTP2(t, \u0026wg, c)\n\twg.Wait()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/tylerb/graceful.v1@v1.2.15/http2_test.go:123:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\twg.Add(1)\n\tgo checkIfConnectionToServerIsHTTP2(t, \u0026wg, c)\n\twg.Wait()"}]}
{"created_at":"2023-06-22 17:57:36.732238 UTC","module_path":"github.com/chinahtl/go-micro/v3","version":"v3.6.9","sort_version":"3,6,9~","commit_time":"2021-09-02 02:14:15 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/chinahtl/go-micro/v3 [github.com/chinahtl/go-micro/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/chinahtl/go-micro/v3@v3.6.9/service_test.go:85:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := testRequest(ctx, service.Client(), \"test.service\"); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/chinahtl/go-micro/v3/transport [github.com/chinahtl/go-micro/v3/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/chinahtl/go-micro/v3@v3.6.9/transport/http_transport_test.go:205:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tcase \u003c-time.After(time.Second):\n\t\t\t\tt.Fatal(\"deadline not executed\")\n\t\t\t}"},{"package_id":"github.com/chinahtl/go-micro/v3/transport [github.com/chinahtl/go-micro/v3/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/chinahtl/go-micro/v3@v3.6.9/transport/memory_test.go:36:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t}); err != nil {\n\t\t\tt.Fatalf(\"Unexpected error accepting %v\", err)\n\t\t}"},{"package_id":"github.com/chinahtl/go-micro/v3/util/mdns [github.com/chinahtl/go-micro/v3/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/chinahtl/go-micro/v3@v3.6.9/util/mdns/server_test.go:31:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Name != \"hostname._foobar._tcp.local.\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/chinahtl/go-micro/v3/util/mdns [github.com/chinahtl/go-micro/v3/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/chinahtl/go-micro/v3@v3.6.9/util/mdns/server_test.go:34:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Port != 80 {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/chinahtl/go-micro/v3/util/mdns [github.com/chinahtl/go-micro/v3/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/chinahtl/go-micro/v3@v3.6.9/util/mdns/server_test.go:37:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Info != \"Local web server\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/chinahtl/go-micro/v3/util/mdns [github.com/chinahtl/go-micro/v3/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/chinahtl/go-micro/v3@v3.6.9/util/mdns/server_test.go:42:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tcase \u003c-time.After(80 * time.Millisecond):\n\t\t\tt.Fatalf(\"timeout\")\n\t\t}"}]}
{"created_at":"2023-06-22 17:20:02.78225 UTC","module_path":"github.com/gogf/gf","version":"v1.16.9","sort_version":"1,a16,9~","commit_time":"2022-05-30 07:49:24 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/gogf/gf/container/gset_test [github.com/gogf/gf/container/gset.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf@v1.16.9/container/gset/gset_z_example_any_test.go:155:1","message":"ExampleSet_ContainsI refers to unknown field or method: Set.ContainsI","source":"\nfunc ExampleSet_ContainsI() {\n\tvar set gset.StrSet"},{"package_id":"github.com/gogf/gf/net/ghttp_test [github.com/gogf/gf/net/ghttp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf@v1.16.9/net/ghttp/ghttp_z_example_test.go:17:1","message":"ExampleHelloWorld refers to unknown identifier: HelloWorld","source":"\nfunc ExampleHelloWorld() {\n\ts := g.Server()"},{"package_id":"github.com/gogf/gf/net/ghttp_test [github.com/gogf/gf/net/ghttp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf@v1.16.9/net/ghttp/ghttp_z_example_test.go:110:1","message":"ExampleClientChain_Proxy refers to unknown identifier: ClientChain","source":"// for more details, please refer to ExampleClient_SetProxy\nfunc ExampleClientChain_Proxy() {\n\tclient := g.Client()"},{"package_id":"github.com/gogf/gf/util/gvalid_test [github.com/gogf/gf/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf@v1.16.9/util/gvalid/gvalid_z_example_test.go:44:1","message":"ExampleCheckMap2 refers to unknown identifier: CheckMap2","source":"\nfunc ExampleCheckMap2() {\n\tparams := map[string]interface{}{"},{"package_id":"github.com/gogf/gf/util/gvalid_test [github.com/gogf/gf/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf@v1.16.9/util/gvalid/gvalid_z_example_test.go:84:1","message":"ExampleCheckStruct2 refers to unknown identifier: CheckStruct2","source":"// Empty pointer attribute.\nfunc ExampleCheckStruct2() {\n\ttype Params struct {"},{"package_id":"github.com/gogf/gf/util/gvalid_test [github.com/gogf/gf/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf@v1.16.9/util/gvalid/gvalid_z_example_test.go:101:1","message":"ExampleCheckStruct3 refers to unknown identifier: CheckStruct3","source":"// Empty integer attribute.\nfunc ExampleCheckStruct3() {\n\ttype Params struct {"},{"package_id":"github.com/gogf/gf/util/gvalid_test [github.com/gogf/gf/util/gvalid.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gogf/gf@v1.16.9/util/gvalid/gvalid_z_example_test.go:150:1","message":"ExampleRegisterRule_OverwriteRequired refers to unknown field or method: RegisterRule.OverwriteRequired","source":"\nfunc ExampleRegisterRule_OverwriteRequired() {\n\trule := \"required\""}]}
{"created_at":"2023-06-22 17:35:57.501786 UTC","module_path":"github.com/lestrrat/go-jwx","version":"v0.9.1","sort_version":"0,9,1~","commit_time":"2021-12-06 10:00:44 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/lestrrat/go-jwx/jws_test [github.com/lestrrat/go-jwx/jws.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lestrrat/go-jwx@v0.9.1/jws/doc_test.go:12:1","message":"ExampleSign_JWSCompact refers to unknown field or method: Sign.JWSCompact","source":"\nfunc ExampleSign_JWSCompact() {\n\tprivkey, err := rsa.GenerateKey(rand.Reader, 2048)"},{"package_id":"github.com/lestrrat/go-jwx/jws_test [github.com/lestrrat/go-jwx/jws.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lestrrat/go-jwx@v0.9.1/jws/doc_test.go:38:1","message":"ExampleSign_JWSJSON refers to unknown field or method: Sign.JWSJSON","source":"\nfunc ExampleSign_JWSJSON() {\n\tkey, err := rsa.GenerateKey(rand.Reader, 2048)"},{"package_id":"github.com/lestrrat/go-jwx/jwt_test [github.com/lestrrat/go-jwx/jwt.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lestrrat/go-jwx@v0.9.1/jwt/example_test.go:15:1","message":"ExampleSignAndParse refers to unknown identifier: SignAndParse","source":"\nfunc ExampleSignAndParse() {\n\tprivKey, err := rsa.GenerateKey(rand.Reader, 2048)"},{"package_id":"github.com/lestrrat/go-jwx_test [github.com/lestrrat/go-jwx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lestrrat/go-jwx@v0.9.1/jwx_example_test.go:18:1","message":"ExampleJWT refers to unknown identifier: JWT","source":"\nfunc ExampleJWT() {\n\tconst aLongLongTimeAgo = 233431200"},{"package_id":"github.com/lestrrat/go-jwx_test [github.com/lestrrat/go-jwx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lestrrat/go-jwx@v0.9.1/jwx_example_test.go:42:1","message":"ExampleJWK refers to unknown identifier: JWK","source":"\nfunc ExampleJWK() {\n\tset, err := jwk.FetchHTTP(\"https://foobar.domain/jwk.json\")"},{"package_id":"github.com/lestrrat/go-jwx_test [github.com/lestrrat/go-jwx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lestrrat/go-jwx@v0.9.1/jwx_example_test.go:67:1","message":"ExampleJWS refers to unknown identifier: JWS","source":"\nfunc ExampleJWS() {\n\tprivkey, err := rsa.GenerateKey(rand.Reader, 2048)"},{"package_id":"github.com/lestrrat/go-jwx_test [github.com/lestrrat/go-jwx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lestrrat/go-jwx@v0.9.1/jwx_example_test.go:91:1","message":"ExampleJWE refers to unknown identifier: JWE","source":"\nfunc ExampleJWE() {\n\tprivkey, err := rsa.GenerateKey(rand.Reader, 2048)"}]}
{"created_at":"2023-06-22 17:32:09.036979 UTC","module_path":"github.com/core-coin/go-core","version":"v1.1.7","sort_version":"1,1,7~","commit_time":"2022-12-08 10:16:42 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/core-coin/go-core/core [github.com/core-coin/go-core/core.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/core-coin/go-core@v1.1.7/core/blockchain_test.go:1066:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// Spawn a goroutine to receive log events\n\tgo validateLogEvent(logsCh, newLogCh, 1)\n\tif _, err := blockchain.InsertChain(chain); err != nil {"},{"package_id":"github.com/core-coin/go-core/core [github.com/core-coin/go-core/core.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/core-coin/go-core@v1.1.7/core/blockchain_test.go:1088:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// Spawn a goroutine to receive log events\n\tgo validateLogEvent(logsCh, newLogCh, 1)\n\tgo validateLogEvent(rmLogsCh, removeLogCh, 1)"},{"package_id":"github.com/core-coin/go-core/core [github.com/core-coin/go-core/core.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/core-coin/go-core@v1.1.7/core/blockchain_test.go:1089:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo validateLogEvent(logsCh, newLogCh, 1)\n\tgo validateLogEvent(rmLogsCh, removeLogCh, 1)\n\tif _, err := blockchain.InsertChain(forkChain); err != nil {"},{"package_id":"github.com/core-coin/go-core/core [github.com/core-coin/go-core/core.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/core-coin/go-core@v1.1.7/core/blockchain_test.go:1101:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tnewBlocks, _ := GenerateChain(params.TestChainConfig, chain[len(chain)-1], cryptore.NewFaker(), db, 1, func(i int, gen *BlockGen) {})\n\tgo validateLogEvent(logsCh, newLogCh, 1)\n\tgo validateLogEvent(rmLogsCh, removeLogCh, 1)"},{"package_id":"github.com/core-coin/go-core/core [github.com/core-coin/go-core/core.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/core-coin/go-core@v1.1.7/core/blockchain_test.go:1102:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo validateLogEvent(logsCh, newLogCh, 1)\n\tgo validateLogEvent(rmLogsCh, removeLogCh, 1)\n\tif _, err := blockchain.InsertChain(newBlocks); err != nil {"},{"package_id":"github.com/core-coin/go-core/les [github.com/core-coin/go-core/les.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/core-coin/go-core@v1.1.7/les/peer_test.go:124:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/core-coin/go-core/les [github.com/core-coin/go-core/les.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/core-coin/go-core@v1.1.7/les/peer_test.go:127:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif reqType != announceTypeSigned {\n\t\t\t\tt.Fatal(\"Expected announceTypeSigned\")\n\t\t\t}"},{"package_id":"github.com/core-coin/go-core/node_test [github.com/core-coin/go-core/node.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/core-coin/go-core@v1.1.7/node/node_example_test.go:37:1","message":"ExampleService refers to unknown identifier: Service","source":"\nfunc ExampleService() {\n\t// Create a network node to run protocols with the default values."}]}
{"created_at":"2023-06-22 17:34:30.750808 UTC","module_path":"github.com/go-micro/microwire/v5","version":"v5.0.2","sort_version":"5,0,2~","commit_time":"2022-10-03 15:21:20 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/go-micro/microwire/v5 [github.com/go-micro/microwire/v5.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-micro/microwire/v5@v5.0.2/service_test.go:125:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := testRequest(ctx, service.Client(), \"test.service\"); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/go-micro/microwire/v5/transport [github.com/go-micro/microwire/v5/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-micro/microwire/v5@v5.0.2/transport/http_transport_test.go:206:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tcase \u003c-time.After(time.Second):\n\t\t\t\tt.Fatal(\"deadline not executed\")\n\t\t\t}"},{"package_id":"github.com/go-micro/microwire/v5/transport [github.com/go-micro/microwire/v5/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-micro/microwire/v5@v5.0.2/transport/http_transport_test.go:435:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tcase \u003c-time.After(time.Second):\n\t\t\t\tt.Fatal(\"deadline not executed\")\n\t\t\t}"},{"package_id":"github.com/go-micro/microwire/v5/transport [github.com/go-micro/microwire/v5/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-micro/microwire/v5@v5.0.2/transport/memory_test.go:36:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t}); err != nil {\n\t\t\tt.Fatalf(\"Unexpected error accepting %v\", err)\n\t\t}"},{"package_id":"github.com/go-micro/microwire/v5/util/mdns [github.com/go-micro/microwire/v5/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-micro/microwire/v5@v5.0.2/util/mdns/server_test.go:31:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Name != \"hostname._foobar._tcp.local.\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/go-micro/microwire/v5/util/mdns [github.com/go-micro/microwire/v5/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-micro/microwire/v5@v5.0.2/util/mdns/server_test.go:34:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Port != 80 {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/go-micro/microwire/v5/util/mdns [github.com/go-micro/microwire/v5/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-micro/microwire/v5@v5.0.2/util/mdns/server_test.go:37:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Info != \"Local web server\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/go-micro/microwire/v5/util/mdns [github.com/go-micro/microwire/v5/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-micro/microwire/v5@v5.0.2/util/mdns/server_test.go:42:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tcase \u003c-time.After(80 * time.Millisecond):\n\t\t\tt.Fatalf(\"timeout\")\n\t\t}"}]}
{"created_at":"2023-06-22 17:58:40.183303 UTC","module_path":"github.com/gamexg/TcpRoute2","version":"v0.5.14","sort_version":"0,5,a14~","commit_time":"2019-03-21 05:21:59 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gamexg/TcpRoute2@v0.5.14/handler_test.go:54:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\td := []byte(\"GET / HTTP/1.0\\r\\nHOST:www.test.com\\r\\n\\r\\n\")\n\tgo client(d)\n\tc, err := l.Accept()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gamexg/TcpRoute2@v0.5.14/handler_test.go:54:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\td := []byte(\"GET / HTTP/1.0\\r\\nHOST:www.test.com\\r\\n\\r\\n\")\n\tgo client(d)\n\tc, err := l.Accept()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gamexg/TcpRoute2@v0.5.14/handler_test.go:67:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\td = []byte(\"GET / HTTP/1.0\\r\\nHOST:www.test.com:4444\\r\\n\\r\\n\")\n\tgo client(d)\n\tc, err = l.Accept()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gamexg/TcpRoute2@v0.5.14/handler_test.go:67:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\td = []byte(\"GET / HTTP/1.0\\r\\nHOST:www.test.com:4444\\r\\n\\r\\n\")\n\tgo client(d)\n\tc, err = l.Accept()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gamexg/TcpRoute2@v0.5.14/handler_test.go:80:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\td = []byte(\"GET / HTTP/1.0\\r\\nHOST:www.test.com\\r\\n\\r\\n\")\n\tgo client(d)\n\tc, err = l.Accept()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gamexg/TcpRoute2@v0.5.14/handler_test.go:80:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\td = []byte(\"GET / HTTP/1.0\\r\\nHOST:www.test.com\\r\\n\\r\\n\")\n\tgo client(d)\n\tc, err = l.Accept()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gamexg/TcpRoute2@v0.5.14/handler_test.go:93:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\td = []byte(\"GET / HTTP/1.0\\r\\n\\r\\n\")\n\tgo client(d)\n\tc, err = l.Accept()"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/gamexg/TcpRoute2@v0.5.14/handler_test.go:93:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\td = []byte(\"GET / HTTP/1.0\\r\\n\\r\\n\")\n\tgo client(d)\n\tc, err = l.Accept()"}]}
{"created_at":"2023-06-22 17:50:30.290159 UTC","module_path":"github.com/wirepair/netcode","version":"v0.0.0-20181109005356-568e8d518e34","sort_version":"0,0,0,~20181109005356-568e8d518e34","commit_time":"2018-11-09 00:53:56 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wirepair/netcode@v0.0.0-20181109005356-568e8d518e34/server_test.go:14:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tdoneCh := make(chan struct{})\n\tgo runTestServer(port, testSendFunc, doneCh, t)\n\tgo runTestClient(port, t)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wirepair/netcode@v0.0.0-20181109005356-568e8d518e34/server_test.go:14:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tdoneCh := make(chan struct{})\n\tgo runTestServer(port, testSendFunc, doneCh, t)\n\tgo runTestClient(port, t)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wirepair/netcode@v0.0.0-20181109005356-568e8d518e34/server_test.go:15:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTestServer(port, testSendFunc, doneCh, t)\n\tgo runTestClient(port, t)\n\t\u003c-doneCh"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wirepair/netcode@v0.0.0-20181109005356-568e8d518e34/server_test.go:15:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTestServer(port, testSendFunc, doneCh, t)\n\tgo runTestClient(port, t)\n\t\u003c-doneCh"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wirepair/netcode@v0.0.0-20181109005356-568e8d518e34/server_test.go:22:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tdoneCh := make(chan struct{})\n\tgo runTestServer(port, testSendToClientFunc, doneCh, t)\n\tgo runTestClient(port, t)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wirepair/netcode@v0.0.0-20181109005356-568e8d518e34/server_test.go:22:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tdoneCh := make(chan struct{})\n\tgo runTestServer(port, testSendToClientFunc, doneCh, t)\n\tgo runTestClient(port, t)"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wirepair/netcode@v0.0.0-20181109005356-568e8d518e34/server_test.go:23:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTestServer(port, testSendToClientFunc, doneCh, t)\n\tgo runTestClient(port, t)\n\t\u003c-doneCh"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wirepair/netcode@v0.0.0-20181109005356-568e8d518e34/server_test.go:23:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo runTestServer(port, testSendToClientFunc, doneCh, t)\n\tgo runTestClient(port, t)\n\t\u003c-doneCh"}]}
{"created_at":"2023-06-22 17:18:58.664671 UTC","module_path":"github.com/radovskyb/watcher","version":"v1.0.7","sort_version":"1,0,7~","commit_time":"2019-08-17 01:08:44 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/radovskyb/watcher@v1.0.7/watcher_test.go:526:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tcase \u003c-time.After(time.Millisecond * 250):\n\t\t\tt.Fatal(\"received no event from Event channel\")\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/radovskyb/watcher@v1.0.7/watcher_test.go:533:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := w.Start(time.Millisecond * 100); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/radovskyb/watcher@v1.0.7/watcher_test.go:610:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := w.Start(time.Millisecond * 100); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/radovskyb/watcher@v1.0.7/watcher_test.go:679:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := w.Start(time.Millisecond * 100); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/radovskyb/watcher@v1.0.7/watcher_test.go:732:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tcase \u003c-time.After(time.Millisecond * 250):\n\t\t\tt.Fatal(\"received no rename event\")\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/radovskyb/watcher@v1.0.7/watcher_test.go:739:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := w.Start(time.Millisecond * 100); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/radovskyb/watcher@v1.0.7/watcher_test.go:810:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := w.Start(time.Millisecond * 100); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/radovskyb/watcher@v1.0.7/watcher_test.go:832:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/radovskyb/watcher@v1.0.7/watcher_test.go:858:4","message":"call to (*B).Fatal from a non-test goroutine","source":"\t\tif err := w.Start(time.Millisecond); err != nil {\n\t\t\tb.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:29:56.606813 UTC","module_path":"gopkg.in/stomp.v1","version":"v1.0.2","sort_version":"1,0,2~","commit_time":"2021-04-11 00:36:58 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/stomp.v1@v1.0.2/example_test.go:10:1","message":"ExampleConn_Send should be niladic","source":"\nfunc ExampleConn_Send(c *stomp.Conn) error {\n\t// send with receipt and an optional header"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/stomp.v1@v1.0.2/example_test.go:10:1","message":"ExampleConn_Send should return nothing","source":"\nfunc ExampleConn_Send(c *stomp.Conn) error {\n\t// send with receipt and an optional header"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/stomp.v1@v1.0.2/example_test.go:78:1","message":"ExampleSubscription should return nothing","source":"\nfunc ExampleSubscription() error {\n\tconn, err := stomp.Dial(\"tcp\", \"localhost:61613\", stomp.Options{})"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/stomp.v1@v1.0.2/example_test.go:113:1","message":"ExampleTransaction should return nothing","source":"\nfunc ExampleTransaction() error {\n\tconn, err := stomp.Dial(\"tcp\", \"localhost:61613\", stomp.Options{})"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/stomp.v1@v1.0.2/example_test.go:160:1","message":"ExampleConnect should return nothing","source":"// Example of connecting to a STOMP server using an existing network connection.\nfunc ExampleConnect() error {\n\tnetConn, err := net.DialTimeout(\"tcp\", \"stomp.server.com:61613\", 10*time.Second)"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/stomp.v1@v1.0.2/example_test.go:178:1","message":"ExampleDial_1 should return nothing","source":"// Connect to a STOMP server using default options.\nfunc ExampleDial_1() error {\n\tconn, err := stomp.Dial(\"tcp\", \"192.168.1.1:61613\", stomp.Options{})"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/stomp.v1@v1.0.2/example_test.go:178:1","message":"ExampleDial_1 refers to unknown field or method: Dial.1","source":"// Connect to a STOMP server using default options.\nfunc ExampleDial_1() error {\n\tconn, err := stomp.Dial(\"tcp\", \"192.168.1.1:61613\", stomp.Options{})"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/stomp.v1@v1.0.2/example_test.go:200:1","message":"ExampleDial_2 should return nothing","source":"// server also accepts a non-standard header called 'nonce'.\nfunc ExampleDial_2() error {\n\tconn, err := stomp.Dial(\"tcp\", \"192.168.1.1:61613\", stomp.Options{"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/stomp.v1@v1.0.2/example_test.go:200:1","message":"ExampleDial_2 refers to unknown field or method: Dial.2","source":"// server also accepts a non-standard header called 'nonce'.\nfunc ExampleDial_2() error {\n\tconn, err := stomp.Dial(\"tcp\", \"192.168.1.1:61613\", stomp.Options{"}]}
{"created_at":"2023-06-22 17:26:23.731262 UTC","module_path":"github.com/rwxrob/bonzai","version":"v0.20.10","sort_version":"0,a20,a10~","commit_time":"2022-12-16 03:25:52 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/rwxrob/bonzai/z_test [github.com/rwxrob/bonzai/z.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rwxrob/bonzai@v0.20.10/z/bonzai_test.go:21:1","message":"ExampleArgsOrIn_read_Nil has malformed example suffix: Nil","source":"\nfunc ExampleArgsOrIn_read_Nil() {\n"},{"package_id":"github.com/rwxrob/bonzai/z_test [github.com/rwxrob/bonzai/z.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rwxrob/bonzai@v0.20.10/z/bonzai_test.go:36:1","message":"ExampleArgsOrIn_read_Zero_Args has malformed example suffix: Zero_Args","source":"\nfunc ExampleArgsOrIn_read_Zero_Args() {\n"},{"package_id":"github.com/rwxrob/bonzai/z_test [github.com/rwxrob/bonzai/z.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rwxrob/bonzai@v0.20.10/z/bonzai_test.go:51:1","message":"ExampleArgsOrIn_args_Joined has malformed example suffix: Joined","source":"\nfunc ExampleArgsOrIn_args_Joined() {\n"},{"package_id":"github.com/rwxrob/bonzai/z_test [github.com/rwxrob/bonzai/z.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rwxrob/bonzai@v0.20.10/z/bonzai_test.go:74:1","message":"ExampleInferredUsage_optional_Param has malformed example suffix: Param","source":"\nfunc ExampleInferredUsage_optional_Param() {\n\tx := \u0026Z.Cmd{"},{"package_id":"github.com/rwxrob/bonzai/z_test [github.com/rwxrob/bonzai/z.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rwxrob/bonzai@v0.20.10/z/bonzai_test.go:84:1","message":"ExampleInferredUsage_min_One_Param has malformed example suffix: One_Param","source":"\nfunc ExampleInferredUsage_min_One_Param() {\n\tx := \u0026Z.Cmd{"},{"package_id":"github.com/rwxrob/bonzai/z_test [github.com/rwxrob/bonzai/z.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rwxrob/bonzai@v0.20.10/z/bonzai_test.go:95:1","message":"ExampleInferredUsage_min_3_Param has malformed example suffix: 3_Param","source":"\nfunc ExampleInferredUsage_min_3_Param() {\n\tx := \u0026Z.Cmd{"},{"package_id":"github.com/rwxrob/bonzai/z_test [github.com/rwxrob/bonzai/z.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rwxrob/bonzai@v0.20.10/z/bonzai_test.go:132:1","message":"ExampleInferredUsage_error_No_Call_or_Command has malformed example suffix: No_Call_or_Command","source":"\nfunc ExampleInferredUsage_error_No_Call_or_Command() {\n\tx := \u0026Z.Cmd{"},{"package_id":"github.com/rwxrob/bonzai/z_test [github.com/rwxrob/bonzai/z.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rwxrob/bonzai@v0.20.10/z/bonzai_test.go:141:1","message":"ExampleInferredUsage_error_Params_without_Call has malformed example suffix: Params_without_Call","source":"\nfunc ExampleInferredUsage_error_Params_without_Call() {\n\tx := \u0026Z.Cmd{"},{"package_id":"github.com/rwxrob/bonzai/z_test [github.com/rwxrob/bonzai/z.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/rwxrob/bonzai@v0.20.10/z/mark_test.go:532:1","message":"ExamplePrintfWrapf refers to unknown identifier: PrintfWrapf","source":"\nfunc ExamplePrintfWrapf() {\n\tcol := Z.Columns"}]}
{"created_at":"2023-06-22 17:54:00.184636 UTC","module_path":"github.com/proullon/ramsql","version":"v0.0.0-20230531154420-daa2b47fbbb0","sort_version":"0,0,0,~20230531154420-daa2b47fbbb0","commit_time":"2023-05-31 15:44:20 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/proullon/ramsql/engine/protocol [github.com/proullon/ramsql/engine/protocol.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/proullon/ramsql@v0.0.0-20230531154420-daa2b47fbbb0/engine/protocol/channel_test.go:16:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/proullon/ramsql/engine/protocol [github.com/proullon/ramsql/engine/protocol.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/proullon/ramsql@v0.0.0-20230531154420-daa2b47fbbb0/engine/protocol/channel_test.go:20:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/proullon/ramsql/engine/protocol [github.com/proullon/ramsql/engine/protocol.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/proullon/ramsql@v0.0.0-20230531154420-daa2b47fbbb0/engine/protocol/channel_test.go:26:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/proullon/ramsql/engine/protocol [github.com/proullon/ramsql/engine/protocol.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/proullon/ramsql@v0.0.0-20230531154420-daa2b47fbbb0/engine/protocol/channel_test.go:31:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/proullon/ramsql/engine/protocol [github.com/proullon/ramsql/engine/protocol.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/proullon/ramsql@v0.0.0-20230531154420-daa2b47fbbb0/engine/protocol/channel_test.go:36:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/proullon/ramsql/engine/protocol [github.com/proullon/ramsql/engine/protocol.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/proullon/ramsql@v0.0.0-20230531154420-daa2b47fbbb0/engine/protocol/channel_test.go:100:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/proullon/ramsql/engine/protocol [github.com/proullon/ramsql/engine/protocol.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/proullon/ramsql@v0.0.0-20230531154420-daa2b47fbbb0/engine/protocol/channel_test.go:104:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/proullon/ramsql/engine/protocol [github.com/proullon/ramsql/engine/protocol.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/proullon/ramsql@v0.0.0-20230531154420-daa2b47fbbb0/engine/protocol/channel_test.go:144:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/proullon/ramsql/engine/protocol [github.com/proullon/ramsql/engine/protocol.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/proullon/ramsql@v0.0.0-20230531154420-daa2b47fbbb0/engine/protocol/channel_test.go:148:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:26:54.05644 UTC","module_path":"github.com/theplant/htmlgo","version":"v1.0.3","sort_version":"1,0,3~","commit_time":"2021-09-18 09:31:50 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/theplant/htmlgo_test [github.com/theplant/htmlgo.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/theplant/htmlgo@v1.0.3/example_test.go:16:1","message":"ExampleTag_01simplediv refers to unknown field or method: Tag.01simplediv","source":"*/\nfunc ExampleTag_01simplediv() {\n\tbanner := \"We write html in Go\""},{"package_id":"github.com/theplant/htmlgo_test [github.com/theplant/htmlgo.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/theplant/htmlgo@v1.0.3/example_test.go:33:1","message":"ExampleTag_02fullhtml refers to unknown field or method: Tag.02fullhtml","source":"*/\nfunc ExampleTag_02fullhtml() {\n\tcomp := HTML("},{"package_id":"github.com/theplant/htmlgo_test [github.com/theplant/htmlgo.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/theplant/htmlgo@v1.0.3/example_test.go:63:1","message":"ExampleTag_03rawhtmlandcomponent refers to unknown field or method: Tag.03rawhtmlandcomponent","source":"*/\nfunc ExampleTag_03rawhtmlandcomponent() {\n\tuserProfile := func(username string, avatarURL string) HTMLComponent {"},{"package_id":"github.com/theplant/htmlgo_test [github.com/theplant/htmlgo.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/theplant/htmlgo@v1.0.3/example_test.go:141:1","message":"ExampleTag_04newcomponentstyle refers to unknown field or method: Tag.04newcomponentstyle","source":"*/\nfunc ExampleTag_04newcomponentstyle() {\n"},{"package_id":"github.com/theplant/htmlgo_test [github.com/theplant/htmlgo.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/theplant/htmlgo@v1.0.3/example_test.go:200:1","message":"ExampleTag_05javascript refers to unknown field or method: Tag.05javascript","source":"*/\nfunc ExampleTag_05javascript() {\n"},{"package_id":"github.com/theplant/htmlgo_test [github.com/theplant/htmlgo.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/theplant/htmlgo@v1.0.3/example_test.go:241:1","message":"ExampleTag_06httphandler refers to unknown field or method: Tag.06httphandler","source":"*/\nfunc ExampleTag_06httphandler() {\n\ttype User struct {"},{"package_id":"github.com/theplant/htmlgo_test [github.com/theplant/htmlgo.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/theplant/htmlgo@v1.0.3/example_test.go:327:1","message":"ExampleTag_07MutipleTypeAttrs refers to unknown field or method: Tag.07MutipleTypeAttrs","source":"*/\nfunc ExampleTag_07MutipleTypeAttrs() {\n\ttype MoreData struct {"},{"package_id":"github.com/theplant/htmlgo_test [github.com/theplant/htmlgo.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/theplant/htmlgo@v1.0.3/example_test.go:354:1","message":"ExampleTag_08styles refers to unknown field or method: Tag.08styles","source":"*/\nfunc ExampleTag_08styles() {\n\tcomp := Div()."},{"package_id":"github.com/theplant/htmlgo_test [github.com/theplant/htmlgo.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/theplant/htmlgo@v1.0.3/example_test.go:366:1","message":"ExampleTag_09iff refers to unknown field or method: Tag.09iff","source":"*/\nfunc ExampleTag_09iff() {\n\ttype Person struct {"}]}
{"created_at":"2023-06-22 17:52:27.651884 UTC","module_path":"github.com/wirepair/gcd","version":"v1.0.15","sort_version":"1,0,a15~","commit_time":"2020-07-05 06:54:52 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/wirepair/gcd [github.com/wirepair/gcd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wirepair/gcd@v1.0.15/gcd_test.go:138:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tdoneCh := make(chan struct{})\n\tgo testTimeoutListener(t, doneCh, 5, \"timed out waiting for crashed to be handled\")\n"},{"package_id":"github.com/wirepair/gcd [github.com/wirepair/gcd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wirepair/gcd@v1.0.15/gcd_test.go:192:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\n\tgo testTimeoutListener(t, doneCh, 5, \"console message\")\n"},{"package_id":"github.com/wirepair/gcd [github.com/wirepair/gcd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wirepair/gcd@v1.0.15/gcd_test.go:304:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tdoneCh := make(chan struct{}, 1)\n\tgo testTimeoutListener(t, doneCh, 7, \"waiting for page load to get cookies\")\n\ttarget, err := debugger.NewTab()"},{"package_id":"github.com/wirepair/gcd [github.com/wirepair/gcd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wirepair/gcd@v1.0.15/gcd_test.go:354:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\n\tgo testTimeoutListener(t, doneCh, 15, \"timed out waiting for remote connection\")\n\tgo func() {"},{"package_id":"github.com/wirepair/gcd [github.com/wirepair/gcd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wirepair/gcd@v1.0.15/gcd_test.go:361:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"error creating new tab\")\n\t\t}"},{"package_id":"github.com/wirepair/gcd [github.com/wirepair/gcd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wirepair/gcd@v1.0.15/gcd_test.go:366:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif error != nil {\n\t\t\tt.Fatalf(\"cannot get targets: %s \\n\", error)\n\t\t}"},{"package_id":"github.com/wirepair/gcd [github.com/wirepair/gcd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wirepair/gcd@v1.0.15/gcd_test.go:369:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif len(targets) \u003c= 0 {\n\t\t\tt.Fatalf(\"invalid number of targets, got: %d\\n\", len(targets))\n\t\t}"},{"package_id":"github.com/wirepair/gcd [github.com/wirepair/gcd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wirepair/gcd@v1.0.15/gcd_test.go:410:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\n\tgo testTimeoutListener(t, doneCh, 15, \"timed out waiting for remote connection\")\n\t\u003c-doneCh"},{"package_id":"github.com/wirepair/gcd [github.com/wirepair/gcd.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/wirepair/gcd@v1.0.15/gcd_test.go:429:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\n\tgo testTimeoutListener(t, doneCh, 5, \"timed out waiting for requestIntercepted\")\n\tnetwork := target.Network"}]}
{"created_at":"2023-06-22 17:25:49.214744 UTC","module_path":"github.com/blevesearch/bleve/v2","version":"v2.3.8","sort_version":"2,3,8~","commit_time":"2023-05-04 16:58:22 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/blevesearch/bleve/v2 [github.com/blevesearch/bleve/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/blevesearch/bleve/v2@v2.3.8/index_test.go:1130:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err2 != nil {\n\t\t\t\t\tt.Fatal(err2)\n\t\t\t\t}"},{"package_id":"github.com/blevesearch/bleve/v2 [github.com/blevesearch/bleve/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/blevesearch/bleve/v2@v2.3.8/index_test.go:1223:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"github.com/blevesearch/bleve/v2 [github.com/blevesearch/bleve/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/blevesearch/bleve/v2@v2.3.8/index_test.go:1228:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/blevesearch/bleve/v2 [github.com/blevesearch/bleve/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/blevesearch/bleve/v2@v2.3.8/index_test.go:2156:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"github.com/blevesearch/bleve/v2 [github.com/blevesearch/bleve/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/blevesearch/bleve/v2@v2.3.8/index_test.go:2161:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/blevesearch/bleve/v2/index/scorch [github.com/blevesearch/bleve/v2/index/scorch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/blevesearch/bleve/v2@v2.3.8/index/scorch/scorch_test.go:1691:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/blevesearch/bleve/v2/index/scorch [github.com/blevesearch/bleve/v2/index/scorch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/blevesearch/bleve/v2@v2.3.8/index/scorch/scorch_test.go:1695:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/blevesearch/bleve/v2/index/scorch [github.com/blevesearch/bleve/v2/index/scorch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/blevesearch/bleve/v2@v2.3.8/index/scorch/scorch_test.go:1699:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/blevesearch/bleve/v2/index/scorch [github.com/blevesearch/bleve/v2/index/scorch.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/blevesearch/bleve/v2@v2.3.8/index/scorch/scorch_test.go:1703:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:59:21.161503 UTC","module_path":"github.com/kdcer/go-micro","version":"v0.0.0-20200917085549-f03dd2ec5b56","sort_version":"0,0,0,~20200917085549-f03dd2ec5b56","commit_time":"2020-09-17 08:55:49 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/kdcer/go-micro [github.com/kdcer/go-micro.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kdcer/go-micro@v0.0.0-20200917085549-f03dd2ec5b56/service_test.go:90:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := testRequest(ctx, service.Client(), \"test.service\"); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/kdcer/go-micro/service/grpc [github.com/kdcer/go-micro/service/grpc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kdcer/go-micro@v0.0.0-20200917085549-f03dd2ec5b56/service/grpc/grpc_test.go:49:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := service.Run(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/kdcer/go-micro/service/grpc [github.com/kdcer/go-micro/service/grpc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kdcer/go-micro@v0.0.0-20200917085549-f03dd2ec5b56/service/grpc/grpc_test.go:156:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := service.Run(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/kdcer/go-micro/transport [github.com/kdcer/go-micro/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kdcer/go-micro@v0.0.0-20200917085549-f03dd2ec5b56/transport/http_transport_test.go:205:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tcase \u003c-time.After(time.Second):\n\t\t\t\tt.Fatal(\"deadline not executed\")\n\t\t\t}"},{"package_id":"github.com/kdcer/go-micro/transport/memory [github.com/kdcer/go-micro/transport/memory.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kdcer/go-micro@v0.0.0-20200917085549-f03dd2ec5b56/transport/memory/memory_test.go:35:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t}); err != nil {\n\t\t\tt.Fatalf(\"Unexpected error accepting %v\", err)\n\t\t}"},{"package_id":"github.com/kdcer/go-micro/tunnel [github.com/kdcer/go-micro/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kdcer/go-micro@v0.0.0-20200917085549-f03dd2ec5b56/tunnel/tunnel_test.go:91:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\twg.Add(1)\n\tgo testAccept(t, tunA, \u0026wg)\n"},{"package_id":"github.com/kdcer/go-micro/tunnel [github.com/kdcer/go-micro/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kdcer/go-micro@v0.0.0-20200917085549-f03dd2ec5b56/tunnel/tunnel_test.go:91:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\twg.Add(1)\n\tgo testAccept(t, tunA, \u0026wg)\n"},{"package_id":"github.com/kdcer/go-micro/tunnel [github.com/kdcer/go-micro/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kdcer/go-micro@v0.0.0-20200917085549-f03dd2ec5b56/tunnel/tunnel_test.go:91:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\twg.Add(1)\n\tgo testAccept(t, tunA, \u0026wg)\n"},{"package_id":"github.com/kdcer/go-micro/web [github.com/kdcer/go-micro/web.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kdcer/go-micro@v0.0.0-20200917085549-f03dd2ec5b56/web/service_test.go:62:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := service.Run(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/kdcer/go-micro/web [github.com/kdcer/go-micro/web.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/kdcer/go-micro@v0.0.0-20200917085549-f03dd2ec5b56/web/service_test.go:226:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := service.Run(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:37:01.977179 UTC","module_path":"github.com/sunfmin/reflectutils","version":"v1.0.3","sort_version":"1,0,3~","commit_time":"2021-12-28 06:08:05 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/sunfmin/reflectutils_test [github.com/sunfmin/reflectutils.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/sunfmin/reflectutils@v1.0.3/example_test.go:11:1","message":"ExampleSet_0init refers to unknown field or method: Set.0init","source":"// By given these structs\nfunc ExampleSet_0init() {\n\ttype Person struct {"},{"package_id":"github.com/sunfmin/reflectutils_test [github.com/sunfmin/reflectutils.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/sunfmin/reflectutils@v1.0.3/example_test.go:51:1","message":"ExampleSet_1setfield refers to unknown field or method: Set.1setfield","source":"// For How to set simple field\nfunc ExampleSet_1setfield() {\n\tvar p *Person"},{"package_id":"github.com/sunfmin/reflectutils_test [github.com/sunfmin/reflectutils.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/sunfmin/reflectutils@v1.0.3/example_test.go:73:1","message":"ExampleSet_2setstructproperty refers to unknown field or method: Set.2setstructproperty","source":"// For how to set a struct property\nfunc ExampleSet_2setstructproperty() {\n\tp := \u0026Person{}"},{"package_id":"github.com/sunfmin/reflectutils_test [github.com/sunfmin/reflectutils.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/sunfmin/reflectutils@v1.0.3/example_test.go:100:1","message":"ExampleSet_3setsliceproperty refers to unknown field or method: Set.3setsliceproperty","source":"// For how to set slice and it's property\nfunc ExampleSet_3setsliceproperty() {\n\tvar p *Person"},{"package_id":"github.com/sunfmin/reflectutils_test [github.com/sunfmin/reflectutils.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/sunfmin/reflectutils@v1.0.3/example_test.go:149:1","message":"ExampleSet_4setmapproperty refers to unknown field or method: Set.4setmapproperty","source":"// For how to set map property\nfunc ExampleSet_4setmapproperty() {\n\tvar p *Person"},{"package_id":"github.com/sunfmin/reflectutils_test [github.com/sunfmin/reflectutils.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/sunfmin/reflectutils@v1.0.3/example_test.go:183:1","message":"ExampleSet_5setdeeper refers to unknown field or method: Set.5setdeeper","source":"// You can do whatever deeper you like\nfunc ExampleSet_5setdeeper() {\n\tvar p *Person"},{"package_id":"github.com/sunfmin/reflectutils_test [github.com/sunfmin/reflectutils.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/sunfmin/reflectutils@v1.0.3/example_test.go:226:1","message":"ExampleSet_6appendtoarray refers to unknown field or method: Set.6appendtoarray","source":"// A new way to append to an array\nfunc ExampleSet_6appendtoarray() {\n\tvar p *Person"},{"package_id":"github.com/sunfmin/reflectutils_test [github.com/sunfmin/reflectutils.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/sunfmin/reflectutils@v1.0.3/example_test.go:271:1","message":"ExampleSet_6byteandstring refers to unknown field or method: Set.6byteandstring","source":"// And set string value to int, float\nfunc ExampleSet_6byteandstring() {\n\ttype Obj struct {"},{"package_id":"github.com/sunfmin/reflectutils_test [github.com/sunfmin/reflectutils.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/sunfmin/reflectutils@v1.0.3/example_test.go:300:1","message":"ExampleSet_7notexists refers to unknown field or method: Set.7notexists","source":"// If you set a property that don't exists, it gives you an error.\nfunc ExampleSet_7notexists() {\n\tvar p *Person"},{"package_id":"github.com/sunfmin/reflectutils_test [github.com/sunfmin/reflectutils.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/sunfmin/reflectutils@v1.0.3/example_test.go:311:1","message":"ExampleSet_8gettype refers to unknown field or method: Set.8gettype","source":"// Get Type of a deep nested object\nfunc ExampleSet_8gettype() {\n\ttype Variant struct {"}]}
{"created_at":"2023-06-22 17:18:15.008271 UTC","module_path":"github.com/howeyc/fsnotify","version":"v0.9.0","sort_version":"0,9,0~","commit_time":"2014-02-27 14:46:22 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/howeyc/fsnotify@v0.9.0/fsnotify_test.go:66:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Error {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/howeyc/fsnotify@v0.9.0/fsnotify_test.go:184:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Error {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/howeyc/fsnotify@v0.9.0/fsnotify_test.go:329:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Error {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/howeyc/fsnotify@v0.9.0/fsnotify_test.go:434:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Error {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/howeyc/fsnotify@v0.9.0/fsnotify_test.go:479:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Error {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/howeyc/fsnotify@v0.9.0/fsnotify_test.go:571:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Error {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/howeyc/fsnotify@v0.9.0/fsnotify_test.go:653:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Error {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/howeyc/fsnotify@v0.9.0/fsnotify_test.go:746:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Error {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/howeyc/fsnotify@v0.9.0/fsnotify_test.go:829:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tcase ev := \u003c-watcher.Event:\n\t\t\tt.Fatalf(\"We received event: %v\\n\", ev)\n\t\tcase \u003c-time.After(500 * time.Millisecond):"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/howeyc/fsnotify@v0.9.0/fsnotify_test.go:864:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Error {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:19:22.792112 UTC","module_path":"github.com/goccy/go-yaml","version":"v1.11.0","sort_version":"1,a11,0~","commit_time":"2023-04-02 01:50:03 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/goccy/go-yaml_test [github.com/goccy/go-yaml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/goccy/go-yaml@v1.11.0/decode_test.go:1817:1","message":"Example_YAMLTags has malformed example suffix: YAMLTags","source":"\nfunc Example_YAMLTags() {\n\tyml := `---"},{"package_id":"github.com/goccy/go-yaml_test [github.com/goccy/go-yaml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/goccy/go-yaml@v1.11.0/decode_test.go:1997:1","message":"Example_JSONTags has malformed example suffix: JSONTags","source":"\nfunc Example_JSONTags() {\n\tyml := `---"},{"package_id":"github.com/goccy/go-yaml_test [github.com/goccy/go-yaml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/goccy/go-yaml@v1.11.0/decode_test.go:2016:1","message":"Example_DisallowUnknownField has malformed example suffix: DisallowUnknownField","source":"\nfunc Example_DisallowUnknownField() {\n\tvar v struct {"},{"package_id":"github.com/goccy/go-yaml_test [github.com/goccy/go-yaml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/goccy/go-yaml@v1.11.0/decode_test.go:2037:1","message":"Example_Unmarshal_Node has malformed example suffix: Unmarshal_Node","source":"\nfunc Example_Unmarshal_Node() {\n\tf, err := parser.ParseBytes([]byte(\"text: node example\"), 0)"},{"package_id":"github.com/goccy/go-yaml_test [github.com/goccy/go-yaml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/goccy/go-yaml@v1.11.0/encode_test.go:1229:1","message":"Example_Marshal_Node has malformed example suffix: Marshal_Node","source":"\nfunc Example_Marshal_Node() {\n\ttype T struct {"},{"package_id":"github.com/goccy/go-yaml_test [github.com/goccy/go-yaml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/goccy/go-yaml@v1.11.0/encode_test.go:1246:1","message":"Example_Marshal_ExplicitAnchorAlias has malformed example suffix: Marshal_ExplicitAnchorAlias","source":"\nfunc Example_Marshal_ExplicitAnchorAlias() {\n\ttype T struct {"},{"package_id":"github.com/goccy/go-yaml_test [github.com/goccy/go-yaml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/goccy/go-yaml@v1.11.0/encode_test.go:1269:1","message":"Example_Marshal_ImplicitAnchorAlias has malformed example suffix: Marshal_ImplicitAnchorAlias","source":"\nfunc Example_Marshal_ImplicitAnchorAlias() {\n\ttype T struct {"},{"package_id":"github.com/goccy/go-yaml_test [github.com/goccy/go-yaml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/goccy/go-yaml@v1.11.0/encode_test.go:1394:1","message":"Example_MarshalYAML has malformed example suffix: MarshalYAML","source":"\nfunc Example_MarshalYAML() {\n\tvar slow SlowMarshaler"},{"package_id":"github.com/goccy/go-yaml_test [github.com/goccy/go-yaml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/goccy/go-yaml@v1.11.0/path_test.go:605:1","message":"ExamplePath_AnnotateSourceWithComment refers to unknown field or method: Path.AnnotateSourceWithComment","source":"\nfunc ExamplePath_AnnotateSourceWithComment() {\n\tyml := `"},{"package_id":"github.com/goccy/go-yaml_test [github.com/goccy/go-yaml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/goccy/go-yaml@v1.11.0/path_test.go:636:1","message":"ExamplePath_PathString refers to unknown field or method: Path.PathString","source":"\nfunc ExamplePath_PathString() {\n\tyml := `"}]}
{"created_at":"2023-06-22 17:24:50.699159 UTC","module_path":"github.com/dave/dst","version":"v0.27.2","sort_version":"0,a27,2~","commit_time":"2022-10-13 13:16:51 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/dave/dst_test [github.com/dave/dst.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dave/dst@v0.27.2/decorations_test.go:88:1","message":"ExampleAlias refers to unknown identifier: Alias","source":"\nfunc ExampleAlias() {\n"},{"package_id":"github.com/dave/dst_test [github.com/dave/dst.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dave/dst@v0.27.2/decorations_test.go:125:1","message":"ExampleManualImports refers to unknown identifier: ManualImports","source":"\nfunc ExampleManualImports() {\n"},{"package_id":"github.com/dave/dst_test [github.com/dave/dst.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dave/dst@v0.27.2/decorations_test.go:168:1","message":"ExampleImports refers to unknown identifier: Imports","source":"\nfunc ExampleImports() {\n"},{"package_id":"github.com/dave/dst_test [github.com/dave/dst.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dave/dst@v0.27.2/decorations_test.go:219:1","message":"ExampleGoTypesImport refers to unknown identifier: GoTypesImport","source":"\nfunc ExampleGoTypesImport() {\n"},{"package_id":"github.com/dave/dst_test [github.com/dave/dst.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dave/dst@v0.27.2/decorations_test.go:300:1","message":"ExampleDecorationPoints refers to unknown identifier: DecorationPoints","source":"\nfunc ExampleDecorationPoints() {\n\tcode := `package main"},{"package_id":"github.com/dave/dst_test [github.com/dave/dst.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dave/dst@v0.27.2/decorations_test.go:386:1","message":"ExampleTypes refers to unknown identifier: Types","source":"\nfunc ExampleTypes() {\n\tcode := `package main"},{"package_id":"github.com/dave/dst_test [github.com/dave/dst.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dave/dst@v0.27.2/decorations_test.go:467:1","message":"ExampleDecorated refers to unknown identifier: Decorated","source":"\nfunc ExampleDecorated() {\n\tcode := `package main"},{"package_id":"github.com/dave/dst_test [github.com/dave/dst.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dave/dst@v0.27.2/decorations_test.go:504:1","message":"ExampleSpace refers to unknown identifier: Space","source":"\nfunc ExampleSpace() {\n\tcode := `package main"},{"package_id":"github.com/dave/dst_test [github.com/dave/dst.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dave/dst@v0.27.2/decorations_test.go:626:1","message":"ExampleAstBroken refers to unknown identifier: AstBroken","source":"\nfunc ExampleAstBroken() {\n\tcode := `package a"},{"package_id":"github.com/dave/dst_test [github.com/dave/dst.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dave/dst@v0.27.2/decorations_test.go:658:1","message":"ExampleDstFixed refers to unknown identifier: DstFixed","source":"\nfunc ExampleDstFixed() {\n\tcode := `package a"}]}
{"created_at":"2023-06-22 17:55:40.182415 UTC","module_path":"simonwaldherr.de/go/golibs","version":"v0.15.0","sort_version":"0,a15,0~","commit_time":"2023-04-07 19:59:37 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"simonwaldherr.de/go/golibs/cache_test [simonwaldherr.de/go/golibs/cache.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/simonwaldherr.de/go/golibs@v0.15.0/cache/example_test.go:30:1","message":"ExampleExport refers to unknown identifier: Export","source":"\nfunc ExampleExport() {\n\tc := cache.New(5*time.Second, 1*time.Second)"},{"package_id":"simonwaldherr.de/go/golibs/http_test [simonwaldherr.de/go/golibs/http.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/simonwaldherr.de/go/golibs@v0.15.0/http/example_test.go:66:1","message":"ExampleUserAgent refers to unknown identifier: UserAgent","source":"\nfunc ExampleUserAgent() {\n\tts := httptest.NewServer(ohttp.HandlerFunc(func(rw ohttp.ResponseWriter, req *ohttp.Request) {"},{"package_id":"simonwaldherr.de/go/golibs/http_test [simonwaldherr.de/go/golibs/http.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/simonwaldherr.de/go/golibs@v0.15.0/http/example_test.go:92:1","message":"ExampleGetString2 refers to unknown identifier: GetString2","source":"\nfunc ExampleGetString2() {\n\tresp, err := http.GetString(\"https://google.de/\")"},{"package_id":"simonwaldherr.de/go/golibs/rss [simonwaldherr.de/go/golibs/rss.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/simonwaldherr.de/go/golibs@v0.15.0/rss/rss_test.go:50:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t} else {\n\t\t\t\tt.Fatalf(\"rss.Read Test failed: %v\\nFeed: %v\\n\\n\", err, url)\n\t\t\t}"},{"package_id":"simonwaldherr.de/go/golibs/stack_test [simonwaldherr.de/go/golibs/stack.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/simonwaldherr.de/go/golibs@v0.15.0/stack/example_test.go:27:1","message":"ExampleStack2 refers to unknown identifier: Stack2","source":"\nfunc ExampleStack2() {\n\tvar array *stack.Stack"},{"package_id":"simonwaldherr.de/go/golibs/stack_test [simonwaldherr.de/go/golibs/stack.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/simonwaldherr.de/go/golibs@v0.15.0/stack/example_test.go:92:1","message":"ExampleToFifo refers to unknown identifier: ToFifo","source":"\nfunc ExampleToFifo() {\n\tarray1 := stack.Lifo()"},{"package_id":"simonwaldherr.de/go/golibs/stack_test [simonwaldherr.de/go/golibs/stack.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/simonwaldherr.de/go/golibs@v0.15.0/stack/example_test.go:110:1","message":"ExampleToFifoFromFifo refers to unknown identifier: ToFifoFromFifo","source":"\nfunc ExampleToFifoFromFifo() {\n\tarray1 := stack.Fifo()"},{"package_id":"simonwaldherr.de/go/golibs/stack_test [simonwaldherr.de/go/golibs/stack.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/simonwaldherr.de/go/golibs@v0.15.0/stack/example_test.go:128:1","message":"ExampleToLifo refers to unknown identifier: ToLifo","source":"\nfunc ExampleToLifo() {\n\tarray1 := stack.Fifo()"},{"package_id":"simonwaldherr.de/go/golibs/stack_test [simonwaldherr.de/go/golibs/stack.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/simonwaldherr.de/go/golibs@v0.15.0/stack/example_test.go:146:1","message":"ExampleToLifoFromLifo refers to unknown identifier: ToLifoFromLifo","source":"\nfunc ExampleToLifoFromLifo() {\n\tarray1 := stack.Lifo()"},{"package_id":"simonwaldherr.de/go/golibs/xtime_test [simonwaldherr.de/go/golibs/xtime.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/simonwaldherr.de/go/golibs@v0.15.0/xtime/example_test.go:18:1","message":"ExampleFmt2 refers to unknown identifier: Fmt2","source":"\nfunc ExampleFmt2() {\n\tt, _ := time.Parse(time.ANSIC, \"Mon Jan 02 15:04:05 2006\")"}]}
{"created_at":"2023-06-22 17:22:20.244759 UTC","module_path":"github.com/armon/go-socks5","version":"v0.0.0-20160902184237-e75332964ef5","sort_version":"0,0,0,~20160902184237-e75332964ef5","commit_time":"2016-09-02 18:42:37 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-socks5@v0.0.0-20160902184237-e75332964ef5/request_test.go:35:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-socks5@v0.0.0-20160902184237-e75332964ef5/request_test.go:41:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := io.ReadAtLeast(conn, buf, 4); err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-socks5@v0.0.0-20160902184237-e75332964ef5/request_test.go:45:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif !bytes.Equal(buf, []byte(\"ping\")) {\n\t\t\tt.Fatalf(\"bad: %v\", buf)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-socks5@v0.0.0-20160902184237-e75332964ef5/request_test.go:110:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-socks5@v0.0.0-20160902184237-e75332964ef5/request_test.go:116:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := io.ReadAtLeast(conn, buf, 4); err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-socks5@v0.0.0-20160902184237-e75332964ef5/request_test.go:120:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif !bytes.Equal(buf, []byte(\"ping\")) {\n\t\t\tt.Fatalf(\"bad: %v\", buf)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-socks5@v0.0.0-20160902184237-e75332964ef5/socks5_test.go:23:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-socks5@v0.0.0-20160902184237-e75332964ef5/socks5_test.go:29:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := io.ReadAtLeast(conn, buf, 4); err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-socks5@v0.0.0-20160902184237-e75332964ef5/socks5_test.go:33:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif !bytes.Equal(buf, []byte(\"ping\")) {\n\t\t\tt.Fatalf(\"bad: %v\", buf)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-socks5@v0.0.0-20160902184237-e75332964ef5/socks5_test.go:56:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := serv.ListenAndServe(\"tcp\", \"127.0.0.1:12365\"); err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:29:01.915335 UTC","module_path":"github.com/vjeantet/grok","version":"v1.0.1","sort_version":"1,0,1~","commit_time":"2020-12-22 18:37:45 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/vjeantet/grok [github.com/vjeantet/grok.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vjeantet/grok@v1.0.1/grok_test.go:461:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\n\tgo check(\"QUOTEDSTRING\", `\"lkj\"`, \"%{QUOTEDSTRING}\", `qsdklfjqsd fk\"lkj\"mkj`)\n\tgo check(\"QUOTEDSTRING\", `'lkj'`, \"%{QUOTEDSTRING}\", `qsdklfjqsd fk'lkj'mkj`)"},{"package_id":"github.com/vjeantet/grok [github.com/vjeantet/grok.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vjeantet/grok@v1.0.1/grok_test.go:461:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\n\tgo check(\"QUOTEDSTRING\", `\"lkj\"`, \"%{QUOTEDSTRING}\", `qsdklfjqsd fk\"lkj\"mkj`)\n\tgo check(\"QUOTEDSTRING\", `'lkj'`, \"%{QUOTEDSTRING}\", `qsdklfjqsd fk'lkj'mkj`)"},{"package_id":"github.com/vjeantet/grok [github.com/vjeantet/grok.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vjeantet/grok@v1.0.1/grok_test.go:462:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo check(\"QUOTEDSTRING\", `\"lkj\"`, \"%{QUOTEDSTRING}\", `qsdklfjqsd fk\"lkj\"mkj`)\n\tgo check(\"QUOTEDSTRING\", `'lkj'`, \"%{QUOTEDSTRING}\", `qsdklfjqsd fk'lkj'mkj`)\n\tgo check(\"QUOTEDSTRING\", `'lkj'`, \"%{QUOTEDSTRING}\", `qsdklfjqsd fk'lkj'mkj`)"},{"package_id":"github.com/vjeantet/grok [github.com/vjeantet/grok.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vjeantet/grok@v1.0.1/grok_test.go:462:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo check(\"QUOTEDSTRING\", `\"lkj\"`, \"%{QUOTEDSTRING}\", `qsdklfjqsd fk\"lkj\"mkj`)\n\tgo check(\"QUOTEDSTRING\", `'lkj'`, \"%{QUOTEDSTRING}\", `qsdklfjqsd fk'lkj'mkj`)\n\tgo check(\"QUOTEDSTRING\", `'lkj'`, \"%{QUOTEDSTRING}\", `qsdklfjqsd fk'lkj'mkj`)"},{"package_id":"github.com/vjeantet/grok [github.com/vjeantet/grok.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vjeantet/grok@v1.0.1/grok_test.go:463:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo check(\"QUOTEDSTRING\", `'lkj'`, \"%{QUOTEDSTRING}\", `qsdklfjqsd fk'lkj'mkj`)\n\tgo check(\"QUOTEDSTRING\", `'lkj'`, \"%{QUOTEDSTRING}\", `qsdklfjqsd fk'lkj'mkj`)\n\tgo check(\"QUOTEDSTRING\", `\"fk'lkj'm\"`, \"%{QUOTEDSTRING}\", `qsdklfjqsd \"fk'lkj'm\"kj`)"},{"package_id":"github.com/vjeantet/grok [github.com/vjeantet/grok.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vjeantet/grok@v1.0.1/grok_test.go:463:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo check(\"QUOTEDSTRING\", `'lkj'`, \"%{QUOTEDSTRING}\", `qsdklfjqsd fk'lkj'mkj`)\n\tgo check(\"QUOTEDSTRING\", `'lkj'`, \"%{QUOTEDSTRING}\", `qsdklfjqsd fk'lkj'mkj`)\n\tgo check(\"QUOTEDSTRING\", `\"fk'lkj'm\"`, \"%{QUOTEDSTRING}\", `qsdklfjqsd \"fk'lkj'm\"kj`)"},{"package_id":"github.com/vjeantet/grok [github.com/vjeantet/grok.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vjeantet/grok@v1.0.1/grok_test.go:464:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo check(\"QUOTEDSTRING\", `'lkj'`, \"%{QUOTEDSTRING}\", `qsdklfjqsd fk'lkj'mkj`)\n\tgo check(\"QUOTEDSTRING\", `\"fk'lkj'm\"`, \"%{QUOTEDSTRING}\", `qsdklfjqsd \"fk'lkj'm\"kj`)\n\tgo check(\"QUOTEDSTRING\", `'fk\"lkj\"m'`, \"%{QUOTEDSTRING}\", `qsdklfjqsd 'fk\"lkj\"m'kj`)"},{"package_id":"github.com/vjeantet/grok [github.com/vjeantet/grok.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vjeantet/grok@v1.0.1/grok_test.go:464:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo check(\"QUOTEDSTRING\", `'lkj'`, \"%{QUOTEDSTRING}\", `qsdklfjqsd fk'lkj'mkj`)\n\tgo check(\"QUOTEDSTRING\", `\"fk'lkj'm\"`, \"%{QUOTEDSTRING}\", `qsdklfjqsd \"fk'lkj'm\"kj`)\n\tgo check(\"QUOTEDSTRING\", `'fk\"lkj\"m'`, \"%{QUOTEDSTRING}\", `qsdklfjqsd 'fk\"lkj\"m'kj`)"},{"package_id":"github.com/vjeantet/grok [github.com/vjeantet/grok.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vjeantet/grok@v1.0.1/grok_test.go:465:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo check(\"QUOTEDSTRING\", `\"fk'lkj'm\"`, \"%{QUOTEDSTRING}\", `qsdklfjqsd \"fk'lkj'm\"kj`)\n\tgo check(\"QUOTEDSTRING\", `'fk\"lkj\"m'`, \"%{QUOTEDSTRING}\", `qsdklfjqsd 'fk\"lkj\"m'kj`)\n}"},{"package_id":"github.com/vjeantet/grok [github.com/vjeantet/grok.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vjeantet/grok@v1.0.1/grok_test.go:465:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tgo check(\"QUOTEDSTRING\", `\"fk'lkj'm\"`, \"%{QUOTEDSTRING}\", `qsdklfjqsd \"fk'lkj'm\"kj`)\n\tgo check(\"QUOTEDSTRING\", `'fk\"lkj\"m'`, \"%{QUOTEDSTRING}\", `qsdklfjqsd 'fk\"lkj\"m'kj`)\n}"}]}
{"created_at":"2023-06-22 17:44:28.225533 UTC","module_path":"github.com/clipperhouse/fsnotify","version":"v1.1.0","sort_version":"1,1,0~","commit_time":"2014-12-13 06:17:38 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/clipperhouse/fsnotify@v1.1.0/integration_test.go:68:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/clipperhouse/fsnotify@v1.1.0/integration_test.go:186:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/clipperhouse/fsnotify@v1.1.0/integration_test.go:331:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/clipperhouse/fsnotify@v1.1.0/integration_test.go:436:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/clipperhouse/fsnotify@v1.1.0/integration_test.go:481:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/clipperhouse/fsnotify@v1.1.0/integration_test.go:573:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/clipperhouse/fsnotify@v1.1.0/integration_test.go:655:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/clipperhouse/fsnotify@v1.1.0/integration_test.go:748:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/clipperhouse/fsnotify@v1.1.0/integration_test.go:831:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tcase ev := \u003c-watcher.Events:\n\t\t\tt.Fatalf(\"We received event: %v\\n\", ev)\n\t\tcase \u003c-time.After(500 * time.Millisecond):"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/clipperhouse/fsnotify@v1.1.0/integration_test.go:866:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:22:11.064691 UTC","module_path":"github.com/arangodb/go-driver","version":"v1.6.0","sort_version":"1,6,0~","commit_time":"2023-05-30 10:00:57 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/arangodb/go-driver/test [github.com/arangodb/go-driver/test.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/arangodb/go-driver@v1.6.0/test/backup_test.go:204:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := db.Query(nil, fmt.Sprintf(\"FOR i IN 1..15 INSERT {s:SLEEP(1)} INTO %s\", colname), nil); err != nil {\n\t\t\tt.Fatalf(\"Failed to run query: %s\", describe(err))\n\t\t}"},{"package_id":"github.com/arangodb/go-driver/test [github.com/arangodb/go-driver/test.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/arangodb/go-driver@v1.6.0/test/cursor_test.go:489:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Expected success in write-query %s, got '%s'\", query, describe(err))\n\t\t}"},{"package_id":"github.com/arangodb/go-driver/test [github.com/arangodb/go-driver/test.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/arangodb/go-driver@v1.6.0/test/cursor_test.go:496:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif _, err := cursor.ReadDocument(ctx2, \u0026data); err != nil {\n\t\t\t\tt.Fatalf(\"Failed to read document, err: %s\", describe(err))\n\t\t\t}"},{"package_id":"github.com/arangodb/go-driver/test [github.com/arangodb/go-driver/test.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/arangodb/go-driver@v1.6.0/test/cursor_test.go:509:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif _, err := cursor.ReadDocument(ctx2, \u0026user); err != nil {\n\t\t\t\t\tt.Fatalf(\"Failed to result document %d: %s\", i, describe(err))\n\t\t\t\t}"},{"package_id":"github.com/arangodb/go-driver_test [github.com/arangodb/go-driver.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/arangodb/go-driver@v1.6.0/example_context_test.go:35:1","message":"ExampleWithRevision should be niladic","source":"\nfunc ExampleWithRevision(collection driver.Collection) {\n\tvar result Book"},{"package_id":"github.com/arangodb/go-driver_test [github.com/arangodb/go-driver.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/arangodb/go-driver@v1.6.0/example_context_test.go:44:1","message":"ExampleWithSilent should be niladic","source":"\nfunc ExampleWithSilent(collection driver.Collection) {\n\tvar result Book"},{"package_id":"github.com/arangodb/go-driver_test [github.com/arangodb/go-driver.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/arangodb/go-driver@v1.6.0/example_context_test.go:53:1","message":"ExampleWithQueueTimeout should be niladic","source":"\nfunc ExampleWithQueueTimeout(collection driver.Collection) {\n\tvar result Book"},{"package_id":"github.com/arangodb/go-driver_test [github.com/arangodb/go-driver.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/arangodb/go-driver@v1.6.0/example_context_test.go:53:1","message":"ExampleWithQueueTimeout refers to unknown identifier: WithQueueTimeout","source":"\nfunc ExampleWithQueueTimeout(collection driver.Collection) {\n\tvar result Book"},{"package_id":"github.com/arangodb/go-driver_test [github.com/arangodb/go-driver.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/arangodb/go-driver@v1.6.0/example_error_test.go:34:1","message":"ExampleIsNotFound should be niladic","source":"\nfunc ExampleIsNotFound(collection driver.Collection) {\n\tvar result Book"},{"package_id":"github.com/arangodb/go-driver_test [github.com/arangodb/go-driver.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/arangodb/go-driver@v1.6.0/example_error_test.go:41:1","message":"ExampleIsPreconditionFailed should be niladic","source":"\nfunc ExampleIsPreconditionFailed(collection driver.Collection) {\n\tvar result Book"}]}
{"created_at":"2023-06-22 18:00:00.957872 UTC","module_path":"github.com/hidez8891/shm","version":"v0.0.0-20200313135933-0ec4df5f28c7","sort_version":"0,0,0,~20200313135933-0ec4df5f28c7","commit_time":"2020-03-13 13:59:33 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/hidez8891/shm_test [github.com/hidez8891/shm.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hidez8891/shm@v0.0.0-20200313135933-0ec4df5f28c7/shm_test.go:206:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\twritten \u003c- false\n\t\t\t\tt.Fatalf(\"fail: write shared memroy %v\", err)\n\t\t\t}"},{"package_id":"github.com/hidez8891/shm_test [github.com/hidez8891/shm.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hidez8891/shm@v0.0.0-20200313135933-0ec4df5f28c7/shm_test.go:210:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\twritten \u003c- false\n\t\t\t\tt.Fatalf(\"fail: write shared memroy %d byte, want %d byte\", n, tt.size)\n\t\t\t}"},{"package_id":"github.com/hidez8891/shm_test [github.com/hidez8891/shm.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hidez8891/shm@v0.0.0-20200313135933-0ec4df5f28c7/shm_test.go:239:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\treadone \u003c- false\n\t\t\t\tt.Fatalf(\"fail: read shared memroy %v\", err)\n\t\t\t}"},{"package_id":"github.com/hidez8891/shm_test [github.com/hidez8891/shm.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hidez8891/shm@v0.0.0-20200313135933-0ec4df5f28c7/shm_test.go:243:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\treadone \u003c- false\n\t\t\t\tt.Fatalf(\"fail: read shared memroy %d byte, want %d byte\", n, tt.size)\n\t\t\t}"},{"package_id":"github.com/hidez8891/shm_test [github.com/hidez8891/shm.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hidez8891/shm@v0.0.0-20200313135933-0ec4df5f28c7/shm_test.go:247:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\treadone \u003c- false\n\t\t\t\tt.Fatalf(\"fail: read shared memroy %v, want %v\", buf[:tt.size], data[:tt.size])\n\t\t\t}"},{"package_id":"github.com/hidez8891/shm_test [github.com/hidez8891/shm.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hidez8891/shm@v0.0.0-20200313135933-0ec4df5f28c7/shm_test.go:348:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\twritten \u003c- false\n\t\t\t\tt.Fatalf(\"fail: write shared memroy %v\", err)\n\t\t\t}"},{"package_id":"github.com/hidez8891/shm_test [github.com/hidez8891/shm.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hidez8891/shm@v0.0.0-20200313135933-0ec4df5f28c7/shm_test.go:352:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\twritten \u003c- false\n\t\t\t\tt.Fatalf(\"fail: write shared memroy %d byte, want %d byte\", n, tt.size)\n\t\t\t}"},{"package_id":"github.com/hidez8891/shm_test [github.com/hidez8891/shm.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hidez8891/shm@v0.0.0-20200313135933-0ec4df5f28c7/shm_test.go:381:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\treadone \u003c- false\n\t\t\t\tt.Fatalf(\"fail: read shared memroy %v\", err)\n\t\t\t}"},{"package_id":"github.com/hidez8891/shm_test [github.com/hidez8891/shm.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hidez8891/shm@v0.0.0-20200313135933-0ec4df5f28c7/shm_test.go:385:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\treadone \u003c- false\n\t\t\t\tt.Fatalf(\"fail: read shared memroy %d byte, want %d byte\", n, tt.size)\n\t\t\t}"},{"package_id":"github.com/hidez8891/shm_test [github.com/hidez8891/shm.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/hidez8891/shm@v0.0.0-20200313135933-0ec4df5f28c7/shm_test.go:389:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\treadone \u003c- false\n\t\t\t\tt.Fatalf(\"fail: read shared memroy %v, want %v\", buf[:tt.size], data[:tt.size])\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:30:16.435535 UTC","module_path":"github.com/songzhibin97/gkit","version":"v1.2.11","sort_version":"1,2,a11~","commit_time":"2023-05-03 09:13:19 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/songzhibin97/gkit/cache/local_cache [github.com/songzhibin97/gkit/cache/local_cache.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/songzhibin97/gkit@v1.2.11/cache/local_cache/example_test.go:39:1","message":"ExampleCacheStorage refers to unknown identifier: CacheStorage","source":"\nfunc ExampleCacheStorage() {\n\t// Set 添加cache 无论是否存在都会覆盖"},{"package_id":"github.com/songzhibin97/gkit/cache/local_cache [github.com/songzhibin97/gkit/cache/local_cache.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/songzhibin97/gkit@v1.2.11/cache/local_cache/example_test.go:60:1","message":"ExampleGet refers to unknown identifier: Get","source":"\nfunc ExampleGet() {\n\t// Get 根据key获取 cache 保证有效期内的kv被取出"},{"package_id":"github.com/songzhibin97/gkit/cache/local_cache [github.com/songzhibin97/gkit/cache/local_cache.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/songzhibin97/gkit@v1.2.11/cache/local_cache/example_test.go:88:1","message":"ExampleIncrement refers to unknown identifier: Increment","source":"\nfunc ExampleIncrement() {\n\tch.Set(\"k3\", 1, DefaultExpire)"},{"package_id":"github.com/songzhibin97/gkit/cache/local_cache [github.com/songzhibin97/gkit/cache/local_cache.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/songzhibin97/gkit@v1.2.11/cache/local_cache/example_test.go:107:1","message":"ExampleDelete refers to unknown identifier: Delete","source":"\nfunc ExampleDelete() {\n\t// Delete 如果设置了 capture 会触发不或函数"},{"package_id":"github.com/songzhibin97/gkit/cache/local_cache [github.com/songzhibin97/gkit/cache/local_cache.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/songzhibin97/gkit@v1.2.11/cache/local_cache/example_test.go:115:1","message":"ExampleChangeCapture refers to unknown identifier: ChangeCapture","source":"\nfunc ExampleChangeCapture() {\n\t// 提供了在运行中改变捕获函数的方法"},{"package_id":"github.com/songzhibin97/gkit/cache/local_cache [github.com/songzhibin97/gkit/cache/local_cache.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/songzhibin97/gkit@v1.2.11/cache/local_cache/example_test.go:123:1","message":"ExampleSaveLoad refers to unknown identifier: SaveLoad","source":"\nfunc ExampleSaveLoad() {\n\t// 写入文件采用go独有的gob协议"},{"package_id":"github.com/songzhibin97/gkit/cache/local_cache [github.com/songzhibin97/gkit/cache/local_cache.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/songzhibin97/gkit@v1.2.11/cache/local_cache/example_test.go:141:1","message":"ExampleFlush refers to unknown identifier: Flush","source":"\nfunc ExampleFlush() {\n\t// Flush 释放member成员"},{"package_id":"github.com/songzhibin97/gkit/cache/local_cache [github.com/songzhibin97/gkit/cache/local_cache.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/songzhibin97/gkit@v1.2.11/cache/local_cache/example_test.go:146:1","message":"ExampleShutdown refers to unknown identifier: Shutdown","source":"\nfunc ExampleShutdown() {\n\t// Shutdown 释放对象"},{"package_id":"github.com/songzhibin97/gkit/container/queue/codel [github.com/songzhibin97/gkit/container/queue/codel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/songzhibin97/gkit@v1.2.11/container/queue/codel/example_test.go:11:1","message":"ExampleNew refers to unknown identifier: New","source":"\nfunc ExampleNew() {\n\t// 默认配置"},{"package_id":"github.com/songzhibin97/gkit/window [github.com/songzhibin97/gkit/window.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/songzhibin97/gkit@v1.2.11/window/example_test.go:3:1","message":"ExampleInitWindow refers to unknown identifier: InitWindow","source":"\nfunc ExampleInitWindow() {\n\t// 初始化窗口"}]}
{"created_at":"2023-06-22 17:30:27.685944 UTC","module_path":"github.com/zgs0103/gmsm","version":"v1.4.7","sort_version":"1,4,7~","commit_time":"2022-08-16 06:37:22 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/zgs0103/gmsm/gmtls [github.com/zgs0103/gmsm/gmtls.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zgs0103/gmsm@v1.4.7/gmtls/http_client_test.go:118:2","message":"call to (*T).Fatal from a non-test goroutine","source":"func TestSimpleNewHTTPSClient1(t *testing.T) {\n\tgo bootHttpServer(t)\n\t//go bootGMHTTPSServer(t)"},{"package_id":"github.com/zgs0103/gmsm/gmtls [github.com/zgs0103/gmsm/gmtls.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zgs0103/gmsm@v1.4.7/gmtls/http_client_test.go:142:2","message":"call to (*T).Fatal from a non-test goroutine","source":"func TestNewHTTPSClient2(t *testing.T) {\n\tgo bootGMHTTPSServer(t)\n\t/*"},{"package_id":"github.com/zgs0103/gmsm/gmtls [github.com/zgs0103/gmsm/gmtls.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zgs0103/gmsm@v1.4.7/gmtls/http_client_test.go:142:2","message":"call to (*T).Fatal from a non-test goroutine","source":"func TestNewHTTPSClient2(t *testing.T) {\n\tgo bootGMHTTPSServer(t)\n\t/*"},{"package_id":"github.com/zgs0103/gmsm/gmtls [github.com/zgs0103/gmsm/gmtls.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zgs0103/gmsm@v1.4.7/gmtls/http_client_test.go:142:2","message":"call to (*T).Fatal from a non-test goroutine","source":"func TestNewHTTPSClient2(t *testing.T) {\n\tgo bootGMHTTPSServer(t)\n\t/*"},{"package_id":"github.com/zgs0103/gmsm/gmtls [github.com/zgs0103/gmsm/gmtls.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zgs0103/gmsm@v1.4.7/gmtls/http_client_test.go:142:2","message":"call to (*T).Fatal from a non-test goroutine","source":"func TestNewHTTPSClient2(t *testing.T) {\n\tgo bootGMHTTPSServer(t)\n\t/*"},{"package_id":"github.com/zgs0103/gmsm/gmtls [github.com/zgs0103/gmsm/gmtls.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zgs0103/gmsm@v1.4.7/gmtls/http_client_test.go:170:2","message":"call to (*T).Fatal from a non-test goroutine","source":"func TestNewHTTPSClient3(t *testing.T) {\n\tgo bootGMAuthHTTPSServer(t)\n\t/*"},{"package_id":"github.com/zgs0103/gmsm/gmtls [github.com/zgs0103/gmsm/gmtls.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zgs0103/gmsm@v1.4.7/gmtls/http_client_test.go:170:2","message":"call to (*T).Fatal from a non-test goroutine","source":"func TestNewHTTPSClient3(t *testing.T) {\n\tgo bootGMAuthHTTPSServer(t)\n\t/*"},{"package_id":"github.com/zgs0103/gmsm/gmtls [github.com/zgs0103/gmsm/gmtls.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zgs0103/gmsm@v1.4.7/gmtls/http_client_test.go:170:2","message":"call to (*T).Fatal from a non-test goroutine","source":"func TestNewHTTPSClient3(t *testing.T) {\n\tgo bootGMAuthHTTPSServer(t)\n\t/*"},{"package_id":"github.com/zgs0103/gmsm/gmtls [github.com/zgs0103/gmsm/gmtls.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zgs0103/gmsm@v1.4.7/gmtls/http_client_test.go:170:2","message":"call to (*T).Fatal from a non-test goroutine","source":"func TestNewHTTPSClient3(t *testing.T) {\n\tgo bootGMAuthHTTPSServer(t)\n\t/*"},{"package_id":"github.com/zgs0103/gmsm/gmtls [github.com/zgs0103/gmsm/gmtls.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/zgs0103/gmsm@v1.4.7/gmtls/http_client_test.go:170:2","message":"call to (*T).Fatal from a non-test goroutine","source":"func TestNewHTTPSClient3(t *testing.T) {\n\tgo bootGMAuthHTTPSServer(t)\n\t/*"}]}
{"created_at":"2023-06-22 17:18:45.156909 UTC","module_path":"github.com/dave/jennifer","version":"v1.6.1","sort_version":"1,6,1~","commit_time":"2023-04-10 04:51:18 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/dave/jennifer/jen_test [github.com/dave/jennifer/jen.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dave/jennifer@v1.6.1/jen/examples_test.go:10:1","message":"ExampleGenericsTypesFuncEmpty refers to unknown identifier: GenericsTypesFuncEmpty","source":"\nfunc ExampleGenericsTypesFuncEmpty() {\n\tc := Func().Id(\"F\").TypesFunc(func(group *Group) {}).Params().Block()"},{"package_id":"github.com/dave/jennifer/jen_test [github.com/dave/jennifer/jen.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dave/jennifer@v1.6.1/jen/examples_test.go:17:1","message":"ExampleGenericsTypesFuncNull refers to unknown identifier: GenericsTypesFuncNull","source":"\nfunc ExampleGenericsTypesFuncNull() {\n\tc := Func().Id(\"F\").TypesFunc(func(group *Group) {"},{"package_id":"github.com/dave/jennifer/jen_test [github.com/dave/jennifer/jen.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dave/jennifer@v1.6.1/jen/examples_test.go:26:1","message":"ExampleGenericsTypesEmpty refers to unknown identifier: GenericsTypesEmpty","source":"\nfunc ExampleGenericsTypesEmpty() {\n\tc := Func().Id(\"F\").Types().Params().Block()"},{"package_id":"github.com/dave/jennifer/jen_test [github.com/dave/jennifer/jen.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dave/jennifer@v1.6.1/jen/examples_test.go:33:1","message":"ExampleGenericsTypesNull refers to unknown identifier: GenericsTypesNull","source":"\nfunc ExampleGenericsTypesNull() {\n\tc := Func().Id(\"F\").Types(Null()).Params().Block()"},{"package_id":"github.com/dave/jennifer/jen_test [github.com/dave/jennifer/jen.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dave/jennifer@v1.6.1/jen/examples_test.go:40:1","message":"ExampleGenericsTypesDefinition refers to unknown identifier: GenericsTypesDefinition","source":"\nfunc ExampleGenericsTypesDefinition() {\n\tc := Func().Id(\"Keys\").Types("},{"package_id":"github.com/dave/jennifer/jen_test [github.com/dave/jennifer/jen.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dave/jennifer@v1.6.1/jen/examples_test.go:52:1","message":"ExampleGenericsTypesUsage refers to unknown identifier: GenericsTypesUsage","source":"\nfunc ExampleGenericsTypesUsage() {\n\tc := Return(Id(\"Keys\").Types(Int(), String()).Call(Id(\"m\")))"},{"package_id":"github.com/dave/jennifer/jen_test [github.com/dave/jennifer/jen.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dave/jennifer@v1.6.1/jen/examples_test.go:59:1","message":"ExampleGenericsUnion refers to unknown identifier: GenericsUnion","source":"\nfunc ExampleGenericsUnion() {\n\tc := Type().Id(\"PredeclaredSignedInteger\").Interface("},{"package_id":"github.com/dave/jennifer/jen_test [github.com/dave/jennifer/jen.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dave/jennifer@v1.6.1/jen/examples_test.go:70:1","message":"ExampleGenericsApproximate refers to unknown identifier: GenericsApproximate","source":"\nfunc ExampleGenericsApproximate() {\n\tc := Type().Id(\"AnyString\").Interface("},{"package_id":"github.com/dave/jennifer/jen_test [github.com/dave/jennifer/jen.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dave/jennifer@v1.6.1/jen/examples_test.go:81:1","message":"ExampleCaseBug refers to unknown identifier: CaseBug","source":"\nfunc ExampleCaseBug() {\n\tc := Switch(Id(\"a\")).Block("},{"package_id":"github.com/dave/jennifer/jen_test [github.com/dave/jennifer/jen.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dave/jennifer@v1.6.1/jen/examples_test.go:262:1","message":"ExampleFile_ImportAliasDot refers to unknown field or method: File.ImportAliasDot","source":"\nfunc ExampleFile_ImportAliasDot() {\n\tf := NewFile(\"main\")"},{"package_id":"github.com/dave/jennifer/jen_test [github.com/dave/jennifer/jen.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dave/jennifer@v1.6.1/jen/examples_test.go:1649:1","message":"ExampleFile_HeaderAndPackageComments refers to unknown field or method: File.HeaderAndPackageComments","source":"\nfunc ExampleFile_HeaderAndPackageComments() {\n\tf := NewFile(\"c\")"}]}
{"created_at":"2023-06-22 17:58:42.433836 UTC","module_path":"github.com/vadv/gopher-lua-libs","version":"v0.4.1","sort_version":"0,4,1~","commit_time":"2022-12-30 20:16:09 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/vadv/gopher-lua-libs/http/client_test [github.com/vadv/gopher-lua-libs/http/client.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vadv/gopher-lua-libs@v0.4.1/http/client/client_example_test.go:11:1","message":"ExampleDoRequest refers to unknown identifier: DoRequest","source":"// http_client_ud:do_request(request)\nfunc ExampleDoRequest() {\n\tstate := lua.NewState()"},{"package_id":"github.com/vadv/gopher-lua-libs/http/client_test [github.com/vadv/gopher-lua-libs/http/client.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vadv/gopher-lua-libs@v0.4.1/http/client/client_example_test.go:30:1","message":"ExampleQueryEscape refers to unknown identifier: QueryEscape","source":"// http:query_escape(string)\nfunc ExampleQueryEscape() {\n\tstate := lua.NewState()"},{"package_id":"github.com/vadv/gopher-lua-libs/http/client_test [github.com/vadv/gopher-lua-libs/http/client.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vadv/gopher-lua-libs@v0.4.1/http/client/client_example_test.go:46:1","message":"ExampleQueryUnescape refers to unknown identifier: QueryUnescape","source":"// http:query_escape(string)\nfunc ExampleQueryUnescape() {\n\tstate := lua.NewState()"},{"package_id":"github.com/vadv/gopher-lua-libs/http/server_test [github.com/vadv/gopher-lua-libs/http/server.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vadv/gopher-lua-libs@v0.4.1/http/server/server_example_test.go:12:1","message":"ExampleAccept refers to unknown identifier: Accept","source":"// http:server()\nfunc ExampleAccept() {\n\tstate := lua.NewState()"},{"package_id":"github.com/vadv/gopher-lua-libs/http/util [github.com/vadv/gopher-lua-libs/http/util.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vadv/gopher-lua-libs@v0.4.1/http/util/util_example_test.go:10:1","message":"ExampleParseUrl refers to unknown identifier: ParseUrl","source":"// http_clien.parse_url(string)\nfunc ExampleParseUrl() {\n\tstate := lua.NewState()"},{"package_id":"github.com/vadv/gopher-lua-libs/http/util [github.com/vadv/gopher-lua-libs/http/util.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vadv/gopher-lua-libs@v0.4.1/http/util/util_example_test.go:27:1","message":"ExampleBuidUrl refers to unknown identifier: BuidUrl","source":"// http_clien.build_url(table)\nfunc ExampleBuidUrl() {\n\tstate := lua.NewState()"},{"package_id":"github.com/vadv/gopher-lua-libs/log [github.com/vadv/gopher-lua-libs/log.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vadv/gopher-lua-libs@v0.4.1/log/example_test.go:10:1","message":"Example_Print has malformed example suffix: Print","source":"// print(args..)\nfunc Example_Print() {\n\tstate := lua.NewState()"},{"package_id":"github.com/vadv/gopher-lua-libs/log [github.com/vadv/gopher-lua-libs/log.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vadv/gopher-lua-libs@v0.4.1/log/example_test.go:26:1","message":"Example_Printf has malformed example suffix: Printf","source":"// printf(string, args..)\nfunc Example_Printf() {\n\tstate := lua.NewState()"},{"package_id":"github.com/vadv/gopher-lua-libs/log [github.com/vadv/gopher-lua-libs/log.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vadv/gopher-lua-libs@v0.4.1/log/example_test.go:42:1","message":"Example_Println has malformed example suffix: Println","source":"// println(string, args..)\nfunc Example_Println() {\n\tstate := lua.NewState()"},{"package_id":"github.com/vadv/gopher-lua-libs/log [github.com/vadv/gopher-lua-libs/log.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vadv/gopher-lua-libs@v0.4.1/log/example_test.go:58:1","message":"Example_SetFlags has malformed example suffix: SetFlags","source":"// set_flags(config={})\nfunc Example_SetFlags() {\n\tstate := lua.NewState()"},{"package_id":"github.com/vadv/gopher-lua-libs/pb [github.com/vadv/gopher-lua-libs/pb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/vadv/gopher-lua-libs@v0.4.1/pb/example_test.go:10:1","message":"ExampleAllParams refers to unknown identifier: AllParams","source":"\nfunc ExampleAllParams() {\n\tstate := lua.NewState()"}]}
{"created_at":"2023-06-22 17:48:26.207911 UTC","module_path":"github.com/viant/afsc","version":"v1.9.0","sort_version":"1,9,0~","commit_time":"2023-03-22 17:17:50 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/aws/secretmanager_test [synthetic/aws/secretmanager.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/viant/afsc@v1.9.0/aws/secretmanager/example_test.go:13:1","message":"Example_DownloadWithURL has malformed example suffix: DownloadWithURL","source":"\nfunc Example_DownloadWithURL() {\n\tfs := afs.New()"},{"package_id":"synthetic/aws/ssm_test [synthetic/aws/ssm.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/viant/afsc@v1.9.0/aws/ssm/example_test.go:13:1","message":"Example_DownloadWithURL has malformed example suffix: DownloadWithURL","source":"\nfunc Example_DownloadWithURL() {\n\tfs := afs.New()"},{"package_id":"synthetic/gcp/secretmanager_test [synthetic/gcp/secretmanager.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/viant/afsc@v1.9.0/gcp/secretmanager/example_test.go:13:1","message":"Example_DownloadWithURL has malformed example suffix: DownloadWithURL","source":"\nfunc Example_DownloadWithURL() {\n\tfs := afs.New()"},{"package_id":"synthetic/gs_test [synthetic/gs.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/viant/afsc@v1.9.0/gs/example_test.go:19:1","message":"ExampleAfsService refers to unknown identifier: AfsService","source":"\nfunc ExampleAfsService() {\n\tservice := afs.New()"},{"package_id":"synthetic/gs_test [synthetic/gs.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/viant/afsc@v1.9.0/gs/example_test.go:60:1","message":"Example_Storager has malformed example suffix: Storager","source":"//Example_Storager storager usage example (uses path rather then URLs)\nfunc Example_Storager() {\n"},{"package_id":"synthetic/gs_test [synthetic/gs.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/viant/afsc@v1.9.0/gs/example_test.go:137:1","message":"ExampleNewCustomKey refers to unknown identifier: NewCustomKey","source":"\nfunc ExampleNewCustomKey() {\n\tcustomKey, err := option.NewAES256Key([]byte(\"secret-key-that-is-32-bytes-long\"))"},{"package_id":"synthetic/s3_test [synthetic/s3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/viant/afsc@v1.9.0/s3/example_test.go:19:1","message":"ExampleAfsService refers to unknown identifier: AfsService","source":"\nfunc ExampleAfsService() {\n\tservice := afs.New()"},{"package_id":"synthetic/s3_test [synthetic/s3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/viant/afsc@v1.9.0/s3/example_test.go:60:1","message":"Example_Storager has malformed example suffix: Storager","source":"//Example_Storager storager usage example (uses path rather then URLs)\nfunc Example_Storager() {\n"},{"package_id":"synthetic/s3_test [synthetic/s3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/viant/afsc@v1.9.0/s3/example_test.go:117:1","message":"ExampleAwsConfig refers to unknown identifier: AwsConfig","source":"\nfunc ExampleAwsConfig() {\n\tvar awsConfig *aws.Config"},{"package_id":"synthetic/s3_test [synthetic/s3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/viant/afsc@v1.9.0/s3/example_test.go:130:1","message":"ExampleNewCustomKey refers to unknown identifier: NewCustomKey","source":"\nfunc ExampleNewCustomKey() {\n\tcustomKey, err := option.NewAES256Key([]byte(\"secret-key-that-is-32-bytes-long\"))"},{"package_id":"synthetic/s3_test [synthetic/s3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/viant/afsc@v1.9.0/s3/example_test.go:149:1","message":"Example_Streaming has malformed example suffix: Streaming","source":"\nfunc Example_Streaming() {\n"}]}
{"created_at":"2023-06-22 17:42:02.756628 UTC","module_path":"gitee.com/Trisia/gotlcp","version":"v1.3.9","sort_version":"1,3,9~","commit_time":"2023-06-16 14:34:13 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"gitee.com/Trisia/gotlcp/pa [gitee.com/Trisia/gotlcp/pa.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/Trisia/gotlcp@v1.3.9/pa/pa_test.go:266:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"gitee.com/Trisia/gotlcp/pa [gitee.com/Trisia/gotlcp/pa.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/Trisia/gotlcp@v1.3.9/pa/pa_test.go:276:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"gitee.com/Trisia/gotlcp/pa [gitee.com/Trisia/gotlcp/pa.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/Trisia/gotlcp@v1.3.9/pa/pa_test.go:280:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"gitee.com/Trisia/gotlcp/pa [gitee.com/Trisia/gotlcp/pa.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/Trisia/gotlcp@v1.3.9/pa/pa_test.go:377:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"gitee.com/Trisia/gotlcp/pa [gitee.com/Trisia/gotlcp/pa.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/Trisia/gotlcp@v1.3.9/pa/pa_test.go:452:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"gitee.com/Trisia/gotlcp/pa [gitee.com/Trisia/gotlcp/pa.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/Trisia/gotlcp@v1.3.9/pa/pa_test.go:457:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"gitee.com/Trisia/gotlcp/pa [gitee.com/Trisia/gotlcp/pa.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/Trisia/gotlcp@v1.3.9/pa/pa_test.go:460:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif string(bin) != \"Hello\" {\n\t\t\tt.Fatalf(\"recv: %s, want: %s\", string(bin), \"Hello\")\n\t\t}"},{"package_id":"gitee.com/Trisia/gotlcp/tlcp [gitee.com/Trisia/gotlcp/tlcp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/Trisia/gotlcp@v1.3.9/tlcp/handshake_client_test.go:244:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"gitee.com/Trisia/gotlcp/tlcp [gitee.com/Trisia/gotlcp/tlcp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/Trisia/gotlcp@v1.3.9/tlcp/handshake_server_test.go:241:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"gitee.com/Trisia/gotlcp/tlcp [gitee.com/Trisia/gotlcp/tlcp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/Trisia/gotlcp@v1.3.9/tlcp/handshake_server_test.go:265:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif tlcpConn.IsClient() {\n\t\t\t\tt.Fatalf(\"Expect server connection type, but not\")\n\t\t\t}"},{"package_id":"gitee.com/Trisia/gotlcp/tlcp [gitee.com/Trisia/gotlcp/tlcp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/Trisia/gotlcp@v1.3.9/tlcp/handshake_server_test.go:268:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif len(tlcpConn.PeerCertificates()) == 0 {\n\t\t\t\tt.Fatalf(\"Expect get peer cert, but not\")\n\t\t\t}"},{"package_id":"gitee.com/Trisia/gotlcp/tlcp [gitee.com/Trisia/gotlcp/tlcp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/Trisia/gotlcp@v1.3.9/tlcp/handshake_server_test.go:274:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif !tlcpConn.didResume {\n\t\t\t\t\tt.Fatalf(\"Expect second connection session resume, but not\")\n\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:30:54.794629 UTC","module_path":"github.com/schollz/progressbar/v2","version":"v2.15.0","sort_version":"2,a15,0~","commit_time":"2019-12-24 20:41:06 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/schollz/progressbar/v2 [github.com/schollz/progressbar/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/schollz/progressbar/v2@v2.15.0/progressbar_test.go:39:1","message":"ExampleProgressBarSet refers to unknown identifier: ProgressBarSet","source":"\nfunc ExampleProgressBarSet() {\n\tbar := New(100)"},{"package_id":"github.com/schollz/progressbar/v2 [github.com/schollz/progressbar/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/schollz/progressbar/v2@v2.15.0/progressbar_test.go:46:1","message":"ExampleProgressBarSet64 refers to unknown identifier: ProgressBarSet64","source":"\nfunc ExampleProgressBarSet64() {\n\tbar := New(100)"},{"package_id":"github.com/schollz/progressbar/v2 [github.com/schollz/progressbar/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/schollz/progressbar/v2@v2.15.0/progressbar_test.go:53:1","message":"ExampleProgressBarBasic refers to unknown identifier: ProgressBarBasic","source":"\nfunc ExampleProgressBarBasic() {\n\tbar := NewOptions(100, OptionSetWidth(10), OptionSetRenderBlankState(false))"},{"package_id":"github.com/schollz/progressbar/v2 [github.com/schollz/progressbar/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/schollz/progressbar/v2@v2.15.0/progressbar_test.go:62:1","message":"ExampleThrottle refers to unknown identifier: Throttle","source":"\nfunc ExampleThrottle() {\n\tbar := NewOptions(100, OptionSetWidth(10), OptionSetRenderBlankState(false), OptionThrottle(100*time.Millisecond))"},{"package_id":"github.com/schollz/progressbar/v2 [github.com/schollz/progressbar/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/schollz/progressbar/v2@v2.15.0/progressbar_test.go:73:1","message":"ExampleChangeMax refers to unknown identifier: ChangeMax","source":"\nfunc ExampleChangeMax() {\n\tbar := New(50)"},{"package_id":"github.com/schollz/progressbar/v2 [github.com/schollz/progressbar/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/schollz/progressbar/v2@v2.15.0/progressbar_test.go:79:1","message":"ExampleFinish refers to unknown identifier: Finish","source":"\nfunc ExampleFinish() {\n\tbar := NewOptions(100, OptionSetWidth(10), OptionSetRenderBlankState(false), OptionClearOnFinish())"},{"package_id":"github.com/schollz/progressbar/v2 [github.com/schollz/progressbar/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/schollz/progressbar/v2@v2.15.0/progressbar_test.go:87:1","message":"ExampleFinish2 refers to unknown identifier: Finish2","source":"}\nfunc ExampleFinish2() {\n\tbar := NewOptions(100, OptionSetWidth(10), OptionSetRenderBlankState(false))"},{"package_id":"github.com/schollz/progressbar/v2 [github.com/schollz/progressbar/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/schollz/progressbar/v2@v2.15.0/progressbar_test.go:94:1","message":"ExampleXOutOfY refers to unknown identifier: XOutOfY","source":"\nfunc ExampleXOutOfY() {\n\tbar := NewOptions(100, OptionSetPredictTime(true))"},{"package_id":"github.com/schollz/progressbar/v2 [github.com/schollz/progressbar/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/schollz/progressbar/v2@v2.15.0/progressbar_test.go:103:1","message":"ExampleSetBytes refers to unknown identifier: SetBytes","source":"\nfunc ExampleSetBytes() {\n\tbar := NewOptions(100, OptionSetWidth(10), OptionSetBytes(10000))"},{"package_id":"github.com/schollz/progressbar/v2 [github.com/schollz/progressbar/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/schollz/progressbar/v2@v2.15.0/progressbar_test.go:112:1","message":"ExampleShowCount refers to unknown identifier: ShowCount","source":"\nfunc ExampleShowCount() {\n\tbar := NewOptions(100, OptionSetWidth(10), OptionShowIts(), OptionShowCount())"},{"package_id":"github.com/schollz/progressbar/v2 [github.com/schollz/progressbar/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/schollz/progressbar/v2@v2.15.0/progressbar_test.go:121:1","message":"ExampleSetIts refers to unknown identifier: SetIts","source":"\nfunc ExampleSetIts() {\n\tbar := NewOptions(100, OptionSetWidth(10), OptionShowIts())"},{"package_id":"github.com/schollz/progressbar/v2 [github.com/schollz/progressbar/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/schollz/progressbar/v2@v2.15.0/progressbar_test.go:331:1","message":"ExampleDescribe refers to unknown identifier: Describe","source":"\nfunc ExampleDescribe() {\n\tbar := NewOptions(100, OptionSetWidth(10), OptionSetRenderBlankState(false))"}]}
{"created_at":"2023-06-22 17:17:36.249228 UTC","module_path":"gopkg.in/fsnotify.v1","version":"v1.4.7","sort_version":"1,4,7~","commit_time":"2018-01-10 05:33:47 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify.v1@v1.4.7/inotify_poller_test.go:181:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"poller failed: %v\", err)\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify.v1@v1.4.7/inotify_test.go:339:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range w.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify.v1@v1.4.7/integration_test.go:79:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify.v1@v1.4.7/integration_test.go:197:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify.v1@v1.4.7/integration_test.go:342:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify.v1@v1.4.7/integration_test.go:447:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify.v1@v1.4.7/integration_test.go:492:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify.v1@v1.4.7/integration_test.go:584:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify.v1@v1.4.7/integration_test.go:666:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify.v1@v1.4.7/integration_test.go:759:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify.v1@v1.4.7/integration_test.go:842:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tcase ev := \u003c-watcher.Events:\n\t\t\tt.Fatalf(\"We received event: %v\\n\", ev)\n\t\tcase \u003c-time.After(500 * time.Millisecond):"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify.v1@v1.4.7/integration_test.go:877:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:22:41.288229 UTC","module_path":"gopkg.in/fsnotify/fsnotify.v1","version":"v1.4.7","sort_version":"1,4,7~","commit_time":"2018-01-10 05:33:47 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify/fsnotify.v1@v1.4.7/inotify_poller_test.go:181:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"poller failed: %v\", err)\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify/fsnotify.v1@v1.4.7/inotify_test.go:339:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range w.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify/fsnotify.v1@v1.4.7/integration_test.go:79:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify/fsnotify.v1@v1.4.7/integration_test.go:197:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify/fsnotify.v1@v1.4.7/integration_test.go:342:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify/fsnotify.v1@v1.4.7/integration_test.go:447:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify/fsnotify.v1@v1.4.7/integration_test.go:492:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify/fsnotify.v1@v1.4.7/integration_test.go:584:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify/fsnotify.v1@v1.4.7/integration_test.go:666:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify/fsnotify.v1@v1.4.7/integration_test.go:759:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify/fsnotify.v1@v1.4.7/integration_test.go:842:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tcase ev := \u003c-watcher.Events:\n\t\t\tt.Fatalf(\"We received event: %v\\n\", ev)\n\t\tcase \u003c-time.After(500 * time.Millisecond):"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gopkg.in/fsnotify/fsnotify.v1@v1.4.7/integration_test.go:877:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tfor err := range watcher.Errors {\n\t\t\tt.Fatalf(\"error received: %s\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:35:16.805639 UTC","module_path":"gosrc.io/xmpp","version":"v0.5.1","sort_version":"0,5,1~","commit_time":"2020-03-16 22:29:03 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"gosrc.io/xmpp [gosrc.io/xmpp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gosrc.io/xmpp@v0.5.1/client_internal_test.go:55:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif client.Session, err = NewSession(client, state); err != nil {\n\t\t\tt.Fatalf(\"failed to open XMPP session: %s\", err)\n\t\t}"},{"package_id":"gosrc.io/xmpp [gosrc.io/xmpp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gosrc.io/xmpp@v0.5.1/client_internal_test.go:92:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif client.Session, err = NewSession(client, state); err != nil {\n\t\t\tt.Fatalf(\"failed to open XMPP session: %s\", err)\n\t\t}"},{"package_id":"gosrc.io/xmpp [gosrc.io/xmpp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gosrc.io/xmpp@v0.5.1/client_internal_test.go:125:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif client.Session, err = NewSession(client, state); err != nil {\n\t\t\tt.Fatalf(\"failed to open XMPP session: %s\", err)\n\t\t}"},{"package_id":"gosrc.io/xmpp [gosrc.io/xmpp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gosrc.io/xmpp@v0.5.1/client_internal_test.go:166:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif client.Session, err = NewSession(client, state); err != nil {\n\t\t\tt.Fatalf(\"failed to open XMPP session: %s\", err)\n\t\t}"},{"package_id":"gosrc.io/xmpp [gosrc.io/xmpp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gosrc.io/xmpp@v0.5.1/client_internal_test.go:221:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"could not connect client to mock server: %s\", err)\n\t\t}"},{"package_id":"gosrc.io/xmpp [gosrc.io/xmpp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gosrc.io/xmpp@v0.5.1/client_internal_test.go:279:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"could not connect client to mock server: %s\", err)\n\t\t}"},{"package_id":"gosrc.io/xmpp [gosrc.io/xmpp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gosrc.io/xmpp@v0.5.1/client_internal_test.go:336:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif client.Session, err = NewSession(client, state); err == nil {\n\t\t\tt.Fatalf(\"test is supposed to err\")\n\t\t}"},{"package_id":"gosrc.io/xmpp [gosrc.io/xmpp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gosrc.io/xmpp@v0.5.1/client_internal_test.go:339:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif client.Session.SMState.StreamErrorGroup == nil {\n\t\t\tt.Fatalf(\"error was not stored correctly in session state\")\n\t\t}"},{"package_id":"gosrc.io/xmpp [gosrc.io/xmpp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gosrc.io/xmpp@v0.5.1/component_test.go:103:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to mock component connection to get a handshake: %s\", err)\n\t\t\t\t}"},{"package_id":"gosrc.io/xmpp [gosrc.io/xmpp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gosrc.io/xmpp@v0.5.1/component_test.go:112:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tcase \u003c-time.After(defaultTimeout):\n\t\t\t\tt.Fatalf(\"test timed out\")\n\t\t\t}"},{"package_id":"gosrc.io/xmpp [gosrc.io/xmpp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gosrc.io/xmpp@v0.5.1/component_test.go:121:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"could not marshal handshake: %s\", err)\n\t\t\t}"},{"package_id":"gosrc.io/xmpp [gosrc.io/xmpp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gosrc.io/xmpp@v0.5.1/component_test.go:188:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tcase err := \u003c-errChan:\n\t\t\tt.Fatalf(err.Error())\n\t\t}"}]}
{"created_at":"2023-06-22 17:57:37.476244 UTC","module_path":"github.com/ConsenSys/fc-retrieval-common","version":"v0.0.0-20210629151030-12ab560d14bb","sort_version":"0,0,0,~20210629151030-12ab560d14bb","commit_time":"2021-06-29 15:10:30 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/ConsenSys/fc-retrieval-common/pkg/database [github.com/ConsenSys/fc-retrieval-common/pkg/database.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ConsenSys/fc-retrieval-common@v0.0.0-20210629151030-12ab560d14bb/pkg/database/database_test.go:22:1","message":"ExampleExec refers to unknown identifier: Exec","source":"\nfunc ExampleExec() {\n\tdb, err := NewDatabase()"},{"package_id":"github.com/ConsenSys/fc-retrieval-common/pkg/database [github.com/ConsenSys/fc-retrieval-common/pkg/database.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ConsenSys/fc-retrieval-common@v0.0.0-20210629151030-12ab560d14bb/pkg/database/database_test.go:37:1","message":"ExampleQuery refers to unknown identifier: Query","source":"\nfunc ExampleQuery() {\n\tdb, err := NewDatabase()"},{"package_id":"github.com/ConsenSys/fc-retrieval-common/pkg/fcrpaymentmgr [github.com/ConsenSys/fc-retrieval-common/pkg/fcrpaymentmgr.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ConsenSys/fc-retrieval-common@v0.0.0-20210629151030-12ab560d14bb/pkg/fcrpaymentmgr/payment_manager_simple_test.go:23:1","message":"Example_GenPrivate_ok has malformed example suffix: GenPrivate_ok","source":"\nfunc Example_GenPrivate_ok() {\n\ts := \u0026SecpSigner{}"},{"package_id":"github.com/ConsenSys/fc-retrieval-common/pkg/fcrpaymentmgr [github.com/ConsenSys/fc-retrieval-common/pkg/fcrpaymentmgr.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ConsenSys/fc-retrieval-common@v0.0.0-20210629151030-12ab560d14bb/pkg/fcrpaymentmgr/payment_manager_simple_test.go:30:1","message":"Example_Sign_err has malformed example suffix: Sign_err","source":"\nfunc Example_Sign_err() {\n\ts := \u0026SecpSigner{}"},{"package_id":"github.com/ConsenSys/fc-retrieval-common/pkg/fcrpaymentmgr [github.com/ConsenSys/fc-retrieval-common/pkg/fcrpaymentmgr.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ConsenSys/fc-retrieval-common@v0.0.0-20210629151030-12ab560d14bb/pkg/fcrpaymentmgr/payment_manager_simple_test.go:38:1","message":"Example_NewFCRPaymentMgr_err01 has malformed example suffix: NewFCRPaymentMgr_err01","source":"\nfunc Example_NewFCRPaymentMgr_err01() {\n\tmgr, err := NewFCRPaymentMgr(\"privateKey\", \"lotusAPIAddr\", \"authToken\")"},{"package_id":"github.com/ConsenSys/fc-retrieval-common/pkg/fcrpaymentmgr [github.com/ConsenSys/fc-retrieval-common/pkg/fcrpaymentmgr.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ConsenSys/fc-retrieval-common@v0.0.0-20210629151030-12ab560d14bb/pkg/fcrpaymentmgr/payment_manager_simple_test.go:47:1","message":"Example_NewFCRPaymentMgr_err02 has malformed example suffix: NewFCRPaymentMgr_err02","source":"\nfunc Example_NewFCRPaymentMgr_err02() {\n\tmgr, err := NewFCRPaymentMgr(\"\", \"\", \"\")"},{"package_id":"github.com/ConsenSys/fc-retrieval-common/pkg/fcrpaymentmgr [github.com/ConsenSys/fc-retrieval-common/pkg/fcrpaymentmgr.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ConsenSys/fc-retrieval-common@v0.0.0-20210629151030-12ab560d14bb/pkg/fcrpaymentmgr/payment_manager_simple_test.go:56:1","message":"Example_NewFCRPaymentMgr_ok has malformed example suffix: NewFCRPaymentMgr_ok","source":"\nfunc Example_NewFCRPaymentMgr_ok() {\n\tmgr, err := NewFCRPaymentMgr(\"AA\", \"\", \"\")"},{"package_id":"github.com/ConsenSys/fc-retrieval-common/pkg/fcrpaymentmgr [github.com/ConsenSys/fc-retrieval-common/pkg/fcrpaymentmgr.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ConsenSys/fc-retrieval-common@v0.0.0-20210629151030-12ab560d14bb/pkg/fcrpaymentmgr/payment_manager_simple_test.go:65:1","message":"Example_Topup_err01 has malformed example suffix: Topup_err01","source":"\nfunc Example_Topup_err01() {\n\tmgr, err := NewFCRPaymentMgr(\"AA\", \"\", \"\")"},{"package_id":"github.com/ConsenSys/fc-retrieval-common/pkg/logging [github.com/ConsenSys/fc-retrieval-common/pkg/logging.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ConsenSys/fc-retrieval-common@v0.0.0-20210629151030-12ab560d14bb/pkg/logging/logging_test.go:41:1","message":"ExampleWriteLogs refers to unknown identifier: WriteLogs","source":"\nfunc ExampleWriteLogs() {\n\tInfoEnabled()"},{"package_id":"github.com/ConsenSys/fc-retrieval-common/pkg/slice [github.com/ConsenSys/fc-retrieval-common/pkg/slice.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ConsenSys/fc-retrieval-common@v0.0.0-20210629151030-12ab560d14bb/pkg/slice/slice_test.go:22:1","message":"ExampleExists01 refers to unknown identifier: Exists01","source":"\nfunc ExampleExists01() {\n\tb, i, e := Exists([]int{1, 2, 3}, 3)"},{"package_id":"github.com/ConsenSys/fc-retrieval-common/pkg/slice [github.com/ConsenSys/fc-retrieval-common/pkg/slice.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ConsenSys/fc-retrieval-common@v0.0.0-20210629151030-12ab560d14bb/pkg/slice/slice_test.go:28:1","message":"ExampleExists02 refers to unknown identifier: Exists02","source":"\nfunc ExampleExists02() {\n\tb, i, e := Exists([]int{1, 2, 3}, 4)"},{"package_id":"github.com/ConsenSys/fc-retrieval-common/pkg/slice [github.com/ConsenSys/fc-retrieval-common/pkg/slice.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ConsenSys/fc-retrieval-common@v0.0.0-20210629151030-12ab560d14bb/pkg/slice/slice_test.go:34:1","message":"ExampleExists03 refers to unknown identifier: Exists03","source":"\nfunc ExampleExists03() {\n\tb, i, e := Exists(\"2\", '2')"},{"package_id":"github.com/ConsenSys/fc-retrieval-common/pkg/utest [github.com/ConsenSys/fc-retrieval-common/pkg/utest.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ConsenSys/fc-retrieval-common@v0.0.0-20210629151030-12ab560d14bb/pkg/utest/utest_test.go:9:1","message":"ExampleGetFreePort_01 refers to unknown field or method: GetFreePort.01","source":"\nfunc ExampleGetFreePort_01() {\n\tport := GetFreePort()"}]}
{"created_at":"2023-06-22 17:56:55.773858 UTC","module_path":"github.com/456vv/vconn","version":"v1.2.1","sort_version":"1,2,1~","commit_time":"2023-06-05 10:44:54 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/456vv/vconn [github.com/456vv/vconn.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/456vv/vconn@v1.2.1/conn_test.go:24:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err.Error())\n\t\t}"},{"package_id":"github.com/456vv/vconn [github.com/456vv/vconn.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/456vv/vconn@v1.2.1/conn_test.go:33:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != io.EOF {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"github.com/456vv/vconn [github.com/456vv/vconn.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/456vv/vconn@v1.2.1/conn_test.go:42:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err.Error())\n\t\t}"},{"package_id":"github.com/456vv/vconn [github.com/456vv/vconn.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/456vv/vconn@v1.2.1/conn_test.go:82:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err.Error())\n\t\t}"},{"package_id":"github.com/456vv/vconn [github.com/456vv/vconn.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/456vv/vconn@v1.2.1/conn_test.go:91:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != io.EOF {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"github.com/456vv/vconn [github.com/456vv/vconn.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/456vv/vconn@v1.2.1/conn_test.go:107:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t}\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/456vv/vconn [github.com/456vv/vconn.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/456vv/vconn@v1.2.1/conn_test.go:110:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif n == 0 {\n\t\t\t\tt.Fatal(\"error\")\n\t\t\t}"},{"package_id":"github.com/456vv/vconn [github.com/456vv/vconn.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/456vv/vconn@v1.2.1/conn_test.go:139:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err.Error())\n\t\t}"},{"package_id":"github.com/456vv/vconn [github.com/456vv/vconn.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/456vv/vconn@v1.2.1/conn_test.go:151:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != io.EOF {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/456vv/vconn [github.com/456vv/vconn.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/456vv/vconn@v1.2.1/conn_test.go:181:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err.Error())\n\t\t}"},{"package_id":"github.com/456vv/vconn [github.com/456vv/vconn.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/456vv/vconn@v1.2.1/conn_test.go:193:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != io.EOF {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"github.com/456vv/vconn [github.com/456vv/vconn.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/456vv/vconn@v1.2.1/conn_test.go:209:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t}\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/456vv/vconn [github.com/456vv/vconn.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/456vv/vconn@v1.2.1/conn_test.go:212:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif n == 0 {\n\t\t\t\tt.Fatal(\"error\")\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:43:17.843286 UTC","module_path":"github.com/stack-labs/stack-rpc","version":"v1.0.0","sort_version":"1,0,0~","commit_time":"2020-12-12 14:32:36 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/stack-labs/stack-rpc [github.com/stack-labs/stack-rpc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stack-labs/stack-rpc@v1.0.0/service_test.go:101:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := testConfig(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/stack-labs/stack-rpc [github.com/stack-labs/stack-rpc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stack-labs/stack-rpc@v1.0.0/service_test.go:106:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := testRequest(ctx, service.Client(), \"test.service\"); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/stack-labs/stack-rpc/pkg/mdns [github.com/stack-labs/stack-rpc/pkg/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stack-labs/stack-rpc@v1.0.0/pkg/mdns/server_test.go:31:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Name != \"hostname._foobar._tcp.local.\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/stack-labs/stack-rpc/pkg/mdns [github.com/stack-labs/stack-rpc/pkg/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stack-labs/stack-rpc@v1.0.0/pkg/mdns/server_test.go:34:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Port != 80 {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/stack-labs/stack-rpc/pkg/mdns [github.com/stack-labs/stack-rpc/pkg/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stack-labs/stack-rpc@v1.0.0/pkg/mdns/server_test.go:37:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Info != \"Local web server\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/stack-labs/stack-rpc/pkg/mdns [github.com/stack-labs/stack-rpc/pkg/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stack-labs/stack-rpc@v1.0.0/pkg/mdns/server_test.go:42:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tcase \u003c-time.After(80 * time.Millisecond):\n\t\t\tt.Fatalf(\"timeout\")\n\t\t}"},{"package_id":"github.com/stack-labs/stack-rpc/proxy/http [github.com/stack-labs/stack-rpc/proxy/http.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stack-labs/stack-rpc@v1.0.0/proxy/http/http_test.go:80:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\twg.Done()\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/stack-labs/stack-rpc/service/grpc [github.com/stack-labs/stack-rpc/service/grpc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stack-labs/stack-rpc@v1.0.0/service/grpc/grpc_test.go:49:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := service.Run(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/stack-labs/stack-rpc/service/grpc [github.com/stack-labs/stack-rpc/service/grpc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stack-labs/stack-rpc@v1.0.0/service/grpc/grpc_test.go:156:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := service.Run(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/stack-labs/stack-rpc/transport/http [github.com/stack-labs/stack-rpc/transport/http.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stack-labs/stack-rpc@v1.0.0/transport/http/http_test.go:208:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tcase \u003c-time.After(time.Second):\n\t\t\t\tt.Fatal(\"deadline not executed\")\n\t\t\t}"},{"package_id":"github.com/stack-labs/stack-rpc/transport/memory [github.com/stack-labs/stack-rpc/transport/memory.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stack-labs/stack-rpc@v1.0.0/transport/memory/memory_test.go:35:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t}); err != nil {\n\t\t\tt.Fatalf(\"Unexpected error accepting %v\", err)\n\t\t}"},{"package_id":"github.com/stack-labs/stack-rpc/web [github.com/stack-labs/stack-rpc/web.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stack-labs/stack-rpc@v1.0.0/web/service_test.go:62:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := service.Run(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/stack-labs/stack-rpc/web [github.com/stack-labs/stack-rpc/web.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/stack-labs/stack-rpc@v1.0.0/web/service_test.go:226:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := service.Run(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:24:35.247784 UTC","module_path":"github.com/go-stomp/stomp","version":"v2.1.4+incompatible","sort_version":"2,1,4~","commit_time":"2021-04-11 00:55:00 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp@v2.1.4+incompatible/example_test.go:12:1","message":"ExampleConn_Send should be niladic","source":"\nfunc ExampleConn_Send(c *stomp.Conn) error {\n\t// send with receipt and an optional header"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp@v2.1.4+incompatible/example_test.go:12:1","message":"ExampleConn_Send should return nothing","source":"\nfunc ExampleConn_Send(c *stomp.Conn) error {\n\t// send with receipt and an optional header"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp@v2.1.4+incompatible/example_test.go:53:1","message":"ExampleNewFrame refers to unknown identifier: NewFrame","source":"// Creates a STOMP frame.\nfunc ExampleNewFrame() {\n\t/*"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp@v2.1.4+incompatible/example_test.go:81:1","message":"ExampleConn_Subscribe_1 should return nothing","source":"\nfunc ExampleConn_Subscribe_1() error {\n\tconn, err := stomp.Dial(\"tcp\", \"localhost:61613\")"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp@v2.1.4+incompatible/example_test.go:81:1","message":"ExampleConn_Subscribe_1 has malformed example suffix: 1","source":"\nfunc ExampleConn_Subscribe_1() error {\n\tconn, err := stomp.Dial(\"tcp\", \"localhost:61613\")"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp@v2.1.4+incompatible/example_test.go:117:1","message":"ExampleConn_Subscribe_2 should be niladic","source":"// Example of creating subscriptions with various options.\nfunc ExampleConn_Subscribe_2(c *stomp.Conn) error {\n\t// Subscribe to queue with automatic acknowledgement"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp@v2.1.4+incompatible/example_test.go:117:1","message":"ExampleConn_Subscribe_2 should return nothing","source":"// Example of creating subscriptions with various options.\nfunc ExampleConn_Subscribe_2(c *stomp.Conn) error {\n\t// Subscribe to queue with automatic acknowledgement"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp@v2.1.4+incompatible/example_test.go:117:1","message":"ExampleConn_Subscribe_2 has malformed example suffix: 2","source":"// Example of creating subscriptions with various options.\nfunc ExampleConn_Subscribe_2(c *stomp.Conn) error {\n\t// Subscribe to queue with automatic acknowledgement"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp@v2.1.4+incompatible/example_test.go:136:1","message":"ExampleTransaction should return nothing","source":"\nfunc ExampleTransaction() error {\n\tconn, err := stomp.Dial(\"tcp\", \"localhost:61613\")"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp@v2.1.4+incompatible/example_test.go:183:1","message":"ExampleConnect should return nothing","source":"// Example of connecting to a STOMP server using an existing network connection.\nfunc ExampleConnect() error {\n\tnetConn, err := net.DialTimeout(\"tcp\", \"stomp.server.com:61613\", 10*time.Second)"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp@v2.1.4+incompatible/example_test.go:201:1","message":"ExampleDial_1 should return nothing","source":"// Connect to a STOMP server using default options.\nfunc ExampleDial_1() error {\n\tconn, err := stomp.Dial(\"tcp\", \"192.168.1.1:61613\")"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp@v2.1.4+incompatible/example_test.go:201:1","message":"ExampleDial_1 refers to unknown field or method: Dial.1","source":"// Connect to a STOMP server using default options.\nfunc ExampleDial_1() error {\n\tconn, err := stomp.Dial(\"tcp\", \"192.168.1.1:61613\")"},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp@v2.1.4+incompatible/example_test.go:222:1","message":"ExampleDial_2 should return nothing","source":"// server also accepts a non-standard header called 'nonce'.\nfunc ExampleDial_2() error {\n\tconn, err := stomp.Dial(\"tcp\", \"192.168.1.1:61613\","},{"package_id":"synthetic_test [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp@v2.1.4+incompatible/example_test.go:222:1","message":"ExampleDial_2 refers to unknown field or method: Dial.2","source":"// server also accepts a non-standard header called 'nonce'.\nfunc ExampleDial_2() error {\n\tconn, err := stomp.Dial(\"tcp\", \"192.168.1.1:61613\","}]}
{"created_at":"2023-06-22 17:16:48.794687 UTC","module_path":"github.com/go-errors/errors","version":"v1.4.2","sort_version":"1,4,2~","commit_time":"2022-01-20 06:49:10 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/go-errors/errors [github.com/go-errors/errors.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-errors/errors@v1.4.2/error_test.go:213:1","message":"ExampleErrorf should be niladic","source":"\nfunc ExampleErrorf(x int) (int, error) {\n\tif x%2 == 1 {"},{"package_id":"github.com/go-errors/errors [github.com/go-errors/errors.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-errors/errors@v1.4.2/error_test.go:213:1","message":"ExampleErrorf should return nothing","source":"\nfunc ExampleErrorf(x int) (int, error) {\n\tif x%2 == 1 {"},{"package_id":"github.com/go-errors/errors [github.com/go-errors/errors.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-errors/errors@v1.4.2/error_test.go:220:1","message":"ExampleWrapError should return nothing","source":"\nfunc ExampleWrapError() (error, error) {\n\t// Wrap io.EOF with the current stack-trace and return it"},{"package_id":"github.com/go-errors/errors [github.com/go-errors/errors.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-errors/errors@v1.4.2/error_test.go:220:1","message":"ExampleWrapError refers to unknown identifier: WrapError","source":"\nfunc ExampleWrapError() (error, error) {\n\t// Wrap io.EOF with the current stack-trace and return it"},{"package_id":"github.com/go-errors/errors [github.com/go-errors/errors.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-errors/errors@v1.4.2/error_test.go:225:1","message":"ExampleWrapError_skip refers to unknown identifier: WrapError","source":"\nfunc ExampleWrapError_skip() {\n\tdefer func() {"},{"package_id":"github.com/go-errors/errors [github.com/go-errors/errors.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-errors/errors@v1.4.2/error_test.go:234:1","message":"ExampleIs should be niladic","source":"\nfunc ExampleIs(reader io.Reader, buff []byte) {\n\t_, err := reader.Read(buff)"},{"package_id":"github.com/go-errors/errors [github.com/go-errors/errors.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-errors/errors@v1.4.2/error_test.go:241:1","message":"ExampleNew should be niladic","source":"\nfunc ExampleNew(UnexpectedEOF error) error {\n\t// calling New attaches the current stacktrace to the existing UnexpectedEOF error"},{"package_id":"github.com/go-errors/errors [github.com/go-errors/errors.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-errors/errors@v1.4.2/error_test.go:241:1","message":"ExampleNew should return nothing","source":"\nfunc ExampleNew(UnexpectedEOF error) error {\n\t// calling New attaches the current stacktrace to the existing UnexpectedEOF error"},{"package_id":"github.com/go-errors/errors [github.com/go-errors/errors.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-errors/errors@v1.4.2/error_test.go:246:1","message":"ExampleWrap should return nothing","source":"\nfunc ExampleWrap() error {\n"},{"package_id":"github.com/go-errors/errors [github.com/go-errors/errors.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-errors/errors@v1.4.2/error_test.go:255:1","message":"ExampleError_Error should be niladic","source":"\nfunc ExampleError_Error(err error) {\n\tfmt.Println(err.Error())"},{"package_id":"github.com/go-errors/errors [github.com/go-errors/errors.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-errors/errors@v1.4.2/error_test.go:259:1","message":"ExampleError_ErrorStack should be niladic","source":"\nfunc ExampleError_ErrorStack(err error) {\n\tfmt.Println(err.(*Error).ErrorStack())"},{"package_id":"github.com/go-errors/errors [github.com/go-errors/errors.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-errors/errors@v1.4.2/error_test.go:263:1","message":"ExampleError_Stack should be niladic","source":"\nfunc ExampleError_Stack(err *Error) {\n\tfmt.Println(err.Stack())"},{"package_id":"github.com/go-errors/errors [github.com/go-errors/errors.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-errors/errors@v1.4.2/error_test.go:267:1","message":"ExampleError_TypeName should be niladic","source":"\nfunc ExampleError_TypeName(err *Error) {\n\tfmt.Println(err.TypeName(), err.Error())"},{"package_id":"github.com/go-errors/errors [github.com/go-errors/errors.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-errors/errors@v1.4.2/error_test.go:271:1","message":"ExampleError_StackFrames should be niladic","source":"\nfunc ExampleError_StackFrames(err *Error) {\n\tfor _, frame := range err.StackFrames() {"}]}
{"created_at":"2023-06-22 17:37:30.832233 UTC","module_path":"github.com/go-stomp/stomp/v3","version":"v3.0.5","sort_version":"3,0,5~","commit_time":"2022-03-26 18:54:18 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/go-stomp/stomp/v3_test [github.com/go-stomp/stomp/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp/v3@v3.0.5/example_test.go:12:1","message":"ExampleConn_Send should be niladic","source":"\nfunc ExampleConn_Send(c *stomp.Conn) error {\n\t// send with receipt and an optional header"},{"package_id":"github.com/go-stomp/stomp/v3_test [github.com/go-stomp/stomp/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp/v3@v3.0.5/example_test.go:12:1","message":"ExampleConn_Send should return nothing","source":"\nfunc ExampleConn_Send(c *stomp.Conn) error {\n\t// send with receipt and an optional header"},{"package_id":"github.com/go-stomp/stomp/v3_test [github.com/go-stomp/stomp/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp/v3@v3.0.5/example_test.go:53:1","message":"ExampleNewFrame refers to unknown identifier: NewFrame","source":"// Creates a STOMP frame.\nfunc ExampleNewFrame() {\n\t/*"},{"package_id":"github.com/go-stomp/stomp/v3_test [github.com/go-stomp/stomp/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp/v3@v3.0.5/example_test.go:81:1","message":"ExampleConn_Subscribe_1 should return nothing","source":"\nfunc ExampleConn_Subscribe_1() error {\n\tconn, err := stomp.Dial(\"tcp\", \"localhost:61613\")"},{"package_id":"github.com/go-stomp/stomp/v3_test [github.com/go-stomp/stomp/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp/v3@v3.0.5/example_test.go:81:1","message":"ExampleConn_Subscribe_1 has malformed example suffix: 1","source":"\nfunc ExampleConn_Subscribe_1() error {\n\tconn, err := stomp.Dial(\"tcp\", \"localhost:61613\")"},{"package_id":"github.com/go-stomp/stomp/v3_test [github.com/go-stomp/stomp/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp/v3@v3.0.5/example_test.go:117:1","message":"ExampleConn_Subscribe_2 should be niladic","source":"// Example of creating subscriptions with various options.\nfunc ExampleConn_Subscribe_2(c *stomp.Conn) error {\n\t// Subscribe to queue with automatic acknowledgement"},{"package_id":"github.com/go-stomp/stomp/v3_test [github.com/go-stomp/stomp/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp/v3@v3.0.5/example_test.go:117:1","message":"ExampleConn_Subscribe_2 should return nothing","source":"// Example of creating subscriptions with various options.\nfunc ExampleConn_Subscribe_2(c *stomp.Conn) error {\n\t// Subscribe to queue with automatic acknowledgement"},{"package_id":"github.com/go-stomp/stomp/v3_test [github.com/go-stomp/stomp/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp/v3@v3.0.5/example_test.go:117:1","message":"ExampleConn_Subscribe_2 has malformed example suffix: 2","source":"// Example of creating subscriptions with various options.\nfunc ExampleConn_Subscribe_2(c *stomp.Conn) error {\n\t// Subscribe to queue with automatic acknowledgement"},{"package_id":"github.com/go-stomp/stomp/v3_test [github.com/go-stomp/stomp/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp/v3@v3.0.5/example_test.go:136:1","message":"ExampleTransaction should return nothing","source":"\nfunc ExampleTransaction() error {\n\tconn, err := stomp.Dial(\"tcp\", \"localhost:61613\")"},{"package_id":"github.com/go-stomp/stomp/v3_test [github.com/go-stomp/stomp/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp/v3@v3.0.5/example_test.go:183:1","message":"ExampleConnect should return nothing","source":"// Example of connecting to a STOMP server using an existing network connection.\nfunc ExampleConnect() error {\n\tnetConn, err := net.DialTimeout(\"tcp\", \"stomp.server.com:61613\", 10*time.Second)"},{"package_id":"github.com/go-stomp/stomp/v3_test [github.com/go-stomp/stomp/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp/v3@v3.0.5/example_test.go:201:1","message":"ExampleDial_1 should return nothing","source":"// Connect to a STOMP server using default options.\nfunc ExampleDial_1() error {\n\tconn, err := stomp.Dial(\"tcp\", \"192.168.1.1:61613\")"},{"package_id":"github.com/go-stomp/stomp/v3_test [github.com/go-stomp/stomp/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp/v3@v3.0.5/example_test.go:201:1","message":"ExampleDial_1 refers to unknown field or method: Dial.1","source":"// Connect to a STOMP server using default options.\nfunc ExampleDial_1() error {\n\tconn, err := stomp.Dial(\"tcp\", \"192.168.1.1:61613\")"},{"package_id":"github.com/go-stomp/stomp/v3_test [github.com/go-stomp/stomp/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp/v3@v3.0.5/example_test.go:222:1","message":"ExampleDial_2 should return nothing","source":"// server also accepts a non-standard header called 'nonce'.\nfunc ExampleDial_2() error {\n\tconn, err := stomp.Dial(\"tcp\", \"192.168.1.1:61613\","},{"package_id":"github.com/go-stomp/stomp/v3_test [github.com/go-stomp/stomp/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/go-stomp/stomp/v3@v3.0.5/example_test.go:222:1","message":"ExampleDial_2 refers to unknown field or method: Dial.2","source":"// server also accepts a non-standard header called 'nonce'.\nfunc ExampleDial_2() error {\n\tconn, err := stomp.Dial(\"tcp\", \"192.168.1.1:61613\","}]}
{"created_at":"2023-06-22 17:50:35.4881 UTC","module_path":"github.com/benlaurie/objecthash","version":"v0.0.0-20180202135721-d1e3d6079fc1","sort_version":"0,0,0,~20180202135721-d1e3d6079fc1","commit_time":"2018-02-02 13:57:21 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/go/objecthash [synthetic/go/objecthash.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/benlaurie/objecthash@v0.0.0-20180202135721-d1e3d6079fc1/go/objecthash/objecthash_test.go:22:1","message":"ExampleCommonJSONHash_Common refers to unknown field or method: CommonJSONHash.Common","source":"\nfunc ExampleCommonJSONHash_Common() {\n\tcommonJSON(`[\"foo\", \"bar\"]`)"},{"package_id":"synthetic/go/objecthash [synthetic/go/objecthash.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/benlaurie/objecthash@v0.0.0-20180202135721-d1e3d6079fc1/go/objecthash/objecthash_test.go:27:1","message":"ExampleCommonJSONHash_FloatAndInt refers to unknown field or method: CommonJSONHash.FloatAndInt","source":"\nfunc ExampleCommonJSONHash_FloatAndInt() {\n\tcommonJSON(`[\"foo\", {\"bar\":[\"baz\", null, 1.0, 1.5, 0.0001, 1000.0, 2.0, -23.1234, 2.0]}]`)"},{"package_id":"synthetic/go/objecthash [synthetic/go/objecthash.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/benlaurie/objecthash@v0.0.0-20180202135721-d1e3d6079fc1/go/objecthash/objecthash_test.go:36:1","message":"ExampleCommonJSONHash_KeyChange refers to unknown field or method: CommonJSONHash.KeyChange","source":"\nfunc ExampleCommonJSONHash_KeyChange() {\n\tcommonJSON(`[\"foo\", {\"b4r\":[\"baz\", null, 1, 1.5, 0.0001, 1000, 2, -23.1234, 2]}]`)"},{"package_id":"synthetic/go/objecthash [synthetic/go/objecthash.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/benlaurie/objecthash@v0.0.0-20180202135721-d1e3d6079fc1/go/objecthash/objecthash_test.go:41:1","message":"ExampleCommonJSONHash_KeyOrderIndependence refers to unknown field or method: CommonJSONHash.KeyOrderIndependence","source":"\nfunc ExampleCommonJSONHash_KeyOrderIndependence() {\n\tcommonJSON(`{\"k1\":\"v1\",\"k2\":\"v2\",\"k3\":\"v3\"}`)"},{"package_id":"synthetic/go/objecthash [synthetic/go/objecthash.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/benlaurie/objecthash@v0.0.0-20180202135721-d1e3d6079fc1/go/objecthash/objecthash_test.go:49:1","message":"ExampleCommonJSONHash_InvalidJson refers to unknown field or method: CommonJSONHash.InvalidJson","source":"\nfunc ExampleCommonJSONHash_InvalidJson() {\n\tcommonJSON(`[\"foo\", bar]`)"},{"package_id":"synthetic/go/objecthash [synthetic/go/objecthash.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/benlaurie/objecthash@v0.0.0-20180202135721-d1e3d6079fc1/go/objecthash/objecthash_test.go:74:1","message":"ExampleObjectHash_JSON refers to unknown field or method: ObjectHash.JSON","source":"\nfunc ExampleObjectHash_JSON() {\n\t// Same as equivalent JSON object"},{"package_id":"synthetic/go/objecthash [synthetic/go/objecthash.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/benlaurie/objecthash@v0.0.0-20180202135721-d1e3d6079fc1/go/objecthash/objecthash_test.go:90:1","message":"ExampleObjectHash_JSON2 refers to unknown field or method: ObjectHash.JSON2","source":"\nfunc ExampleObjectHash_JSON2() {\n\t// Same as equivalent _Python_ JSON object"},{"package_id":"synthetic/go/objecthash [synthetic/go/objecthash.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/benlaurie/objecthash@v0.0.0-20180202135721-d1e3d6079fc1/go/objecthash/objecthash_test.go:112:1","message":"ExampleObjectHash_JSONStruct refers to unknown field or method: ObjectHash.JSONStruct","source":"\nfunc ExampleObjectHash_JSONStruct() {\n\ttype x struct {"},{"package_id":"synthetic/go/objecthash [synthetic/go/objecthash.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/benlaurie/objecthash@v0.0.0-20180202135721-d1e3d6079fc1/go/objecthash/objecthash_test.go:130:1","message":"ExampleObjectHash_JSONConsideredDangerous refers to unknown field or method: ObjectHash.JSONConsideredDangerous","source":"\nfunc ExampleObjectHash_JSONConsideredDangerous() {\n\tn := 9007199254740992"},{"package_id":"synthetic/go/objecthash [synthetic/go/objecthash.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/benlaurie/objecthash@v0.0.0-20180202135721-d1e3d6079fc1/go/objecthash/objecthash_test.go:147:1","message":"ExampleObjectHash_Set refers to unknown field or method: ObjectHash.Set","source":"\nfunc ExampleObjectHash_Set() {\n\to := map[string]interface{}{`thing1`: map[string]interface{}{`thing2`: Set{1, 2, `s`}}, `thing3`: 1234.567}"},{"package_id":"synthetic/go/objecthash [synthetic/go/objecthash.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/benlaurie/objecthash@v0.0.0-20180202135721-d1e3d6079fc1/go/objecthash/objecthash_test.go:153:1","message":"ExampleObjectHash_ComplexSet refers to unknown field or method: ObjectHash.ComplexSet","source":"\nfunc ExampleObjectHash_ComplexSet() {\n\to := Set{`foo`, 23.6, Set{Set{}}, Set{Set{1}}}"},{"package_id":"synthetic/go/objecthash [synthetic/go/objecthash.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/benlaurie/objecthash@v0.0.0-20180202135721-d1e3d6079fc1/go/objecthash/objecthash_test.go:159:1","message":"ExampleObjectHash_ComplexSetRepeated refers to unknown field or method: ObjectHash.ComplexSetRepeated","source":"\nfunc ExampleObjectHash_ComplexSetRepeated() {\n\to := Set{`foo`, 23.6, Set{Set{}}, Set{Set{1}}, Set{Set{}}}"},{"package_id":"synthetic/go/objecthash [synthetic/go/objecthash.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/benlaurie/objecthash@v0.0.0-20180202135721-d1e3d6079fc1/go/objecthash/objecthash_test.go:165:1","message":"ExampleObjectHash_ArraysAndSlices refers to unknown field or method: ObjectHash.ArraysAndSlices","source":"\nfunc ExampleObjectHash_ArraysAndSlices() {\n\ta1 := [0]bool{}"},{"package_id":"synthetic/go/objecthash [synthetic/go/objecthash.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/benlaurie/objecthash@v0.0.0-20180202135721-d1e3d6079fc1/go/objecthash/objecthash_test.go:193:1","message":"ExampleObjectHash_ByteBlobs refers to unknown field or method: ObjectHash.ByteBlobs","source":"\nfunc ExampleObjectHash_ByteBlobs() {\n\t// Empty byte blobs (arrays \u0026 slices) will have different hashes from empty lists."},{"package_id":"synthetic/go/objecthash [synthetic/go/objecthash.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/benlaurie/objecthash@v0.0.0-20180202135721-d1e3d6079fc1/go/objecthash/objecthash_test.go:222:1","message":"ExampleObjectHash_Maps refers to unknown field or method: ObjectHash.Maps","source":"\nfunc ExampleObjectHash_Maps() {\n\tm1 := map[string]bool{}"},{"package_id":"synthetic/go/objecthash [synthetic/go/objecthash.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/benlaurie/objecthash@v0.0.0-20180202135721-d1e3d6079fc1/go/objecthash/objecthash_test.go:237:1","message":"ExampleObjectHash_SpecialFloatValues refers to unknown field or method: ObjectHash.SpecialFloatValues","source":"\nfunc ExampleObjectHash_SpecialFloatValues() {\n\tnan := math.NaN()"},{"package_id":"synthetic/go/objecthash [synthetic/go/objecthash.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/benlaurie/objecthash@v0.0.0-20180202135721-d1e3d6079fc1/go/objecthash/objecthash_test.go:252:1","message":"ExampleObjectHash_UnsupportedType refers to unknown field or method: ObjectHash.UnsupportedType","source":"\nfunc ExampleObjectHash_UnsupportedType() {\n\tf := func() {}"}]}
{"created_at":"2023-06-22 17:23:01.209002 UTC","module_path":"github.com/armon/go-proxyproto","version":"v0.0.0-20210323213023-7e956b284f0a","sort_version":"0,0,0,~20210323213023-7e956b284f0a","commit_time":"2021-03-23 21:30:23 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-proxyproto@v0.0.0-20210323213023-7e956b284f0a/protocol_test.go:32:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-proxyproto@v0.0.0-20210323213023-7e956b284f0a/protocol_test.go:40:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-proxyproto@v0.0.0-20210323213023-7e956b284f0a/protocol_test.go:43:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif !bytes.Equal(recv, []byte(\"pong\")) {\n\t\t\tt.Fatalf(\"bad: %v\", recv)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-proxyproto@v0.0.0-20210323213023-7e956b284f0a/protocol_test.go:80:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-proxyproto@v0.0.0-20210323213023-7e956b284f0a/protocol_test.go:91:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-proxyproto@v0.0.0-20210323213023-7e956b284f0a/protocol_test.go:94:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif !bytes.Equal(recv, []byte(\"pong\")) {\n\t\t\tt.Fatalf(\"bad: %v\", recv)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-proxyproto@v0.0.0-20210323213023-7e956b284f0a/protocol_test.go:142:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-proxyproto@v0.0.0-20210323213023-7e956b284f0a/protocol_test.go:154:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-proxyproto@v0.0.0-20210323213023-7e956b284f0a/protocol_test.go:157:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif !bytes.Equal(recv, []byte(\"pong\")) {\n\t\t\tt.Fatalf(\"bad: %v\", recv)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-proxyproto@v0.0.0-20210323213023-7e956b284f0a/protocol_test.go:201:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-proxyproto@v0.0.0-20210323213023-7e956b284f0a/protocol_test.go:213:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-proxyproto@v0.0.0-20210323213023-7e956b284f0a/protocol_test.go:216:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif !bytes.Equal(recv, []byte(\"pong\")) {\n\t\t\tt.Fatalf(\"bad: %v\", recv)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-proxyproto@v0.0.0-20210323213023-7e956b284f0a/protocol_test.go:260:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-proxyproto@v0.0.0-20210323213023-7e956b284f0a/protocol_test.go:272:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-proxyproto@v0.0.0-20210323213023-7e956b284f0a/protocol_test.go:275:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif !bytes.Equal(recv, []byte(\"pong\")) {\n\t\t\tt.Fatalf(\"bad: %v\", recv)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-proxyproto@v0.0.0-20210323213023-7e956b284f0a/protocol_test.go:311:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/armon/go-proxyproto@v0.0.0-20210323213023-7e956b284f0a/protocol_test.go:324:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err == nil {\n\t\t\tt.Fatalf(\"err: %v\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:25:02.381049 UTC","module_path":"go.dedis.ch/onet/v3","version":"v3.2.10","sort_version":"3,2,a10~","commit_time":"2021-08-25 07:01:09 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"go.dedis.ch/onet/v3 [go.dedis.ch/onet/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v3@v3.2.10/node_test.go:375:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(\"Couldn't send message:\", err)\n\t\t}"},{"package_id":"go.dedis.ch/onet/v3 [go.dedis.ch/onet/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v3@v3.2.10/node_test.go:379:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(\"Couldn't send message:\", err)\n\t\t}"},{"package_id":"go.dedis.ch/onet/v3 [go.dedis.ch/onet/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v3@v3.2.10/node_test.go:385:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(\"Couldn't send message:\", err)\n\t\t}"},{"package_id":"go.dedis.ch/onet/v3 [go.dedis.ch/onet/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v3@v3.2.10/protocol_test.go:157:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(fmt.Sprintf(\"Could not start protocol %v\", err))\n\t\t}"},{"package_id":"go.dedis.ch/onet/v3 [go.dedis.ch/onet/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v3@v3.2.10/protocol_test.go:215:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(fmt.Sprintf(\"Could not start protocol %v\", err))\n\t\t}"},{"package_id":"go.dedis.ch/onet/v3 [go.dedis.ch/onet/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v3@v3.2.10/protocol_test.go:229:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(fmt.Sprintf(\"Could not start protocol %v\", err))\n\t\t}"},{"package_id":"go.dedis.ch/onet/v3/network [go.dedis.ch/onet/v3/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v3@v3.2.10/network/big_test.go:64:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(\"Couldn't receive msg:\", err)\n\t\t\t\t}"},{"package_id":"go.dedis.ch/onet/v3/network [go.dedis.ch/onet/v3/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v3@v3.2.10/network/big_test.go:67:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif !nm.MsgType.Equal(bigMessageType) {\n\t\t\t\t\tt.Fatal(\"Received message type is wrong\")\n\t\t\t\t}"},{"package_id":"go.dedis.ch/onet/v3/network [go.dedis.ch/onet/v3/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v3@v3.2.10/network/big_test.go:71:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif bigCopy.Msize != msgSize {\n\t\t\t\t\tt.Fatal(h, \"Message-size is wrong:\", bigCopy.Msize, bigCopy, big)\n\t\t\t\t}"},{"package_id":"go.dedis.ch/onet/v3/network [go.dedis.ch/onet/v3/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v3@v3.2.10/network/big_test.go:74:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif bigCopy.Pcrc != 25 {\n\t\t\t\t\tt.Fatal(\"CRC is wrong\")\n\t\t\t\t}"},{"package_id":"go.dedis.ch/onet/v3/network [go.dedis.ch/onet/v3/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v3@v3.2.10/network/big_test.go:83:7","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t\tif err != nil {\n\t\t\t\t\t\tt.Fatal(h, \"couldn't send message:\", err)\n\t\t\t\t\t}"},{"package_id":"go.dedis.ch/onet/v3/network [go.dedis.ch/onet/v3/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v3@v3.2.10/network/big_test.go:86:7","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t\tif sentLen == 0 {\n\t\t\t\t\t\tt.Fatal(\"sentLen is zero\")\n\t\t\t\t\t}"},{"package_id":"go.dedis.ch/onet/v3/network [go.dedis.ch/onet/v3/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v3@v3.2.10/network/big_test.go:92:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(\"Couldn't receive msg:\", err)\n\t\t\t}"},{"package_id":"go.dedis.ch/onet/v3/network [go.dedis.ch/onet/v3/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v3@v3.2.10/network/big_test.go:119:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(i, j, \"Couldn't send:\", err)\n\t\t\t\t}"},{"package_id":"go.dedis.ch/onet/v3/network [go.dedis.ch/onet/v3/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v3@v3.2.10/network/big_test.go:122:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif sentLen == 0 {\n\t\t\t\t\tt.Fatal(\"sentLen is zero\")\n\t\t\t\t}"},{"package_id":"go.dedis.ch/onet/v3/network [go.dedis.ch/onet/v3/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v3@v3.2.10/network/big_test.go:126:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(i, j, \"Couldn't receive:\", err)\n\t\t\t\t}"},{"package_id":"go.dedis.ch/onet/v3/network [go.dedis.ch/onet/v3/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v3@v3.2.10/network/big_test.go:130:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif bc.Msize != msgSize {\n\t\t\t\t\tt.Fatal(i, j, \"Message-size is wrong\")\n\t\t\t\t}"},{"package_id":"go.dedis.ch/onet/v3/network [go.dedis.ch/onet/v3/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v3@v3.2.10/network/big_test.go:133:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif bc.Pcrc != 25 {\n\t\t\t\t\tt.Fatal(i, j, \"CRC is wrong\")\n\t\t\t\t}"},{"package_id":"go.dedis.ch/onet/v3/network [go.dedis.ch/onet/v3/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v3@v3.2.10/network/local_test.go:323:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:43:08.301691 UTC","module_path":"github.com/bingoohuang/gg","version":"v0.0.0-20230606074320-fb0c62244e54","sort_version":"0,0,0,~20230606074320-fb0c62244e54","commit_time":"2023-06-06 07:43:20 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/bingoohuang/gg/pkg/defaults [github.com/bingoohuang/gg/pkg/defaults.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/gg@v0.0.0-20230606074320-fb0c62244e54/pkg/defaults/defaults_test.go:124:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := recover(); err != nil {\n\t\t\tt.Fatalf(\"it should not panic error: %v\", err)\n\t\t}"},{"package_id":"github.com/bingoohuang/gg/pkg/dump_test [github.com/bingoohuang/gg/pkg/dump.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/gg@v0.0.0-20230606074320-fb0c62244e54/pkg/dump/example_test.go:13:1","message":"ExampleGotcha2 refers to unknown identifier: Gotcha2","source":"\nfunc ExampleGotcha2() {\n\ttype cc struct {"},{"package_id":"github.com/bingoohuang/gg/pkg/dump_test [github.com/bingoohuang/gg/pkg/dump.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/gg@v0.0.0-20230606074320-fb0c62244e54/pkg/dump/example_test.go:24:1","message":"ExampleGotcha1 refers to unknown identifier: Gotcha1","source":"\nfunc ExampleGotcha1() {\n\ttype MyStruct struct {"},{"package_id":"github.com/bingoohuang/gg/pkg/dump_test [github.com/bingoohuang/gg/pkg/dump.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/gg@v0.0.0-20230606074320-fb0c62244e54/pkg/dump/example_test.go:79:1","message":"ExampleDemo refers to unknown identifier: Demo","source":"\nfunc ExampleDemo() {\n\tdump.P(234, int64(56))"},{"package_id":"github.com/bingoohuang/gg/pkg/dump_test [github.com/bingoohuang/gg/pkg/dump.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/gg@v0.0.0-20230606074320-fb0c62244e54/pkg/dump/example_test.go:110:1","message":"ExampleSlice refers to unknown identifier: Slice","source":"\nfunc ExampleSlice() {\n\tdump.P("},{"package_id":"github.com/bingoohuang/gg/pkg/dump_test [github.com/bingoohuang/gg/pkg/dump.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/gg@v0.0.0-20230606074320-fb0c62244e54/pkg/dump/example_test.go:126:1","message":"ExampleStruct refers to unknown identifier: Struct","source":"\nfunc ExampleStruct() {\n\ts1 := \u0026struct {"},{"package_id":"github.com/bingoohuang/gg/pkg/dump_test [github.com/bingoohuang/gg/pkg/dump.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/gg@v0.0.0-20230606074320-fb0c62244e54/pkg/dump/example_test.go:170:1","message":"ExampleDemo2 refers to unknown identifier: Demo2","source":"\nfunc ExampleDemo2() {\n\tdump.P("},{"package_id":"github.com/bingoohuang/gg/pkg/jsoni [github.com/bingoohuang/gg/pkg/jsoni.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/gg@v0.0.0-20230606074320-fb0c62244e54/pkg/jsoni/clear_test.go:13:1","message":"ExampleSprintf0 refers to unknown identifier: Sprintf0","source":"\nfunc ExampleSprintf0() {\n\ttype Val struct {"},{"package_id":"github.com/bingoohuang/gg/pkg/mapstruct [github.com/bingoohuang/gg/pkg/mapstruct.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/gg@v0.0.0-20230606074320-fb0c62244e54/pkg/mapstruct/examples_test.go:8:1","message":"ExampleDecodeTime refers to unknown identifier: DecodeTime","source":"\nfunc ExampleDecodeTime() { // nolint:govet\n\ttype Person struct {"},{"package_id":"github.com/bingoohuang/gg/pkg/sqx_test [github.com/bingoohuang/gg/pkg/sqx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/gg@v0.0.0-20230606074320-fb0c62244e54/pkg/sqx/count_test.go:11:1","message":"ExampleCreateCount refers to unknown identifier: CreateCount","source":"\nfunc ExampleCreateCount() {\n\tret, err := sqx.SQL{"},{"package_id":"github.com/bingoohuang/gg/pkg/yaml_test [github.com/bingoohuang/gg/pkg/yaml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/gg@v0.0.0-20230606074320-fb0c62244e54/pkg/yaml/decode_test.go:1792:1","message":"Example_YAMLTags has malformed example suffix: YAMLTags","source":"\nfunc Example_YAMLTags() {\n\tyml := `---"},{"package_id":"github.com/bingoohuang/gg/pkg/yaml_test [github.com/bingoohuang/gg/pkg/yaml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/gg@v0.0.0-20230606074320-fb0c62244e54/pkg/yaml/decode_test.go:1924:1","message":"Example_JSONTags has malformed example suffix: JSONTags","source":"\nfunc Example_JSONTags() {\n\tyml := `---"},{"package_id":"github.com/bingoohuang/gg/pkg/yaml_test [github.com/bingoohuang/gg/pkg/yaml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/gg@v0.0.0-20230606074320-fb0c62244e54/pkg/yaml/decode_test.go:1943:1","message":"Example_DisallowUnknownField has malformed example suffix: DisallowUnknownField","source":"\nfunc Example_DisallowUnknownField() {\n\tvar v struct {"},{"package_id":"github.com/bingoohuang/gg/pkg/yaml_test [github.com/bingoohuang/gg/pkg/yaml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/gg@v0.0.0-20230606074320-fb0c62244e54/pkg/yaml/decode_test.go:1964:1","message":"Example_Unmarshal_Node has malformed example suffix: Unmarshal_Node","source":"\nfunc Example_Unmarshal_Node() {\n\tf, err := parser.ParseBytes([]byte(\"text: node example\"), 0)"},{"package_id":"github.com/bingoohuang/gg/pkg/yaml_test [github.com/bingoohuang/gg/pkg/yaml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/gg@v0.0.0-20230606074320-fb0c62244e54/pkg/yaml/encode_test.go:1084:1","message":"Example_Marshal_Node has malformed example suffix: Marshal_Node","source":"\nfunc Example_Marshal_Node() {\n\ttype T struct {"},{"package_id":"github.com/bingoohuang/gg/pkg/yaml_test [github.com/bingoohuang/gg/pkg/yaml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/gg@v0.0.0-20230606074320-fb0c62244e54/pkg/yaml/encode_test.go:1101:1","message":"Example_Marshal_ExplicitAnchorAlias has malformed example suffix: Marshal_ExplicitAnchorAlias","source":"\nfunc Example_Marshal_ExplicitAnchorAlias() {\n\ttype T struct {"},{"package_id":"github.com/bingoohuang/gg/pkg/yaml_test [github.com/bingoohuang/gg/pkg/yaml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/gg@v0.0.0-20230606074320-fb0c62244e54/pkg/yaml/encode_test.go:1124:1","message":"Example_Marshal_ImplicitAnchorAlias has malformed example suffix: Marshal_ImplicitAnchorAlias","source":"\nfunc Example_Marshal_ImplicitAnchorAlias() {\n\ttype T struct {"},{"package_id":"github.com/bingoohuang/gg/pkg/yaml_test [github.com/bingoohuang/gg/pkg/yaml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/gg@v0.0.0-20230606074320-fb0c62244e54/pkg/yaml/encode_test.go:1252:1","message":"Example_MarshalYAML has malformed example suffix: MarshalYAML","source":"\nfunc Example_MarshalYAML() {\n\tvar slow SlowMarshaler"},{"package_id":"github.com/bingoohuang/gg/pkg/yaml_test [github.com/bingoohuang/gg/pkg/yaml.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/bingoohuang/gg@v0.0.0-20230606074320-fb0c62244e54/pkg/yaml/path_test.go:492:1","message":"ExamplePath_PathString refers to unknown field or method: Path.PathString","source":"\nfunc ExamplePath_PathString() {\n\tyml := `"}]}
{"created_at":"2023-06-22 17:59:54.212301 UTC","module_path":"github.com/terra-money/core","version":"v0.5.20","sort_version":"0,5,a20~","commit_time":"2022-05-13 07:01:15 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/terra-money/core/app","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/terra-money/core/app.test","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/terra-money/core/app_test [github.com/terra-money/core/app.test]","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/terra-money/core/client/docs/statik","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/terra-money/core/cmd/terrad","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/terra-money/core/custom/auth/ante.test","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/terra-money/core/custom/auth/ante_test [github.com/terra-money/core/custom/auth/ante.test]","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/terra-money/core/custom/authz/legacy/v043.test","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/terra-money/core/custom/authz/legacy/v043_test [github.com/terra-money/core/custom/authz/legacy/v043.test]","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/terra-money/core/x/market/legacy/v05.test","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/terra-money/core/x/market/legacy/v05_test [github.com/terra-money/core/x/market/legacy/v05.test]","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/terra-money/core/x/oracle/legacy/v05.test","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/terra-money/core/x/oracle/legacy/v05_test [github.com/terra-money/core/x/oracle/legacy/v05.test]","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/terra-money/core/x/oracle/types.test","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/terra-money/core/x/oracle/types_test [github.com/terra-money/core/x/oracle/types.test]","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/terra-money/core/x/treasury/legacy/v05.test","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/terra-money/core/x/treasury/legacy/v05_test [github.com/terra-money/core/x/treasury/legacy/v05.test]","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/terra-money/core/x/wasm/legacy/v05.test","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/terra-money/core/x/wasm/legacy/v05_test [github.com/terra-money/core/x/wasm/legacy/v05.test]","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""}]}
{"created_at":"2023-06-22 17:28:17.990371 UTC","module_path":"github.com/fnproject/fn","version":"v0.3.750","sort_version":"0,3,b750~","commit_time":"2023-05-16 17:16:33 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/fnproject/fn/api/agent [github.com/fnproject/fn/api/agent.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fnproject/fn@v0.3.750/api/agent/agent_evict_test.go:200:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"submit should not error! %v\", err)\n\t\t}"},{"package_id":"github.com/fnproject/fn/api/agent [github.com/fnproject/fn/api/agent.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fnproject/fn@v0.3.750/api/agent/agent_evict_test.go:209:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != models.ErrCallTimeoutServerBusy {\n\t\t\tt.Fatalf(\"unexpected error %v\", err)\n\t\t}"},{"package_id":"github.com/fnproject/fn/api/agent [github.com/fnproject/fn/api/agent.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fnproject/fn@v0.3.750/api/agent/agent_evict_test.go:231:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"submit should not error! %v\", err)\n\t\t}"},{"package_id":"github.com/fnproject/fn/api/agent [github.com/fnproject/fn/api/agent.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fnproject/fn@v0.3.750/api/agent/agent_evict_test.go:240:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"submit should not error! %v\", err)\n\t\t}"},{"package_id":"github.com/fnproject/fn/api/agent [github.com/fnproject/fn/api/agent.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fnproject/fn@v0.3.750/api/agent/agent_evict_test.go:261:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != models.ErrContainerInitTimeout {\n\t\t\tt.Fatalf(\"submit unexpected error! %v\", err)\n\t\t}"},{"package_id":"github.com/fnproject/fn/api/agent [github.com/fnproject/fn/api/agent.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fnproject/fn@v0.3.750/api/agent/agent_evict_test.go:270:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != models.ErrCallTimeoutServerBusy {\n\t\t\tt.Fatalf(\"unexpected error %v\", err)\n\t\t}"},{"package_id":"github.com/fnproject/fn/api/agent [github.com/fnproject/fn/api/agent.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fnproject/fn@v0.3.750/api/agent/agent_evict_test.go:298:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != models.ErrDockerPullTimeout {\n\t\t\tt.Fatalf(\"unexpected error %v\", err)\n\t\t}"},{"package_id":"github.com/fnproject/fn/api/agent [github.com/fnproject/fn/api/agent.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fnproject/fn@v0.3.750/api/agent/agent_evict_test.go:307:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != models.ErrCallTimeoutServerBusy {\n\t\t\tt.Fatalf(\"unexpected error %v\", err)\n\t\t}"},{"package_id":"github.com/fnproject/fn/api/agent [github.com/fnproject/fn/api/agent.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fnproject/fn@v0.3.750/api/agent/agent_test.go:1221:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(\"unexpected error building request\", err)\n\t\t\t}"},{"package_id":"github.com/fnproject/fn/api/agent [github.com/fnproject/fn/api/agent.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fnproject/fn@v0.3.750/api/agent/agent_test.go:1227:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"github.com/fnproject/fn/api/agent [github.com/fnproject/fn/api/agent.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fnproject/fn@v0.3.750/api/agent/agent_test.go:1538:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"unexpected error building request %v\", err)\n\t\t\t\t}"},{"package_id":"github.com/fnproject/fn/api/agent [github.com/fnproject/fn/api/agent.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fnproject/fn@v0.3.750/api/agent/agent_test.go:1545:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"unexpected error building call %v\", err)\n\t\t\t\t}"},{"package_id":"github.com/fnproject/fn/api/agent [github.com/fnproject/fn/api/agent.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fnproject/fn@v0.3.750/api/agent/agent_test.go:1553:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"submit should not error %v\", err)\n\t\t\t\t}"},{"package_id":"github.com/fnproject/fn/api/agent [github.com/fnproject/fn/api/agent.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fnproject/fn@v0.3.750/api/agent/agent_test.go:1558:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"read resp should not error %v\", err)\n\t\t\t\t}"},{"package_id":"github.com/fnproject/fn/api/agent/drivers/docker [github.com/fnproject/fn/api/agent/drivers/docker.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fnproject/fn@v0.3.750/api/agent/drivers/docker/image_puller_test.go:56:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"err received %v\", err)\n\t\t\t}"},{"package_id":"github.com/fnproject/fn/api/agent/drivers/docker [github.com/fnproject/fn/api/agent/drivers/docker.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fnproject/fn@v0.3.750/api/agent/drivers/docker/image_puller_test.go:65:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"err received %v\", err)\n\t\t\t}"},{"package_id":"github.com/fnproject/fn/api/agent/drivers/docker [github.com/fnproject/fn/api/agent/drivers/docker.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fnproject/fn@v0.3.750/api/agent/drivers/docker/image_puller_test.go:102:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err == nil || strings.Index(err.Error(), \"yogurt\") == -1 {\n\t\t\t\tt.Fatalf(\"Unknown err received %v\", err)\n\t\t\t}"},{"package_id":"github.com/fnproject/fn/api/agent/drivers/docker [github.com/fnproject/fn/api/agent/drivers/docker.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fnproject/fn@v0.3.750/api/agent/drivers/docker/image_puller_test.go:154:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err == nil {\n\t\t\t\tt.Fatalf(\"no err received\")\n\t\t\t}"},{"package_id":"github.com/fnproject/fn/api/common [github.com/fnproject/fn/api/common.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/fnproject/fn@v0.3.750/api/common/wait_utils_test.go:63:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif isClosed(wg.Closer()) {\n\t\t\t\tt.Fatalf(\"Should not be closing state\")\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:24:00.579683 UTC","module_path":"github.com/btcsuite/golangcrypto","version":"v0.0.0-20150304025918-53f62d9b43e8","sort_version":"0,0,0,~20150304025918-53f62d9b43e8","commit_time":"2015-03-04 02:59:18 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/ssh [synthetic/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/golangcrypto@v0.0.0-20150304025918-53f62d9b43e8/ssh/benchmark_test.go:92:4","message":"call to (*B).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tb.Fatalf(\"Client: %v\", err)\n\t\t}"},{"package_id":"synthetic/ssh [synthetic/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/golangcrypto@v0.0.0-20150304025918-53f62d9b43e8/ssh/benchmark_test.go:98:5","message":"call to (*B).Fatalf from a non-test goroutine","source":"\t\t\tif _, err := io.ReadFull(ch, output); err != nil {\n\t\t\t\tb.Fatalf(\"ReadFull: %v\", err)\n\t\t\t}"},{"package_id":"synthetic/ssh [synthetic/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/golangcrypto@v0.0.0-20150304025918-53f62d9b43e8/ssh/certs_test.go:141:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"NewServerConn: %v\", err)\n\t\t\t}"},{"package_id":"synthetic/ssh [synthetic/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/golangcrypto@v0.0.0-20150304025918-53f62d9b43e8/ssh/handshake_test.go:94:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := trC.writePacket(p); err != nil {\n\t\t\t\tt.Fatalf(\"sendPacket: %v\", err)\n\t\t\t}"},{"package_id":"synthetic/ssh [synthetic/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/golangcrypto@v0.0.0-20150304025918-53f62d9b43e8/ssh/handshake_test.go:100:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"sendKexInit: %v\", err)\n\t\t\t\t}"},{"package_id":"synthetic/ssh [synthetic/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/golangcrypto@v0.0.0-20150304025918-53f62d9b43e8/ssh/mempipe_test.go:79:1","message":"TestmemPipe has malformed name: first letter after 'Test' must not be lowercase","source":"\nfunc TestmemPipe(t *testing.T) {\n\ta, b := memPipe()"},{"package_id":"synthetic/ssh [synthetic/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/golangcrypto@v0.0.0-20150304025918-53f62d9b43e8/ssh/mux_test.go:77:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif string(c) != magic {\n\t\t\tt.Fatalf(\"stdout read got %q, want %q (error %s)\", c, magic, err)\n\t\t}"},{"package_id":"synthetic/ssh [synthetic/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/golangcrypto@v0.0.0-20150304025918-53f62d9b43e8/ssh/mux_test.go:84:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif string(c) != magic {\n\t\t\tt.Fatalf(\"stderr read got %q, want %q (error %s)\", c, magic, err)\n\t\t}"},{"package_id":"synthetic/ssh [synthetic/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/golangcrypto@v0.0.0-20150304025918-53f62d9b43e8/ssh/mux_test.go:105:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Write: %v\", err)\n\t\t}"},{"package_id":"synthetic/ssh [synthetic/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/golangcrypto@v0.0.0-20150304025918-53f62d9b43e8/ssh/mux_test.go:109:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Write: %v\", err)\n\t\t}"},{"package_id":"synthetic/ssh [synthetic/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/golangcrypto@v0.0.0-20150304025918-53f62d9b43e8/ssh/mux_test.go:113:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Close: %v\", err)\n\t\t}"},{"package_id":"synthetic/ssh [synthetic/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/golangcrypto@v0.0.0-20150304025918-53f62d9b43e8/ssh/mux_test.go:222:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif !ok {\n\t\t\tt.Fatalf(\"Accept\")\n\t\t}"},{"package_id":"synthetic/ssh [synthetic/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/golangcrypto@v0.0.0-20150304025918-53f62d9b43e8/ssh/mux_test.go:225:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif ch.ChannelType() != \"ch\" || string(ch.ExtraData()) != \"extra\" {\n\t\t\tt.Fatalf(\"unexpected channel: %q, %q\", ch.ChannelType(), ch.ExtraData())\n\t\t}"},{"package_id":"synthetic/ssh [synthetic/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/golangcrypto@v0.0.0-20150304025918-53f62d9b43e8/ssh/session_test.go:652:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"server handshake: %v\", err)\n\t\t}"},{"package_id":"synthetic/ssh [synthetic/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/golangcrypto@v0.0.0-20150304025918-53f62d9b43e8/ssh/session_test.go:664:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"client handshake: %v\", err)\n\t\t}"},{"package_id":"synthetic/ssh/agent [synthetic/ssh/agent.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/golangcrypto@v0.0.0-20150304025918-53f62d9b43e8/ssh/agent/client_test.go:205:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Server: %v\", err)\n\t\t}"},{"package_id":"synthetic/ssh/agent [synthetic/ssh/agent.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/golangcrypto@v0.0.0-20150304025918-53f62d9b43e8/ssh/agent/server_test.go:51:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Server: %v\", err)\n\t\t}"},{"package_id":"synthetic/ssh/test [synthetic/ssh/test.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/golangcrypto@v0.0.0-20150304025918-53f62d9b43e8/ssh/test/forward_unix_test.go:33:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"listen.Accept failed: %v\", err)\n\t\t}"},{"package_id":"synthetic/ssh/test [synthetic/ssh/test.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btcsuite/golangcrypto@v0.0.0-20150304025918-53f62d9b43e8/ssh/test/forward_unix_test.go:38:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil \u0026\u0026 err != io.EOF {\n\t\t\tt.Fatalf(\"ssh client copy: %v\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:34:05.675347 UTC","module_path":"go.dedis.ch/onet/v4","version":"v4.0.0-pre1","sort_version":"4,0,0,~pre1","commit_time":"2019-10-14 15:36:08 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"go.dedis.ch/onet/v4 [go.dedis.ch/onet/v4.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v4@v4.0.0-pre1/node_test.go:375:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(\"Couldn't send message:\", err)\n\t\t}"},{"package_id":"go.dedis.ch/onet/v4 [go.dedis.ch/onet/v4.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v4@v4.0.0-pre1/node_test.go:379:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(\"Couldn't send message:\", err)\n\t\t}"},{"package_id":"go.dedis.ch/onet/v4 [go.dedis.ch/onet/v4.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v4@v4.0.0-pre1/node_test.go:385:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(\"Couldn't send message:\", err)\n\t\t}"},{"package_id":"go.dedis.ch/onet/v4 [go.dedis.ch/onet/v4.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v4@v4.0.0-pre1/protocol_test.go:157:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(fmt.Sprintf(\"Could not start protocol %v\", err))\n\t\t}"},{"package_id":"go.dedis.ch/onet/v4 [go.dedis.ch/onet/v4.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v4@v4.0.0-pre1/protocol_test.go:215:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(fmt.Sprintf(\"Could not start protocol %v\", err))\n\t\t}"},{"package_id":"go.dedis.ch/onet/v4 [go.dedis.ch/onet/v4.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v4@v4.0.0-pre1/protocol_test.go:229:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(fmt.Sprintf(\"Could not start protocol %v\", err))\n\t\t}"},{"package_id":"go.dedis.ch/onet/v4/network [go.dedis.ch/onet/v4/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v4@v4.0.0-pre1/network/big_test.go:64:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(\"Couldn't receive msg:\", err)\n\t\t\t\t}"},{"package_id":"go.dedis.ch/onet/v4/network [go.dedis.ch/onet/v4/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v4@v4.0.0-pre1/network/big_test.go:67:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif !nm.MsgType.Equal(bigMessageType) {\n\t\t\t\t\tt.Fatal(\"Received message type is wrong\")\n\t\t\t\t}"},{"package_id":"go.dedis.ch/onet/v4/network [go.dedis.ch/onet/v4/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v4@v4.0.0-pre1/network/big_test.go:71:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif bigCopy.Msize != msgSize {\n\t\t\t\t\tt.Fatal(h, \"Message-size is wrong:\", bigCopy.Msize, bigCopy, big)\n\t\t\t\t}"},{"package_id":"go.dedis.ch/onet/v4/network [go.dedis.ch/onet/v4/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v4@v4.0.0-pre1/network/big_test.go:74:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif bigCopy.Pcrc != 25 {\n\t\t\t\t\tt.Fatal(\"CRC is wrong\")\n\t\t\t\t}"},{"package_id":"go.dedis.ch/onet/v4/network [go.dedis.ch/onet/v4/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v4@v4.0.0-pre1/network/big_test.go:83:7","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t\tif err != nil {\n\t\t\t\t\t\tt.Fatal(h, \"couldn't send message:\", err)\n\t\t\t\t\t}"},{"package_id":"go.dedis.ch/onet/v4/network [go.dedis.ch/onet/v4/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v4@v4.0.0-pre1/network/big_test.go:86:7","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t\tif sentLen == 0 {\n\t\t\t\t\t\tt.Fatal(\"sentLen is zero\")\n\t\t\t\t\t}"},{"package_id":"go.dedis.ch/onet/v4/network [go.dedis.ch/onet/v4/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v4@v4.0.0-pre1/network/big_test.go:92:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(\"Couldn't receive msg:\", err)\n\t\t\t}"},{"package_id":"go.dedis.ch/onet/v4/network [go.dedis.ch/onet/v4/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v4@v4.0.0-pre1/network/big_test.go:119:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(i, j, \"Couldn't send:\", err)\n\t\t\t\t}"},{"package_id":"go.dedis.ch/onet/v4/network [go.dedis.ch/onet/v4/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v4@v4.0.0-pre1/network/big_test.go:122:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif sentLen == 0 {\n\t\t\t\t\tt.Fatal(\"sentLen is zero\")\n\t\t\t\t}"},{"package_id":"go.dedis.ch/onet/v4/network [go.dedis.ch/onet/v4/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v4@v4.0.0-pre1/network/big_test.go:126:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(i, j, \"Couldn't receive:\", err)\n\t\t\t\t}"},{"package_id":"go.dedis.ch/onet/v4/network [go.dedis.ch/onet/v4/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v4@v4.0.0-pre1/network/big_test.go:130:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif bc.Msize != msgSize {\n\t\t\t\t\tt.Fatal(i, j, \"Message-size is wrong\")\n\t\t\t\t}"},{"package_id":"go.dedis.ch/onet/v4/network [go.dedis.ch/onet/v4/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v4@v4.0.0-pre1/network/big_test.go:133:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif bc.Pcrc != 25 {\n\t\t\t\t\tt.Fatal(i, j, \"CRC is wrong\")\n\t\t\t\t}"},{"package_id":"go.dedis.ch/onet/v4/network [go.dedis.ch/onet/v4/network.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.dedis.ch/onet/v4@v4.0.0-pre1/network/local_test.go:323:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:40:33.763564 UTC","module_path":"github.com/duke-git/lancet/v2","version":"v2.2.2","sort_version":"2,2,2~","commit_time":"2023-06-20 03:11:27 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/duke-git/lancet/v2/stream [github.com/duke-git/lancet/v2/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/duke-git/lancet/v2@v2.2.2/stream/stream_example_test.go:93:1","message":"ExampleStream_Distinct refers to unknown identifier: Stream","source":"\nfunc ExampleStream_Distinct() {\n\toriginal := FromSlice([]int{1, 2, 2, 3, 3, 3})"},{"package_id":"github.com/duke-git/lancet/v2/stream [github.com/duke-git/lancet/v2/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/duke-git/lancet/v2@v2.2.2/stream/stream_example_test.go:108:1","message":"ExampleStream_Filter refers to unknown identifier: Stream","source":"\nfunc ExampleStream_Filter() {\n\toriginal := FromSlice([]int{1, 2, 3, 4, 5})"},{"package_id":"github.com/duke-git/lancet/v2/stream [github.com/duke-git/lancet/v2/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/duke-git/lancet/v2@v2.2.2/stream/stream_example_test.go:123:1","message":"ExampleStream_Map refers to unknown identifier: Stream","source":"\nfunc ExampleStream_Map() {\n\toriginal := FromSlice([]int{1, 2, 3})"},{"package_id":"github.com/duke-git/lancet/v2/stream [github.com/duke-git/lancet/v2/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/duke-git/lancet/v2@v2.2.2/stream/stream_example_test.go:138:1","message":"ExampleStream_Peek refers to unknown identifier: Stream","source":"\nfunc ExampleStream_Peek() {\n\toriginal := FromSlice([]int{1, 2, 3})"},{"package_id":"github.com/duke-git/lancet/v2/stream [github.com/duke-git/lancet/v2/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/duke-git/lancet/v2@v2.2.2/stream/stream_example_test.go:156:1","message":"ExampleStream_Skip refers to unknown identifier: Stream","source":"\nfunc ExampleStream_Skip() {\n\toriginal := FromSlice([]int{1, 2, 3, 4})"},{"package_id":"github.com/duke-git/lancet/v2/stream [github.com/duke-git/lancet/v2/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/duke-git/lancet/v2@v2.2.2/stream/stream_example_test.go:176:1","message":"ExampleStream_Limit refers to unknown identifier: Stream","source":"\nfunc ExampleStream_Limit() {\n\toriginal := FromSlice([]int{1, 2, 3, 4})"},{"package_id":"github.com/duke-git/lancet/v2/stream [github.com/duke-git/lancet/v2/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/duke-git/lancet/v2@v2.2.2/stream/stream_example_test.go:196:1","message":"ExampleStream_AllMatch refers to unknown identifier: Stream","source":"\nfunc ExampleStream_AllMatch() {\n\toriginal := FromSlice([]int{1, 2, 3})"},{"package_id":"github.com/duke-git/lancet/v2/stream [github.com/duke-git/lancet/v2/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/duke-git/lancet/v2@v2.2.2/stream/stream_example_test.go:215:1","message":"ExampleStream_AnyMatch refers to unknown identifier: Stream","source":"\nfunc ExampleStream_AnyMatch() {\n\toriginal := FromSlice([]int{1, 2, 3})"},{"package_id":"github.com/duke-git/lancet/v2/stream [github.com/duke-git/lancet/v2/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/duke-git/lancet/v2@v2.2.2/stream/stream_example_test.go:234:1","message":"ExampleStream_NoneMatch refers to unknown identifier: Stream","source":"\nfunc ExampleStream_NoneMatch() {\n\toriginal := FromSlice([]int{1, 2, 3})"},{"package_id":"github.com/duke-git/lancet/v2/stream [github.com/duke-git/lancet/v2/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/duke-git/lancet/v2@v2.2.2/stream/stream_example_test.go:253:1","message":"ExampleStream_ForEach refers to unknown identifier: Stream","source":"\nfunc ExampleStream_ForEach() {\n\toriginal := FromSlice([]int{1, 2, 3})"},{"package_id":"github.com/duke-git/lancet/v2/stream [github.com/duke-git/lancet/v2/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/duke-git/lancet/v2@v2.2.2/stream/stream_example_test.go:267:1","message":"ExampleStream_Reduce refers to unknown identifier: Stream","source":"\nfunc ExampleStream_Reduce() {\n\toriginal := FromSlice([]int{1, 2, 3})"},{"package_id":"github.com/duke-git/lancet/v2/stream [github.com/duke-git/lancet/v2/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/duke-git/lancet/v2@v2.2.2/stream/stream_example_test.go:280:1","message":"ExampleStream_FindFirst refers to unknown identifier: Stream","source":"\nfunc ExampleStream_FindFirst() {\n\toriginal := FromSlice([]int{1, 2, 3})"},{"package_id":"github.com/duke-git/lancet/v2/stream [github.com/duke-git/lancet/v2/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/duke-git/lancet/v2@v2.2.2/stream/stream_example_test.go:293:1","message":"ExampleStream_FindLast refers to unknown identifier: Stream","source":"\nfunc ExampleStream_FindLast() {\n\toriginal := FromSlice([]int{3, 2, 1})"},{"package_id":"github.com/duke-git/lancet/v2/stream [github.com/duke-git/lancet/v2/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/duke-git/lancet/v2@v2.2.2/stream/stream_example_test.go:306:1","message":"ExampleStream_Reverse refers to unknown identifier: Stream","source":"\nfunc ExampleStream_Reverse() {\n\toriginal := FromSlice([]int{1, 2, 3})"},{"package_id":"github.com/duke-git/lancet/v2/stream [github.com/duke-git/lancet/v2/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/duke-git/lancet/v2@v2.2.2/stream/stream_example_test.go:317:1","message":"ExampleStream_Range refers to unknown identifier: Stream","source":"\nfunc ExampleStream_Range() {\n\toriginal := FromSlice([]int{1, 2, 3})"},{"package_id":"github.com/duke-git/lancet/v2/stream [github.com/duke-git/lancet/v2/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/duke-git/lancet/v2@v2.2.2/stream/stream_example_test.go:337:1","message":"ExampleStream_Sorted refers to unknown identifier: Stream","source":"\nfunc ExampleStream_Sorted() {\n\toriginal := FromSlice([]int{4, 2, 1, 3})"},{"package_id":"github.com/duke-git/lancet/v2/stream [github.com/duke-git/lancet/v2/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/duke-git/lancet/v2@v2.2.2/stream/stream_example_test.go:350:1","message":"ExampleStream_Max refers to unknown identifier: Stream","source":"\nfunc ExampleStream_Max() {\n\toriginal := FromSlice([]int{4, 2, 1, 3})"},{"package_id":"github.com/duke-git/lancet/v2/stream [github.com/duke-git/lancet/v2/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/duke-git/lancet/v2@v2.2.2/stream/stream_example_test.go:363:1","message":"ExampleStream_Min refers to unknown identifier: Stream","source":"\nfunc ExampleStream_Min() {\n\toriginal := FromSlice([]int{4, 2, 1, 3})"},{"package_id":"github.com/duke-git/lancet/v2/stream [github.com/duke-git/lancet/v2/stream.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/duke-git/lancet/v2@v2.2.2/stream/stream_example_test.go:376:1","message":"ExampleStream_Count refers to unknown identifier: Stream","source":"\nfunc ExampleStream_Count() {\n\ts1 := FromSlice([]int{1, 2, 3})"}]}
{"created_at":"2023-06-22 17:54:40.968962 UTC","module_path":"github.com/lovego/logger","version":"v0.0.3","sort_version":"0,0,3~","commit_time":"2021-09-23 02:13:49 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/lovego/logger [github.com/lovego/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovego/logger@v0.0.3/formatter_test.go:5:1","message":"ExampleJsonFormatter refers to unknown identifier: JsonFormatter","source":"\nfunc ExampleJsonFormatter() {\n\tbytes, err := jsonFormatter.Format(map[string]interface{}{\"query\": \"a=b\u0026c=d\"})"},{"package_id":"github.com/lovego/logger [github.com/lovego/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovego/logger@v0.0.3/formatter_test.go:13:1","message":"ExampleReadableFormatter refers to unknown identifier: ReadableFormatter","source":"\nfunc ExampleReadableFormatter() {\n\tbytes, err := readableFormatter.Format(map[string]interface{}{"},{"package_id":"github.com/lovego/logger [github.com/lovego/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovego/logger@v0.0.3/logger_test.go:28:1","message":"ExampleWith refers to unknown identifier: With","source":"\nfunc ExampleWith() {\n\twriter := bytes.NewBuffer(nil)"},{"package_id":"github.com/lovego/logger [github.com/lovego/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovego/logger@v0.0.3/logger_test.go:52:1","message":"ExampleDebugf refers to unknown identifier: Debugf","source":"\nfunc ExampleDebugf() {\n\twriter, alarm := bytes.NewBuffer(nil), \u0026testAlarm{}"},{"package_id":"github.com/lovego/logger [github.com/lovego/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovego/logger@v0.0.3/logger_test.go:79:1","message":"ExampleInfof refers to unknown identifier: Infof","source":"\nfunc ExampleInfof() {\n\twriter, alarm := bytes.NewBuffer(nil), \u0026testAlarm{}"},{"package_id":"github.com/lovego/logger [github.com/lovego/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovego/logger@v0.0.3/loggerfields_test.go:7:1","message":"ExampleSet refers to unknown identifier: Set","source":"\nfunc ExampleSet() {\n\tlogger := New(nil)"},{"package_id":"github.com/lovego/logger [github.com/lovego/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovego/logger@v0.0.3/loggerfields_test.go:16:1","message":"ExampleSetMachineIP refers to unknown identifier: SetMachineIP","source":"\nfunc ExampleSetMachineIP() {\n\tlogger := New(nil)"},{"package_id":"github.com/lovego/logger [github.com/lovego/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovego/logger@v0.0.3/loggerfields_test.go:25:1","message":"ExampleSetPid refers to unknown identifier: SetPid","source":"\nfunc ExampleSetPid() {\n\tlogger := New(nil)"},{"package_id":"github.com/lovego/logger [github.com/lovego/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovego/logger@v0.0.3/loggeroutput_test.go:15:1","message":"ExampleLogger_output_1 has malformed example suffix: 1","source":"\nfunc ExampleLogger_output_1() {\n\twriter := bytes.NewBuffer(nil)"},{"package_id":"github.com/lovego/logger [github.com/lovego/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovego/logger@v0.0.3/loggeroutput_test.go:23:1","message":"ExampleLogger_output_2 has malformed example suffix: 2","source":"\nfunc ExampleLogger_output_2() {\n\twriter := bytes.NewBuffer(nil)"},{"package_id":"github.com/lovego/logger [github.com/lovego/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovego/logger@v0.0.3/loggeroutput_test.go:30:1","message":"ExampleLogger_output_3 has malformed example suffix: 3","source":"\nfunc ExampleLogger_output_3() {\n\twriter := bytes.NewBuffer(nil)"},{"package_id":"github.com/lovego/logger [github.com/lovego/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovego/logger@v0.0.3/loggeroutput_test.go:39:1","message":"ExampleLogger_getFields_1 has malformed example suffix: 1","source":"\nfunc ExampleLogger_getFields_1() {\n\twriter := bytes.NewBuffer(nil)"},{"package_id":"github.com/lovego/logger [github.com/lovego/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovego/logger@v0.0.3/loggeroutput_test.go:49:1","message":"ExampleLogger_doAlarm_1 has malformed example suffix: 1","source":"\nfunc ExampleLogger_doAlarm_1() {\n\twriter, alarm := bytes.NewBuffer(nil), \u0026testAlarm{}"},{"package_id":"github.com/lovego/logger [github.com/lovego/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovego/logger@v0.0.3/loggeroutput_test.go:58:1","message":"ExampleLogger_doAlarm_2 has malformed example suffix: 2","source":"\nfunc ExampleLogger_doAlarm_2() {\n\twriter := bytes.NewBuffer(nil)"},{"package_id":"github.com/lovego/logger [github.com/lovego/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovego/logger@v0.0.3/loggeroutput_test.go:69:1","message":"ExampleLogger_format_1 has malformed example suffix: 1","source":"\nfunc ExampleLogger_format_1() {\n\twriter, alarm := bytes.NewBuffer(nil), \u0026testAlarm{}"},{"package_id":"github.com/lovego/logger [github.com/lovego/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovego/logger@v0.0.3/loggeroutput_test.go:80:1","message":"ExampleLogger_format_2 has malformed example suffix: 2","source":"\nfunc ExampleLogger_format_2() {\n\twriter := bytes.NewBuffer(nil)"},{"package_id":"github.com/lovego/logger [github.com/lovego/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovego/logger@v0.0.3/loggerrecord_test.go:37:1","message":"ExampleLogger_Record_1 has malformed example suffix: 1","source":"\nfunc ExampleLogger_Record_1() {\n\twriter := bytes.NewBuffer(nil)"},{"package_id":"github.com/lovego/logger [github.com/lovego/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovego/logger@v0.0.3/loggerrecord_test.go:52:1","message":"ExampleLogger_Record_2 has malformed example suffix: 2","source":"\nfunc ExampleLogger_Record_2() {\n\twriter := bytes.NewBuffer(nil)"},{"package_id":"github.com/lovego/logger [github.com/lovego/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovego/logger@v0.0.3/loggerrecord_test.go:64:1","message":"ExampleLogger_Record_3 has malformed example suffix: 3","source":"\nfunc ExampleLogger_Record_3() {\n\twriter := bytes.NewBuffer(nil)"},{"package_id":"github.com/lovego/logger [github.com/lovego/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/lovego/logger@v0.0.3/loggerrecord_test.go:77:1","message":"ExampleLogger_Record_4 has malformed example suffix: 4","source":"\nfunc ExampleLogger_Record_4() {\n\twriter := bytes.NewBuffer(nil)"}]}
{"created_at":"2023-06-22 17:46:04.142963 UTC","module_path":"github.com/peterhellberg/gfx","version":"v0.0.0-20230526095554-e6202e653d52","sort_version":"0,0,0,~20230526095554-e6202e653d52","commit_time":"2023-05-26 09:55:54 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/peterhellberg/gfx [github.com/peterhellberg/gfx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/peterhellberg/gfx@v0.0.0-20230526095554-e6202e653d52/cie_lab_test.go:3:1","message":"ExampleLab refers to unknown identifier: Lab","source":"\nfunc ExampleLab() {\n\tvar ("},{"package_id":"github.com/peterhellberg/gfx [github.com/peterhellberg/gfx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/peterhellberg/gfx@v0.0.0-20230526095554-e6202e653d52/vec2_test.go:80:1","message":"ExampleVecAdd refers to unknown identifier: VecAdd","source":"\nfunc ExampleVecAdd() {\n\tDump("},{"package_id":"github.com/peterhellberg/gfx [github.com/peterhellberg/gfx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/peterhellberg/gfx@v0.0.0-20230526095554-e6202e653d52/vec2_test.go:91:1","message":"ExampleVecAddXY refers to unknown identifier: VecAddXY","source":"\nfunc ExampleVecAddXY() {\n\tDump("},{"package_id":"github.com/peterhellberg/gfx [github.com/peterhellberg/gfx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/peterhellberg/gfx@v0.0.0-20230526095554-e6202e653d52/vec2_test.go:102:1","message":"ExampleVecSub refers to unknown identifier: VecSub","source":"\nfunc ExampleVecSub() {\n\tDump("},{"package_id":"github.com/peterhellberg/gfx [github.com/peterhellberg/gfx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/peterhellberg/gfx@v0.0.0-20230526095554-e6202e653d52/vec2_test.go:113:1","message":"ExampleVecTo refers to unknown identifier: VecTo","source":"\nfunc ExampleVecTo() {\n\tDump("},{"package_id":"github.com/peterhellberg/gfx [github.com/peterhellberg/gfx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/peterhellberg/gfx@v0.0.0-20230526095554-e6202e653d52/vec2_test.go:124:1","message":"ExampleVecMod refers to unknown identifier: VecMod","source":"\nfunc ExampleVecMod() {\n\tDump("},{"package_id":"github.com/peterhellberg/gfx [github.com/peterhellberg/gfx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/peterhellberg/gfx@v0.0.0-20230526095554-e6202e653d52/vec2_test.go:135:1","message":"ExampleVecAbs refers to unknown identifier: VecAbs","source":"\nfunc ExampleVecAbs() {\n\tDump("},{"package_id":"github.com/peterhellberg/gfx [github.com/peterhellberg/gfx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/peterhellberg/gfx@v0.0.0-20230526095554-e6202e653d52/vec2_test.go:148:1","message":"ExampleVecMax refers to unknown identifier: VecMax","source":"\nfunc ExampleVecMax() {\n\tDump("},{"package_id":"github.com/peterhellberg/gfx [github.com/peterhellberg/gfx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/peterhellberg/gfx@v0.0.0-20230526095554-e6202e653d52/vec2_test.go:159:1","message":"ExampleVecMin refers to unknown identifier: VecMin","source":"\nfunc ExampleVecMin() {\n\tDump("},{"package_id":"github.com/peterhellberg/gfx [github.com/peterhellberg/gfx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/peterhellberg/gfx@v0.0.0-20230526095554-e6202e653d52/vec2_test.go:170:1","message":"ExampleVecDot refers to unknown identifier: VecDot","source":"\nfunc ExampleVecDot() {\n\tDump("},{"package_id":"github.com/peterhellberg/gfx [github.com/peterhellberg/gfx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/peterhellberg/gfx@v0.0.0-20230526095554-e6202e653d52/vec2_test.go:181:1","message":"ExampleVecCross refers to unknown identifier: VecCross","source":"\nfunc ExampleVecCross() {\n\tDump("},{"package_id":"github.com/peterhellberg/gfx [github.com/peterhellberg/gfx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/peterhellberg/gfx@v0.0.0-20230526095554-e6202e653d52/vec2_test.go:192:1","message":"ExampleVecProject refers to unknown identifier: VecProject","source":"\nfunc ExampleVecProject() {\n\tDump("},{"package_id":"github.com/peterhellberg/gfx [github.com/peterhellberg/gfx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/peterhellberg/gfx@v0.0.0-20230526095554-e6202e653d52/vec2_test.go:203:1","message":"ExampleVecMap refers to unknown identifier: VecMap","source":"\nfunc ExampleVecMap() {\n\tDump("},{"package_id":"github.com/peterhellberg/gfx [github.com/peterhellberg/gfx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/peterhellberg/gfx@v0.0.0-20230526095554-e6202e653d52/vec2_test.go:214:1","message":"ExampleVecVec3 refers to unknown identifier: VecVec3","source":"\nfunc ExampleVecVec3() {\n\tDump("},{"package_id":"github.com/peterhellberg/gfx [github.com/peterhellberg/gfx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/peterhellberg/gfx@v0.0.0-20230526095554-e6202e653d52/vec2_test.go:225:1","message":"ExampleVecPt refers to unknown identifier: VecPt","source":"\nfunc ExampleVecPt() {\n\tDump("},{"package_id":"github.com/peterhellberg/gfx [github.com/peterhellberg/gfx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/peterhellberg/gfx@v0.0.0-20230526095554-e6202e653d52/vec2_test.go:236:1","message":"ExampleVecR refers to unknown identifier: VecR","source":"\nfunc ExampleVecR() {\n\tDump("},{"package_id":"github.com/peterhellberg/gfx [github.com/peterhellberg/gfx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/peterhellberg/gfx@v0.0.0-20230526095554-e6202e653d52/vec2_test.go:247:1","message":"ExampleVecB refers to unknown identifier: VecB","source":"\nfunc ExampleVecB() {\n\tDump("},{"package_id":"github.com/peterhellberg/gfx [github.com/peterhellberg/gfx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/peterhellberg/gfx@v0.0.0-20230526095554-e6202e653d52/vec2_test.go:258:1","message":"ExampleVecRect refers to unknown identifier: VecRect","source":"\nfunc ExampleVecRect() {\n\tDump("},{"package_id":"github.com/peterhellberg/gfx [github.com/peterhellberg/gfx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/peterhellberg/gfx@v0.0.0-20230526095554-e6202e653d52/vec2_test.go:269:1","message":"ExampleVecBounds refers to unknown identifier: VecBounds","source":"\nfunc ExampleVecBounds() {\n\tDump("},{"package_id":"github.com/peterhellberg/gfx [github.com/peterhellberg/gfx.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/peterhellberg/gfx@v0.0.0-20230526095554-e6202e653d52/vec2_test.go:280:1","message":"ExampleVecLerp refers to unknown identifier: VecLerp","source":"\nfunc ExampleVecLerp() {\n\ta, b := V(1, 2), V(30, 40)"}]}
{"created_at":"2023-06-22 17:52:17.522566 UTC","module_path":"github.com/miruken-go/miruken","version":"v0.30.4","sort_version":"0,a30,4~","commit_time":"2023-06-15 17:37:55 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/miruken-go/miruken/api","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/miruken-go/miruken/api/http","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/miruken-go/miruken/api/http/httpsrv","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/miruken-go/miruken/api/http/httpsrv/openapi","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/miruken-go/miruken/api/http/httpsrv/openapi/test [github.com/miruken-go/miruken/api/http/httpsrv/openapi/test.test]","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/miruken-go/miruken/api/http/httpsrv/openapi/test.test","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/miruken-go/miruken/api/http/httpsrv/openapi/ui","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/miruken-go/miruken/api/http/httpsrv/test [github.com/miruken-go/miruken/api/http/httpsrv/test.test]","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/miruken-go/miruken/api/http/httpsrv/test.test","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/miruken-go/miruken/api/json","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/miruken-go/miruken/api/json/stdjson","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/miruken-go/miruken/api/json/stdjson/test [github.com/miruken-go/miruken/api/json/stdjson/test.test]","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/miruken-go/miruken/api/json/stdjson/test.test","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/miruken-go/miruken/api/test [github.com/miruken-go/miruken/api/test.test]","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/miruken-go/miruken/api/test.test","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/miruken-go/miruken/either","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/miruken-go/miruken/either/test [github.com/miruken-go/miruken/either/test.test]","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/miruken-go/miruken/either/test.test","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/miruken-go/miruken/maps/test [github.com/miruken-go/miruken/maps/test.test]","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/miruken-go/miruken/maps/test.test","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/miruken-go/miruken/test [github.com/miruken-go/miruken/test.test]","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""},{"package_id":"github.com/miruken-go/miruken/test.test","analyzer_name":"tests","error":"analysis skipped due to errors in package","category":"","position":"","message":""}]}
{"created_at":"2023-06-22 17:32:32.411559 UTC","module_path":"github.com/ossrs/go-oryx-lib","version":"v0.0.9","sort_version":"0,0,9~","commit_time":"2021-10-10 10:46:28 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/asprocess_test [synthetic/asprocess.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ossrs/go-oryx-lib@v0.0.9/asprocess/example_test.go:31:1","message":"ExampleAsProcess refers to unknown identifier: AsProcess","source":"\nfunc ExampleAsProcess() {\n\t// Without context and callback."},{"package_id":"synthetic/asprocess_test [synthetic/asprocess.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ossrs/go-oryx-lib@v0.0.9/asprocess/example_test.go:41:1","message":"ExampleAsProcess_NoQuit refers to unknown identifier: AsProcess","source":"\nfunc ExampleAsProcess_NoQuit() {\n\t// User control the quit event."},{"package_id":"synthetic/http_test [synthetic/http.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ossrs/go-oryx-lib@v0.0.9/http/example_test.go:30:1","message":"ExampleHttpTest_Global refers to unknown identifier: HttpTest","source":"\nfunc ExampleHttpTest_Global() {\n\toh.Server = \"Test\""},{"package_id":"synthetic/http_test [synthetic/http.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ossrs/go-oryx-lib@v0.0.9/http/example_test.go:38:1","message":"ExampleHttpTest_RawResponse refers to unknown identifier: HttpTest","source":"\nfunc ExampleHttpTest_RawResponse() {\n\thttp.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) {"},{"package_id":"synthetic/http_test [synthetic/http.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ossrs/go-oryx-lib@v0.0.9/http/example_test.go:48:1","message":"ExampleHttpTest_JsonData refers to unknown identifier: HttpTest","source":"\nfunc ExampleHttpTest_JsonData() {\n\thttp.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) {"},{"package_id":"synthetic/http_test [synthetic/http.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ossrs/go-oryx-lib@v0.0.9/http/example_test.go:58:1","message":"ExampleHttpTest_Error refers to unknown identifier: HttpTest","source":"\nfunc ExampleHttpTest_Error() {\n\thttp.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) {"},{"package_id":"synthetic/http_test [synthetic/http.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ossrs/go-oryx-lib@v0.0.9/http/example_test.go:80:1","message":"ExampleWrite refers to unknown identifier: Write","source":"\nfunc ExampleWrite() {\n\thttp.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) {"},{"package_id":"synthetic/https_test [synthetic/https.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ossrs/go-oryx-lib@v0.0.9/https/example_test.go:33:1","message":"ExampleLetsencryptManagerHttpAndHttps refers to unknown identifier: LetsencryptManagerHttpAndHttps","source":"// to set the GetCertificate of TLSConfig.\nfunc ExampleLetsencryptManagerHttpAndHttps() {\n\thttp.HandleFunc(\"/api/v1/version\", func(w http.ResponseWriter, r *http.Request) {"},{"package_id":"synthetic/https_test [synthetic/https.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ossrs/go-oryx-lib@v0.0.9/https/example_test.go:67:1","message":"ExampleLetsencryptManagerHttps refers to unknown identifier: LetsencryptManagerHttps","source":"// to set the GetCertificate of TLSConfig.\nfunc ExampleLetsencryptManagerHttps() {\n\thttp.HandleFunc(\"/api/v1/version\", func(w http.ResponseWriter, r *http.Request) {"},{"package_id":"synthetic/https_test [synthetic/https.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ossrs/go-oryx-lib@v0.0.9/https/example_test.go:95:1","message":"ExampleSelfSignHttps refers to unknown identifier: SelfSignHttps","source":"// to set the GetCertificate of TLSConfig.\nfunc ExampleSelfSignHttps() {\n\thttp.HandleFunc(\"/api/v1/version\", func(w http.ResponseWriter, r *http.Request) {"},{"package_id":"synthetic/https_test [synthetic/https.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ossrs/go-oryx-lib@v0.0.9/https/example_test.go:124:1","message":"ExampleSelfSignHttpAndHttps refers to unknown identifier: SelfSignHttpAndHttps","source":"// to set the GetCertificate of TLSConfig.\nfunc ExampleSelfSignHttpAndHttps() {\n\thttp.HandleFunc(\"/api/v1/version\", func(w http.ResponseWriter, r *http.Request) {"},{"package_id":"synthetic/json_test [synthetic/json.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ossrs/go-oryx-lib@v0.0.9/json/example_test.go:32:1","message":"ExampleJson refers to unknown identifier: Json","source":"\nfunc ExampleJson() {\n\tr := bytes.NewReader([]byte(`"},{"package_id":"synthetic/json_test [synthetic/json.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ossrs/go-oryx-lib@v0.0.9/json/example_test.go:65:1","message":"ExampleJson_Unmarshal refers to unknown identifier: Json","source":"\nfunc ExampleJson_Unmarshal() {\n\ts := `{\"code\":100,\"data\":\"There is something error\"}`"},{"package_id":"synthetic/json_test [synthetic/json.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ossrs/go-oryx-lib@v0.0.9/json/example_test.go:83:1","message":"ExampleJson_NewCommentReader refers to unknown identifier: Json","source":"\nfunc ExampleJson_NewCommentReader() {\n\t// The following is comment:"},{"package_id":"synthetic/logger_test [synthetic/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ossrs/go-oryx-lib@v0.0.9/logger/example_go17_test.go:31:1","message":"ExampleLogger_ContextGO17 refers to unknown field or method: Logger.ContextGO17","source":"\nfunc ExampleLogger_ContextGO17() {\n\tctx := context.Background()"},{"package_id":"synthetic/logger_test [synthetic/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ossrs/go-oryx-lib@v0.0.9/logger/example_go17_test.go:53:1","message":"ExampleLogger_MultipleContextGO17 refers to unknown field or method: Logger.MultipleContextGO17","source":"\nfunc ExampleLogger_MultipleContextGO17() {\n\tctx := context.Background()"},{"package_id":"synthetic/logger_test [synthetic/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ossrs/go-oryx-lib@v0.0.9/logger/example_go17_test.go:88:1","message":"ExampleLogger_AliasContext refers to unknown field or method: Logger.AliasContext","source":"\nfunc ExampleLogger_AliasContext() {\n\t// This is the source context."},{"package_id":"synthetic/logger_test [synthetic/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ossrs/go-oryx-lib@v0.0.9/logger/example_test.go:29:1","message":"ExampleLogger_ToConsole refers to unknown field or method: Logger.ToConsole","source":"\nfunc ExampleLogger_ToConsole() {\n\t// Simply log to console."},{"package_id":"synthetic/logger_test [synthetic/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ossrs/go-oryx-lib@v0.0.9/logger/example_test.go:49:1","message":"ExampleLogger_ToFile refers to unknown field or method: Logger.ToFile","source":"\nfunc ExampleLogger_ToFile() {\n\t// Open logger file and change the tank for logger."},{"package_id":"synthetic/logger_test [synthetic/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ossrs/go-oryx-lib@v0.0.9/logger/example_test.go:65:1","message":"ExampleLogger_SwitchFile refers to unknown field or method: Logger.SwitchFile","source":"\nfunc ExampleLogger_SwitchFile() {\n\t// Initialize logger with file."},{"package_id":"synthetic/logger_test [synthetic/logger.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ossrs/go-oryx-lib@v0.0.9/logger/example_test.go:97:1","message":"ExampleLogger_ConnectionBased refers to unknown field or method: Logger.ConnectionBased","source":"\nfunc ExampleLogger_ConnectionBased() {\n\tctx := cidContext(100)"},{"package_id":"synthetic/options_test [synthetic/options.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/ossrs/go-oryx-lib@v0.0.9/options/example_test.go:30:1","message":"ExampleOptions refers to unknown identifier: Options","source":"\nfunc ExampleOptions() {\n\tvar err error"}]}
{"created_at":"2023-06-22 17:47:09.868719 UTC","module_path":"github.com/df-mc/goleveldb","version":"v1.1.9","sort_version":"1,1,9~","commit_time":"2021-09-23 08:35:45 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2096:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif _, err := snap.Get(ptrKey, nil); err != nil {\n\t\t\t\t\tt.Fatalf(\"WRITER #%d snapshot.Get %q: %v\", i, ptrKey, err)\n\t\t\t\t}"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2099:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif value, err := snap.Get(key, nil); err != nil {\n\t\t\t\t\tt.Fatalf(\"WRITER #%d snapshot.Get %q: %v\", i, key, err)\n\t\t\t\t} else if string(value) != string(key)+iv {"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2101:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t} else if string(value) != string(key)+iv {\n\t\t\t\t\tt.Fatalf(\"WRITER #%d snapshot.Get %q got invalid value, want %q got %q\", i, key, string(key)+iv, value)\n\t\t\t\t}"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2111:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif k != n {\n\t\t\t\tt.Fatalf(\"#%d %d != %d\", i, k, n)\n\t\t\t}"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2132:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif _, err := snap.Get(ptrKey, nil); err != nil {\n\t\t\t\t\tt.Fatalf(\"READER #%d snapshot.Get %q: %v\", i, ptrKey, err)\n\t\t\t\t}"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2136:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif value, err := snap.Get(key, nil); err != nil {\n\t\t\t\t\tt.Fatalf(\"READER #%d snapshot.Get %q: %v\", i, key, err)\n\t\t\t\t} else if prevValue != \"\" \u0026\u0026 string(value) != string(key)+prevValue {"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2138:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t} else if prevValue != \"\" \u0026\u0026 string(value) != string(key)+prevValue {\n\t\t\t\t\tt.Fatalf(\"READER #%d snapshot.Get %q got invalid value, want %q got %q\", i, key, string(key)+prevValue, value)\n\t\t\t\t} else {"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2146:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif k \u003e 0 \u0026\u0026 k != n {\n\t\t\t\tt.Fatalf(\"#%d %d != %d\", i, k, n)\n\t\t\t}"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2223:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tatomic.StoreUint32(\u0026done, 1)\n\t\t\t\tt.Fatalf(\"WRITER #%d db.Write: %v\", i, err)\n\t\t\t}"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2250:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif k1checksum0 != k1checksum1 {\n\t\t\t\t\tt.Fatalf(\"READER0 #%d.%d W#%d invalid K1 checksum: %#x != %#x\", i, k, writei, k1checksum0, k1checksum0)\n\t\t\t\t}"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2255:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif k2checksum0 != k2checksum1 {\n\t\t\t\t\tt.Fatalf(\"READER0 #%d.%d W#%d invalid K2 checksum: %#x != %#x\", i, k, writei, k2checksum0, k2checksum1)\n\t\t\t\t}"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2259:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif writei != kwritei {\n\t\t\t\t\tt.Fatalf(\"READER0 #%d.%d W#%d invalid write iteration num: %d\", i, k, writei, kwritei)\n\t\t\t\t}"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2262:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif _, err := snap.Get(k2, nil); err != nil {\n\t\t\t\t\tt.Fatalf(\"READER0 #%d.%d W#%d snap.Get: %v\\nk1: %x\\n -\u003e k2: %x\", i, k, writei, err, k1, k2)\n\t\t\t\t}"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2266:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := iter.Error(); err != nil {\n\t\t\t\tt.Fatalf(\"READER0 #%d.%d W#%d snap.Iterator: %v\", i, k, writei, err)\n\t\t\t}"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2271:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif k \u003e 0 \u0026\u0026 k != n {\n\t\t\t\tt.Fatalf(\"READER0 #%d W#%d short read, got=%d want=%d\", i, writei, k, n)\n\t\t\t}"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2295:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := iter.Error(); err != nil {\n\t\t\t\tt.Fatalf(\"READER1 #%d.%d W#%d db.Iterator: %v\", i, k, writei, err)\n\t\t\t}"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2299:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif m := (writei+1)*n + n; k != m {\n\t\t\t\tt.Fatalf(\"READER1 #%d W#%d short read, got=%d want=%d\", i, writei, k, m)\n\t\t\t}"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2381:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"READER_GET #%d SEQ=%d K%d error: %v\", i, snap.elem.seq, k, err)\n\t\t\t\t}"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2385:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif !bytes.Equal([]byte(value), xvalue) {\n\t\t\t\t\tt.Fatalf(\"READER_GET #%d SEQ=%d K%d invalid value: want %q, got %q\", i, snap.elem.seq, k, value, xvalue)\n\t\t\t\t}"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2399:7","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\tif err := iter.Error(); err != nil {\n\t\t\t\t\t\tt.Fatalf(\"READER_ITER #%d K%d error: %v\", i, k, err)\n\t\t\t\t\t} else {"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2401:7","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\t} else {\n\t\t\t\t\t\tt.Fatalf(\"READER_ITER #%d K%d eoi\", i, k)\n\t\t\t\t\t}"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2407:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif !bytes.Equal([]byte(key), xkey) {\n\t\t\t\t\tt.Fatalf(\"READER_ITER #%d K%d invalid key: want %q, got %q\", i, k, key, xkey)\n\t\t\t\t}"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2412:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif !bytes.Equal([]byte(value), xvalue) {\n\t\t\t\t\tt.Fatalf(\"READER_ITER #%d K%d invalid value: want %q, got %q\", i, k, value, xvalue)\n\t\t\t\t}"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2498:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"READER_GET #%d SEQ=%d K%d error: %v\", i, snap.elem.seq, k, err)\n\t\t\t\t}"},{"package_id":"github.com/df-mc/goleveldb/leveldb [github.com/df-mc/goleveldb/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/db_test.go:2502:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif !bytes.Equal([]byte(value), xvalue) {\n\t\t\t\t\tt.Fatalf(\"READER_GET #%d SEQ=%d K%d invalid value: want %q, got %q\", i, snap.elem.seq, k, value, xvalue)\n\t\t\t\t}"},{"package_id":"github.com/df-mc/goleveldb/leveldb/cache [github.com/df-mc/goleveldb/leveldb/cache.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/cache/cache_test.go:103:7","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\tif v := h.Value().(*int32o); v != \u0026objects[key] {\n\t\t\t\t\t\tt.Fatalf(\"#%d invalid value: want=%p got=%p\", ns, \u0026objects[key], v)\n\t\t\t\t\t}"},{"package_id":"github.com/df-mc/goleveldb/leveldb/cache [github.com/df-mc/goleveldb/leveldb/cache.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/df-mc/goleveldb@v1.1.9/leveldb/cache/cache_test.go:106:7","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\tif objects[key] != 1 {\n\t\t\t\t\t\tt.Fatalf(\"#%d invalid object %d: %d\", ns, key, objects[key])\n\t\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:18:15.14575 UTC","module_path":"github.com/pingcap/goleveldb","version":"v0.0.0-20191226122134-f82aafb29989","sort_version":"0,0,0,~20191226122134-f82aafb29989","commit_time":"2019-12-26 12:21:34 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2096:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif _, err := snap.Get(ptrKey, nil); err != nil {\n\t\t\t\t\tt.Fatalf(\"WRITER #%d snapshot.Get %q: %v\", i, ptrKey, err)\n\t\t\t\t}"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2099:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif value, err := snap.Get(key, nil); err != nil {\n\t\t\t\t\tt.Fatalf(\"WRITER #%d snapshot.Get %q: %v\", i, key, err)\n\t\t\t\t} else if string(value) != string(key)+iv {"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2101:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t} else if string(value) != string(key)+iv {\n\t\t\t\t\tt.Fatalf(\"WRITER #%d snapshot.Get %q got invalid value, want %q got %q\", i, key, string(key)+iv, value)\n\t\t\t\t}"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2111:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif k != n {\n\t\t\t\tt.Fatalf(\"#%d %d != %d\", i, k, n)\n\t\t\t}"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2132:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif _, err := snap.Get(ptrKey, nil); err != nil {\n\t\t\t\t\tt.Fatalf(\"READER #%d snapshot.Get %q: %v\", i, ptrKey, err)\n\t\t\t\t}"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2136:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif value, err := snap.Get(key, nil); err != nil {\n\t\t\t\t\tt.Fatalf(\"READER #%d snapshot.Get %q: %v\", i, key, err)\n\t\t\t\t} else if prevValue != \"\" \u0026\u0026 string(value) != string(key)+prevValue {"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2138:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t} else if prevValue != \"\" \u0026\u0026 string(value) != string(key)+prevValue {\n\t\t\t\t\tt.Fatalf(\"READER #%d snapshot.Get %q got invalid value, want %q got %q\", i, key, string(key)+prevValue, value)\n\t\t\t\t} else {"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2146:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif k \u003e 0 \u0026\u0026 k != n {\n\t\t\t\tt.Fatalf(\"#%d %d != %d\", i, k, n)\n\t\t\t}"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2223:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tatomic.StoreUint32(\u0026done, 1)\n\t\t\t\tt.Fatalf(\"WRITER #%d db.Write: %v\", i, err)\n\t\t\t}"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2250:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif k1checksum0 != k1checksum1 {\n\t\t\t\t\tt.Fatalf(\"READER0 #%d.%d W#%d invalid K1 checksum: %#x != %#x\", i, k, k1checksum0, k1checksum0)\n\t\t\t\t}"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2255:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif k2checksum0 != k2checksum1 {\n\t\t\t\t\tt.Fatalf(\"READER0 #%d.%d W#%d invalid K2 checksum: %#x != %#x\", i, k, k2checksum0, k2checksum1)\n\t\t\t\t}"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2259:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif writei != kwritei {\n\t\t\t\t\tt.Fatalf(\"READER0 #%d.%d W#%d invalid write iteration num: %d\", i, k, writei, kwritei)\n\t\t\t\t}"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2262:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif _, err := snap.Get(k2, nil); err != nil {\n\t\t\t\t\tt.Fatalf(\"READER0 #%d.%d W#%d snap.Get: %v\\nk1: %x\\n -\u003e k2: %x\", i, k, writei, err, k1, k2)\n\t\t\t\t}"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2266:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := iter.Error(); err != nil {\n\t\t\t\tt.Fatalf(\"READER0 #%d.%d W#%d snap.Iterator: %v\", i, k, writei, err)\n\t\t\t}"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2271:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif k \u003e 0 \u0026\u0026 k != n {\n\t\t\t\tt.Fatalf(\"READER0 #%d W#%d short read, got=%d want=%d\", i, writei, k, n)\n\t\t\t}"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2295:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := iter.Error(); err != nil {\n\t\t\t\tt.Fatalf(\"READER1 #%d.%d W#%d db.Iterator: %v\", i, k, writei, err)\n\t\t\t}"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2299:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif m := (writei+1)*n + n; k != m {\n\t\t\t\tt.Fatalf(\"READER1 #%d W#%d short read, got=%d want=%d\", i, writei, k, m)\n\t\t\t}"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2381:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"READER_GET #%d SEQ=%d K%d error: %v\", i, snap.elem.seq, k, err)\n\t\t\t\t}"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2385:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif !bytes.Equal([]byte(value), xvalue) {\n\t\t\t\t\tt.Fatalf(\"READER_GET #%d SEQ=%d K%d invalid value: want %q, got %q\", i, snap.elem.seq, k, value, xvalue)\n\t\t\t\t}"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2399:7","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\tif err := iter.Error(); err != nil {\n\t\t\t\t\t\tt.Fatalf(\"READER_ITER #%d K%d error: %v\", i, k, err)\n\t\t\t\t\t} else {"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2401:7","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\t} else {\n\t\t\t\t\t\tt.Fatalf(\"READER_ITER #%d K%d eoi\", i, k)\n\t\t\t\t\t}"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2407:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif !bytes.Equal([]byte(key), xkey) {\n\t\t\t\t\tt.Fatalf(\"READER_ITER #%d K%d invalid key: want %q, got %q\", i, k, key, xkey)\n\t\t\t\t}"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2412:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif !bytes.Equal([]byte(value), xvalue) {\n\t\t\t\t\tt.Fatalf(\"READER_ITER #%d K%d invalid value: want %q, got %q\", i, k, value, xvalue)\n\t\t\t\t}"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2498:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"READER_GET #%d SEQ=%d K%d error: %v\", i, snap.elem.seq, k, err)\n\t\t\t\t}"},{"package_id":"synthetic/leveldb [synthetic/leveldb.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/db_test.go:2502:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif !bytes.Equal([]byte(value), xvalue) {\n\t\t\t\t\tt.Fatalf(\"READER_GET #%d SEQ=%d K%d invalid value: want %q, got %q\", i, snap.elem.seq, k, value, xvalue)\n\t\t\t\t}"},{"package_id":"synthetic/leveldb/cache [synthetic/leveldb/cache.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/cache/cache_test.go:103:7","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\tif v := h.Value().(*int32o); v != \u0026objects[key] {\n\t\t\t\t\t\tt.Fatalf(\"#%d invalid value: want=%p got=%p\", ns, \u0026objects[key], v)\n\t\t\t\t\t}"},{"package_id":"synthetic/leveldb/cache [synthetic/leveldb/cache.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/pingcap/goleveldb@v0.0.0-20191226122134-f82aafb29989/leveldb/cache/cache_test.go:106:7","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\t\tif objects[key] != 1 {\n\t\t\t\t\t\tt.Fatalf(\"#%d invalid object %d: %d\", ns, key, objects[key])\n\t\t\t\t\t}"}]}
{"created_at":"2023-06-22 17:34:27.57367 UTC","module_path":"github.com/google/martian/v3","version":"v3.3.2","sort_version":"3,3,2~","commit_time":"2022-03-14 19:34:56 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_test.go:1238:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Got error while accepting connection on destination listener: %v\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_test.go:1244:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := conn.Read(buf); err != nil {\n\t\t\tt.Fatalf(\"Error reading: %v\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_test.go:1255:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Got error while writting to connection on destination listener: %v\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_trafficshaping_test.go:106:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"http.NewRequest(): got %v, want no error\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_trafficshaping_test.go:110:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := req.WriteProxy(conn); err != nil {\n\t\t\tt.Fatalf(\"req.WriteProxy(): got %v, want no error\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_trafficshaping_test.go:115:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"http.ReadResponse(): got %v, want no error\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_trafficshaping_test.go:232:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"http.NewRequest(): got %v, want no error\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_trafficshaping_test.go:236:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := req.WriteProxy(conn); err != nil {\n\t\t\tt.Fatalf(\"req.WriteProxy(): got %v, want no error\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_trafficshaping_test.go:241:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"http.ReadResponse(): got %v, want no error\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_trafficshaping_test.go:351:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"http.NewRequest(): got %v, want no error\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_trafficshaping_test.go:355:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := req.WriteProxy(conn); err != nil {\n\t\t\tt.Fatalf(\"req.WriteProxy(): got %v, want no error\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_trafficshaping_test.go:360:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"http.ReadResponse(): got %v, want no error\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_trafficshaping_test.go:471:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"net.Dial(): got %v, want no error\", err)\n\t\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_trafficshaping_test.go:475:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"http.NewRequest(): got %v, want no error\", err)\n\t\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_trafficshaping_test.go:479:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := req.WriteProxy(conn); err != nil {\n\t\t\t\tt.Fatalf(\"req.WriteProxy(): got %v, want no error\", err)\n\t\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_trafficshaping_test.go:484:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"http.ReadResponse(): got %v, want no error\", err)\n\t\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_trafficshaping_test.go:608:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"net.Dial(): got %v, want no error\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_trafficshaping_test.go:613:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"http.NewRequest(): got %v, want no error\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_trafficshaping_test.go:617:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := req.WriteProxy(conn); err != nil {\n\t\t\tt.Fatalf(\"req.WriteProxy(): got %v, want no error\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_trafficshaping_test.go:622:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"http.ReadResponse(): got %v, want no error\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_trafficshaping_test.go:634:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"net.Dial(): got %v, want no error\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_trafficshaping_test.go:638:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"http.NewRequest(): got %v, want no error\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_trafficshaping_test.go:642:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := req.WriteProxy(conn); err != nil {\n\t\t\tt.Fatalf(\"req.WriteProxy(): got %v, want no error\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3 [github.com/google/martian/v3.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/proxy_trafficshaping_test.go:647:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"http.ReadResponse(): got %v, want no error\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3/trafficshape [github.com/google/martian/v3/trafficshape.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/trafficshape/listener_test.go:71:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"net.Dial(): got %v, want no error\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3/trafficshape [github.com/google/martian/v3/trafficshape.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/trafficshape/listener_test.go:152:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"net.Dial(): got %v, want no error\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3/trafficshape [github.com/google/martian/v3/trafficshape.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/trafficshape/listener_test.go:162:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"c.Read(): got %v, want no error\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3/trafficshape [github.com/google/martian/v3/trafficshape.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/trafficshape/listener_test.go:237:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"net.Dial(): got %v, want no error\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3/trafficshape [github.com/google/martian/v3/trafficshape.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/trafficshape/listener_test.go:328:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"net.Dial(): got %v, want no error\", err)\n\t\t}"},{"package_id":"github.com/google/martian/v3/trafficshape [github.com/google/martian/v3/trafficshape.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian/v3@v3.3.2/trafficshape/listener_test.go:338:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"c.Read(): got %v, want no error\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:18:32.414983 UTC","module_path":"github.com/google/martian","version":"v2.1.0+incompatible","sort_version":"2,1,0~","commit_time":"2018-09-28 21:15:21 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_test.go:1233:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Got error while accepting connection on destination listener: %v\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_test.go:1239:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := conn.Read(buf); err != nil {\n\t\t\tt.Fatalf(\"Error reading: %v\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_test.go:1250:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Got error while writting to connection on destination listener: %v\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_trafficshaping_test.go:106:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"http.NewRequest(): got %v, want no error\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_trafficshaping_test.go:110:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := req.WriteProxy(conn); err != nil {\n\t\t\tt.Fatalf(\"req.WriteProxy(): got %v, want no error\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_trafficshaping_test.go:115:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"http.ReadResponse(): got %v, want no error\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_trafficshaping_test.go:232:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"http.NewRequest(): got %v, want no error\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_trafficshaping_test.go:236:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := req.WriteProxy(conn); err != nil {\n\t\t\tt.Fatalf(\"req.WriteProxy(): got %v, want no error\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_trafficshaping_test.go:241:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"http.ReadResponse(): got %v, want no error\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_trafficshaping_test.go:351:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"http.NewRequest(): got %v, want no error\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_trafficshaping_test.go:355:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := req.WriteProxy(conn); err != nil {\n\t\t\tt.Fatalf(\"req.WriteProxy(): got %v, want no error\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_trafficshaping_test.go:360:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"http.ReadResponse(): got %v, want no error\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_trafficshaping_test.go:471:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"net.Dial(): got %v, want no error\", err)\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_trafficshaping_test.go:475:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"http.NewRequest(): got %v, want no error\", err)\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_trafficshaping_test.go:479:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := req.WriteProxy(conn); err != nil {\n\t\t\t\tt.Fatalf(\"req.WriteProxy(): got %v, want no error\", err)\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_trafficshaping_test.go:484:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"http.ReadResponse(): got %v, want no error\", err)\n\t\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_trafficshaping_test.go:608:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"net.Dial(): got %v, want no error\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_trafficshaping_test.go:613:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"http.NewRequest(): got %v, want no error\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_trafficshaping_test.go:617:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := req.WriteProxy(conn); err != nil {\n\t\t\tt.Fatalf(\"req.WriteProxy(): got %v, want no error\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_trafficshaping_test.go:622:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"http.ReadResponse(): got %v, want no error\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_trafficshaping_test.go:634:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"net.Dial(): got %v, want no error\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_trafficshaping_test.go:638:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"http.NewRequest(): got %v, want no error\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_trafficshaping_test.go:642:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := req.WriteProxy(conn); err != nil {\n\t\t\tt.Fatalf(\"req.WriteProxy(): got %v, want no error\", err)\n\t\t}"},{"package_id":"synthetic [synthetic.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/proxy_trafficshaping_test.go:647:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"http.ReadResponse(): got %v, want no error\", err)\n\t\t}"},{"package_id":"synthetic/trafficshape [synthetic/trafficshape.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/trafficshape/listener_test.go:71:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"net.Dial(): got %v, want no error\", err)\n\t\t}"},{"package_id":"synthetic/trafficshape [synthetic/trafficshape.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/trafficshape/listener_test.go:152:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"net.Dial(): got %v, want no error\", err)\n\t\t}"},{"package_id":"synthetic/trafficshape [synthetic/trafficshape.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/trafficshape/listener_test.go:162:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"c.Read(): got %v, want no error\", err)\n\t\t}"},{"package_id":"synthetic/trafficshape [synthetic/trafficshape.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/trafficshape/listener_test.go:237:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"net.Dial(): got %v, want no error\", err)\n\t\t}"},{"package_id":"synthetic/trafficshape [synthetic/trafficshape.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/trafficshape/listener_test.go:328:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"net.Dial(): got %v, want no error\", err)\n\t\t}"},{"package_id":"synthetic/trafficshape [synthetic/trafficshape.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/google/martian@v2.1.0+incompatible/trafficshape/listener_test.go:338:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"c.Read(): got %v, want no error\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:21:51.444167 UTC","module_path":"github.com/micro/micro/v3","version":"v3.19.0","sort_version":"3,a19,0~","commit_time":"2023-06-18 10:36:46 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/micro/micro/v3/service/network/transport/http [github.com/micro/micro/v3/service/network/transport/http.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/transport/http/http_transport_test.go:222:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tcase \u003c-time.After(time.Second):\n\t\t\t\tt.Fatal(\"deadline not executed\")\n\t\t\t}"},{"package_id":"github.com/micro/micro/v3/service/network/transport/http [github.com/micro/micro/v3/service/network/transport/http.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/transport/http/http_transport_test.go:379:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tcase \u003c-time.After(time.Second):\n\t\t\t\tt.Fatal(\"deadline not executed\")\n\t\t\t}"},{"package_id":"github.com/micro/micro/v3/service/network/transport/memory [github.com/micro/micro/v3/service/network/transport/memory.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/transport/memory/memory_test.go:52:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t}); err != nil {\n\t\t\tt.Fatalf(\"Unexpected error accepting %v\", err)\n\t\t}"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:222:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:222:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:222:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:222:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:222:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:226:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:226:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:226:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:226:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:254:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:254:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:254:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:254:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:254:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:258:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:258:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:258:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:258:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:296:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:296:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:296:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:296:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:296:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:300:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:300:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:300:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:300:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:353:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:353:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:353:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:353:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:357:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:357:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"github.com/micro/micro/v3/service/network/tunnel/mucp [github.com/micro/micro/v3/service/network/tunnel/mucp.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/micro/v3@v3.19.0/service/network/tunnel/mucp/mucp_test.go:357:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"}]}
{"created_at":"2023-06-22 17:16:13.225508 UTC","module_path":"golang.org/x/crypto","version":"v0.10.0","sort_version":"0,a10,0~","commit_time":"2023-06-12 19:51:08 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/benchmark_test.go:93:4","message":"call to (*B).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tb.Fatalf(\"Client: %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/benchmark_test.go:97:4","message":"call to (*B).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tb.Fatalf(\"Accept: %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/benchmark_test.go:102:5","message":"call to (*B).Fatalf from a non-test goroutine","source":"\t\t\tif _, err := io.ReadFull(ch, output); err != nil {\n\t\t\t\tb.Fatalf(\"ReadFull: %v\", err)\n\t\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/handshake_test.go:161:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := trC.writePacket(p); err != nil {\n\t\t\t\tt.Fatalf(\"sendPacket: %v\", err)\n\t\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/handshake_test.go:352:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := trC.readPacket(); err != nil {\n\t\t\tt.Fatalf(\"readPacket(client): %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:77:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif string(c) != magic {\n\t\t\tt.Fatalf(\"stdout read got %q, want %q (error %s)\", c, magic, err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:84:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif string(c) != magic {\n\t\t\tt.Fatalf(\"stderr read got %q, want %q (error %s)\", c, magic, err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:105:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Write: %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:109:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Write: %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:218:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif !ok {\n\t\t\tt.Fatalf(\"Accept\")\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:221:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif ch.ChannelType() != \"ch\" || string(ch.ExtraData()) != \"extra\" {\n\t\t\tt.Fatalf(\"unexpected channel: %q, %q\", ch.ChannelType(), ch.ExtraData())\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:307:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"send: %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:319:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"send: %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:324:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"read packet: %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:328:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"decode failed: %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:334:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif msg.PeersID != 2 {\n\t\t\t\tt.Fatalf(\"received response to wrong message: %v\", msg)\n\t\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:337:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tdefault:\n\t\t\tt.Fatalf(\"unexpected channel message: %v\", msg)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:346:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"read packet: %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:349:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif packet[0] != msgGlobalRequest {\n\t\t\tt.Fatalf(\"expected global request\")\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:356:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"failed to send failure msg: %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:393:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"read packet: %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:396:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif packet[0] != msgChannelOpen {\n\t\t\tt.Fatalf(\"expected chan open\")\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:401:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err := Unmarshal(packet, \u0026openMsg); err != nil {\n\t\t\tt.Fatalf(\"unmarshal: %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:412:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"send: %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:420:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"send: %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:431:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"send: %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:437:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"read packet: %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:440:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif packet[0] != msgChannelClose {\n\t\t\tt.Fatalf(\"expected channel close\")\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:446:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"read packet: %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:449:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif packet[0] != msgChannelFailure {\n\t\t\tt.Fatalf(\"expected channel close\")\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:457:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"read packet: %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:460:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif packet[0] != msgGlobalRequest {\n\t\t\tt.Fatalf(\"expected global request\")\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/mux_test.go:467:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"failed to send failure msg: %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/session_test.go:653:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"server handshake: %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh [golang.org/x/crypto/ssh.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/session_test.go:665:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"client handshake: %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh/agent [golang.org/x/crypto/ssh/agent.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/agent/client_test.go:369:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Server: %v\", err)\n\t\t}"},{"package_id":"golang.org/x/crypto/ssh/agent [golang.org/x/crypto/ssh/agent.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/golang.org/x/crypto@v0.10.0/ssh/agent/server_test.go:57:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Server: %v\", err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:35:10.172807 UTC","module_path":"github.com/btccom/go-micro/v2","version":"v2.9.3","sort_version":"2,9,3~","commit_time":"2021-03-12 08:03:56 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/btccom/go-micro/v2 [github.com/btccom/go-micro/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/service_test.go:85:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := testRequest(ctx, service.Client(), \"test.service\"); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/btccom/go-micro/v2/transport [github.com/btccom/go-micro/v2/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/transport/http_transport_test.go:205:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tcase \u003c-time.After(time.Second):\n\t\t\t\tt.Fatal(\"deadline not executed\")\n\t\t\t}"},{"package_id":"github.com/btccom/go-micro/v2/transport/memory [github.com/btccom/go-micro/v2/transport/memory.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/transport/memory/memory_test.go:38:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t}); err != nil {\n\t\t\tt.Fatalf(\"Unexpected error accepting %v\", err)\n\t\t}"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:344:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:344:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"github.com/btccom/go-micro/v2/tunnel [github.com/btccom/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:344:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"github.com/btccom/go-micro/v2/util/mdns [github.com/btccom/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/util/mdns/server_test.go:31:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Name != \"hostname._foobar._tcp.local.\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/btccom/go-micro/v2/util/mdns [github.com/btccom/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/util/mdns/server_test.go:34:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Port != 80 {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/btccom/go-micro/v2/util/mdns [github.com/btccom/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/util/mdns/server_test.go:37:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Info != \"Local web server\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/btccom/go-micro/v2/util/mdns [github.com/btccom/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/btccom/go-micro/v2@v2.9.3/util/mdns/server_test.go:42:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tcase \u003c-time.After(80 * time.Millisecond):\n\t\t\tt.Fatalf(\"timeout\")\n\t\t}"}]}
{"created_at":"2023-06-22 17:18:40.641905 UTC","module_path":"github.com/micro/go-micro/v2","version":"v2.9.1","sort_version":"2,9,1~","commit_time":"2020-07-03 10:30:59 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/micro/go-micro/v2 [github.com/micro/go-micro/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/service_test.go:85:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := testRequest(ctx, service.Client(), \"test.service\"); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/micro/go-micro/v2/transport [github.com/micro/go-micro/v2/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/transport/http_transport_test.go:205:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tcase \u003c-time.After(time.Second):\n\t\t\t\tt.Fatal(\"deadline not executed\")\n\t\t\t}"},{"package_id":"github.com/micro/go-micro/v2/transport/memory [github.com/micro/go-micro/v2/transport/memory.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/transport/memory/memory_test.go:38:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t}); err != nil {\n\t\t\tt.Fatalf(\"Unexpected error accepting %v\", err)\n\t\t}"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:344:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:344:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"github.com/micro/go-micro/v2/tunnel [github.com/micro/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/tunnel/tunnel_test.go:344:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"github.com/micro/go-micro/v2/util/mdns [github.com/micro/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/util/mdns/server_test.go:31:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Name != \"hostname._foobar._tcp.local.\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/micro/go-micro/v2/util/mdns [github.com/micro/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/util/mdns/server_test.go:34:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Port != 80 {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/micro/go-micro/v2/util/mdns [github.com/micro/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/util/mdns/server_test.go:37:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Info != \"Local web server\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/micro/go-micro/v2/util/mdns [github.com/micro/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/micro/go-micro/v2@v2.9.1/util/mdns/server_test.go:42:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tcase \u003c-time.After(80 * time.Millisecond):\n\t\t\tt.Fatalf(\"timeout\")\n\t\t}"}]}
{"created_at":"2023-06-22 17:37:26.155534 UTC","module_path":"github.com/dreamlu/go-micro/v2","version":"v2.5.3","sort_version":"2,5,3~","commit_time":"2020-10-19 06:58:40 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/dreamlu/go-micro/v2 [github.com/dreamlu/go-micro/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/service_test.go:85:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := testRequest(ctx, service.Client(), \"test.service\"); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/dreamlu/go-micro/v2/transport [github.com/dreamlu/go-micro/v2/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/transport/http_transport_test.go:205:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tcase \u003c-time.After(time.Second):\n\t\t\t\tt.Fatal(\"deadline not executed\")\n\t\t\t}"},{"package_id":"github.com/dreamlu/go-micro/v2/transport/memory [github.com/dreamlu/go-micro/v2/transport/memory.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/transport/memory/memory_test.go:38:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t}); err != nil {\n\t\t\tt.Fatalf(\"Unexpected error accepting %v\", err)\n\t\t}"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:344:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:344:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/tunnel [github.com/dreamlu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/tunnel/tunnel_test.go:344:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"github.com/dreamlu/go-micro/v2/util/mdns [github.com/dreamlu/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/util/mdns/server_test.go:31:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Name != \"hostname._foobar._tcp.local.\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/dreamlu/go-micro/v2/util/mdns [github.com/dreamlu/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/util/mdns/server_test.go:34:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Port != 80 {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/dreamlu/go-micro/v2/util/mdns [github.com/dreamlu/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/util/mdns/server_test.go:37:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Info != \"Local web server\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/dreamlu/go-micro/v2/util/mdns [github.com/dreamlu/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/dreamlu/go-micro/v2@v2.5.3/util/mdns/server_test.go:42:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tcase \u003c-time.After(80 * time.Millisecond):\n\t\t\tt.Fatalf(\"timeout\")\n\t\t}"}]}
{"created_at":"2023-06-22 17:34:08.351394 UTC","module_path":"gitee.com/liuxuezhan/go-micro-v1.18.0","version":"v1.0.0","sort_version":"1,0,0~","commit_time":"2021-08-18 08:41:34 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0 [gitee.com/liuxuezhan/go-micro-v1.18.0.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/service_test.go:90:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := testRequest(ctx, service.Client(), \"test.service\"); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/service/grpc [gitee.com/liuxuezhan/go-micro-v1.18.0/service/grpc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/service/grpc/grpc_test.go:49:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := service.Run(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/service/grpc [gitee.com/liuxuezhan/go-micro-v1.18.0/service/grpc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/service/grpc/grpc_test.go:156:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := service.Run(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/transport [gitee.com/liuxuezhan/go-micro-v1.18.0/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/transport/http_transport_test.go:205:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tcase \u003c-time.After(time.Second):\n\t\t\t\tt.Fatal(\"deadline not executed\")\n\t\t\t}"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/transport/memory [gitee.com/liuxuezhan/go-micro-v1.18.0/transport/memory.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/transport/memory/memory_test.go:35:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t}); err != nil {\n\t\t\tt.Fatalf(\"Unexpected error accepting %v\", err)\n\t\t}"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:208:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:208:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:208:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:208:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:208:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:212:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:212:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:212:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:212:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:240:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:240:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:240:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:240:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:240:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:244:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:244:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:244:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:244:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:282:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:282:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:282:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:282:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:282:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:286:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:286:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:286:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:286:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:336:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:336:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:336:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:336:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel [gitee.com/liuxuezhan/go-micro-v1.18.0/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/web [gitee.com/liuxuezhan/go-micro-v1.18.0/web.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/web/service_test.go:62:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := service.Run(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"gitee.com/liuxuezhan/go-micro-v1.18.0/web [gitee.com/liuxuezhan/go-micro-v1.18.0/web.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/gitee.com/liuxuezhan/go-micro-v1.18.0@v1.0.0/web/service_test.go:226:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := service.Run(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"}]}
{"created_at":"2023-06-22 17:36:29.651257 UTC","module_path":"github.com/annwntech/go-micro/v2","version":"v2.9.5","sort_version":"2,9,5~","commit_time":"2021-05-02 14:35:40 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/annwntech/go-micro/v2 [github.com/annwntech/go-micro/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/service_test.go:85:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := testRequest(ctx, service.Client(), \"test.service\"); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/annwntech/go-micro/v2/transport [github.com/annwntech/go-micro/v2/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/transport/http_transport_test.go:205:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tcase \u003c-time.After(time.Second):\n\t\t\t\tt.Fatal(\"deadline not executed\")\n\t\t\t}"},{"package_id":"github.com/annwntech/go-micro/v2/transport/memory [github.com/annwntech/go-micro/v2/transport/memory.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/transport/memory/memory_test.go:38:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t}); err != nil {\n\t\t\tt.Fatalf(\"Unexpected error accepting %v\", err)\n\t\t}"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:344:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:344:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"github.com/annwntech/go-micro/v2/tunnel [github.com/annwntech/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/tunnel/tunnel_test.go:344:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"github.com/annwntech/go-micro/v2/util/mdns [github.com/annwntech/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/util/mdns/server_test.go:31:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Name != \"hostname._foobar._tcp.local.\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/annwntech/go-micro/v2/util/mdns [github.com/annwntech/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/util/mdns/server_test.go:34:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Port != 80 {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/annwntech/go-micro/v2/util/mdns [github.com/annwntech/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/util/mdns/server_test.go:37:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Info != \"Local web server\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/annwntech/go-micro/v2/util/mdns [github.com/annwntech/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/annwntech/go-micro/v2@v2.9.5/util/mdns/server_test.go:42:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tcase \u003c-time.After(80 * time.Millisecond):\n\t\t\tt.Fatalf(\"timeout\")\n\t\t}"}]}
{"created_at":"2023-06-22 17:35:46.436066 UTC","module_path":"github.com/itzmanish/go-micro/v2","version":"v2.10.1","sort_version":"2,a10,1~","commit_time":"2021-09-04 05:32:04 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/itzmanish/go-micro/v2 [github.com/itzmanish/go-micro/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/service_test.go:85:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := testRequest(ctx, service.Client(), \"test.service\"); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/itzmanish/go-micro/v2/transport [github.com/itzmanish/go-micro/v2/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/transport/http_transport_test.go:205:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tcase \u003c-time.After(time.Second):\n\t\t\t\tt.Fatal(\"deadline not executed\")\n\t\t\t}"},{"package_id":"github.com/itzmanish/go-micro/v2/transport/memory [github.com/itzmanish/go-micro/v2/transport/memory.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/transport/memory/memory_test.go:38:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t}); err != nil {\n\t\t\tt.Fatalf(\"Unexpected error accepting %v\", err)\n\t\t}"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:344:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:344:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/tunnel [github.com/itzmanish/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/tunnel/tunnel_test.go:344:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"github.com/itzmanish/go-micro/v2/util/mdns [github.com/itzmanish/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/util/mdns/server_test.go:31:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Name != \"hostname._foobar._tcp.local.\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/itzmanish/go-micro/v2/util/mdns [github.com/itzmanish/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/util/mdns/server_test.go:34:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Port != 80 {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/itzmanish/go-micro/v2/util/mdns [github.com/itzmanish/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/util/mdns/server_test.go:37:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Info != \"Local web server\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/itzmanish/go-micro/v2/util/mdns [github.com/itzmanish/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/itzmanish/go-micro/v2@v2.10.1/util/mdns/server_test.go:42:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tcase \u003c-time.After(80 * time.Millisecond):\n\t\t\tt.Fatalf(\"timeout\")\n\t\t}"}]}
{"created_at":"2023-06-22 17:36:48.180885 UTC","module_path":"github.com/Augustu/go-micro/v2","version":"v2.9.3","sort_version":"2,9,3~","commit_time":"2021-03-02 14:41:52 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"github.com/Augustu/go-micro/v2 [github.com/Augustu/go-micro/v2.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/service_test.go:85:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err := testRequest(ctx, service.Client(), \"test.service\"); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"github.com/Augustu/go-micro/v2/transport [github.com/Augustu/go-micro/v2/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/transport/http_transport_test.go:205:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tcase \u003c-time.After(time.Second):\n\t\t\t\tt.Fatal(\"deadline not executed\")\n\t\t\t}"},{"package_id":"github.com/Augustu/go-micro/v2/transport/memory [github.com/Augustu/go-micro/v2/transport/memory.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/transport/memory/memory_test.go:38:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t}); err != nil {\n\t\t\tt.Fatalf(\"Unexpected error accepting %v\", err)\n\t\t}"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:209:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:213:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:241:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:245:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tun, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:283:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the listener\n\tgo testAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:287:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t// start the client\n\tgo testSend(t, tunA, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:340:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel listener\n\tgo testBrokenTunAccept(t, tunB, wait, \u0026wg)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:344:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:344:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"github.com/Augustu/go-micro/v2/tunnel [github.com/Augustu/go-micro/v2/tunnel.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/tunnel/tunnel_test.go:344:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\t// start tunnel sender\n\tgo testBrokenTunSend(t, tunA, wait, \u0026wg, ReconnectTime*5)\n"},{"package_id":"github.com/Augustu/go-micro/v2/util/mdns [github.com/Augustu/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/util/mdns/server_test.go:31:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Name != \"hostname._foobar._tcp.local.\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/Augustu/go-micro/v2/util/mdns [github.com/Augustu/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/util/mdns/server_test.go:34:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Port != 80 {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/Augustu/go-micro/v2/util/mdns [github.com/Augustu/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/util/mdns/server_test.go:37:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif e.Info != \"Local web server\" {\n\t\t\t\tt.Fatalf(\"bad: %v\", e)\n\t\t\t}"},{"package_id":"github.com/Augustu/go-micro/v2/util/mdns [github.com/Augustu/go-micro/v2/util/mdns.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/Augustu/go-micro/v2@v2.9.3/util/mdns/server_test.go:42:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tcase \u003c-time.After(80 * time.Millisecond):\n\t\t\tt.Fatalf(\"timeout\")\n\t\t}"}]}
{"created_at":"2023-06-22 17:18:40.554981 UTC","module_path":"go.etcd.io/etcd","version":"v3.3.27+incompatible","sort_version":"3,3,a27~","commit_time":"2021-10-15 12:32:31 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/auth [synthetic/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/auth/store_test.go:653:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif _, err := as.Authenticate(ctx, user, \"123\"); err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic/auth [synthetic/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/auth/store_test.go:656:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif _, err := as.AuthInfoFromCtx(ctx); err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic/clientv3/concurrency_test [synthetic/clientv3/concurrency.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/concurrency/election_test.go:72:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif !ok {\n\t\t\t\t\tt.Fatal(\"Observe() channel closed prematurely\")\n\t\t\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/kv_test.go:446:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil \u0026\u0026 err != context.Canceled \u0026\u0026 err != grpc.ErrClientConnClosing {\n\t\t\tt.Fatalf(\"expected %v or %v, got %v\", context.Canceled, grpc.ErrClientConnClosing, err)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/kv_test.go:478:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != context.Canceled \u0026\u0026 err != grpc.ErrClientConnClosing {\n\t\t\tt.Fatalf(\"expected %v or %v, got %v\", context.Canceled, grpc.ErrClientConnClosing, err)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/kv_test.go:692:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif gerr != nil {\n\t\t\tt.Fatal(gerr)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/kv_test.go:704:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif !reflect.DeepEqual(gresp.Kvs, wkvs) {\n\t\t\tt.Fatalf(\"bad get: got %v, want %v\", gresp.Kvs, wkvs)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/kv_test.go:741:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif gerr != nil {\n\t\t\tt.Fatal(gerr)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/kv_test.go:744:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif len(gresp.Kvs) != 0 {\n\t\t\tt.Fatalf(\"bad get kvs: got %+v, want empty\", gresp.Kvs)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/lease_test.go:298:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t// context.Canceled if grpc-go balancer calls 'Get' with an inflight client.Close.\n\t\t\tt.Fatalf(\"expected %v or %v, got %v\", grpc.ErrClientConnClosing, context.Canceled, err)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/lease_test.go:371:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := cli.Grant(context.TODO(), 5); err != context.Canceled \u0026\u0026 err != grpc.ErrClientConnClosing {\n\t\t\tt.Fatalf(\"expected %v or %v, got %v\", err != context.Canceled, grpc.ErrClientConnClosing, err)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/lease_test.go:403:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := cli.Revoke(context.TODO(), leaseID); err != context.Canceled \u0026\u0026 err != grpc.ErrClientConnClosing {\n\t\t\tt.Fatalf(\"expected %v or %v, got %v\", err != context.Canceled, grpc.ErrClientConnClosing, err)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/lease_test.go:765:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t}\n\t\t\t\tt.Fatal(err)\n\t\t\t}()"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:392:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif perr != nil {\n\t\t\t\tt.Fatal(perr)\n\t\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:1002:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\tdefer wg.Wait()\n\tgo getRandom(lkv1)\n\tgo getRandom(lkv2)"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:1003:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\tgo getRandom(lkv1)\n\tgo getRandom(lkv2)\n"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:1401:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:1404:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif string(resp.Kvs[0].Value) != \"v\" {\n\t\t\tt.Fatalf(`expected \"v\" value, got %+v`, resp)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:1613:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\tfor i := 0; i \u003c numGetters; i++ {\n\t\tgo g()\n\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:1613:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tfor i := 0; i \u003c numGetters; i++ {\n\t\tgo g()\n\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:1616:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\tfor i := 0; i \u003c numPutters; i++ {\n\t\tgo f()\n\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/metrics_test.go:57:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Error: %v occurred while listening on addr: %v\", err, addr)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/metrics_test.go:62:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil \u0026\u0026 !transport.IsClosedConnError(err) {\n\t\t\tt.Fatalf(\"Err serving http requests: %v\", err)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/mirror_test.go:93:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif _, err := cli.Put(ctx, key, \"test\"); err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/txn_test.go:70:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err == nil {\n\t\t\tt.Fatalf(\"expected error, got response %v\", resp)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/txn_test.go:79:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tcase \u003c-time.After(5 * time.Second):\n\t\t\tt.Fatalf(\"timed out waiting for txn fail\")\n\t\tcase \u003c-txnc:"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/txn_test.go:85:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif gerr != nil {\n\t\t\tt.Fatal(gerr)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/txn_test.go:88:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif len(gresp.Kvs) != 0 {\n\t\t\tt.Fatalf(\"expected no keys, got %v\", gresp.Kvs)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/txn_test.go:126:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"expected response, got error %v\", err)\n\t\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/watch_test.go:1081:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif ok {\n\t\t\t\tt.Fatalf(\"expected closed watch after cancel(), got resp=%+v err=%v\", wr, wr.Err())\n\t\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/clientv3/integration/watch_test.go:1084:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tcase \u003c-time.After(5 * time.Second):\n\t\t\tt.Fatal(\"timed out waiting for closed channel\")\n\t\t}"},{"package_id":"synthetic/contrib/raftexample [synthetic/contrib/raftexample.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/contrib/raftexample/raftexample_test.go:115:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tcase err := \u003c-eC:\n\t\t\t\t\tt.Fatalf(\"eC message (%v)\", err)\n\t\t\t\t}"},{"package_id":"synthetic/etcdserver [synthetic/etcdserver.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/etcdserver/server_test.go:929:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif len(gaction) != 2 {\n\t\t\tt.Fatalf(\"len(action) = %d, want 2\", len(gaction))\n\t\t}"},{"package_id":"synthetic/etcdserver [synthetic/etcdserver.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/etcdserver/server_test.go:941:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif len(gaction) != 2 {\n\t\t\tt.Fatalf(\"len(action) = %d, want 2\", len(gaction))\n\t\t}"},{"package_id":"synthetic/etcdserver [synthetic/etcdserver.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/etcdserver/server_test.go:1075:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tt.Logf(\"gaction: %v\", gaction)\n\t\t\tt.Fatalf(\"len(action) = %d, want %d\", len(gaction), wcnt)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v2_http_kv_test.go:894:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"watch err = %v, want nil\", err)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v2_http_kv_test.go:982:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"watch err = %v, want nil\", err)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3_alarm_test.go:157:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif _, err := clus.Client(0).Put(context.TODO(), \"k\", \"v\"); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3_double_barrier_test.go:48:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := bb.Enter(); err != nil {\n\t\t\t\tt.Fatalf(\"could not enter on barrier (%v)\", err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3_double_barrier_test.go:52:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := bb.Leave(); err != nil {\n\t\t\t\tt.Fatalf(\"could not leave on barrier (%v)\", err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3_double_barrier_test.go:118:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif berr := b.Enter(); berr != nil {\n\t\t\tt.Fatalf(\"could not enter on barrier (%v)\", berr)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3_double_barrier_test.go:127:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif berr := b.Enter(); berr != nil {\n\t\t\t\tt.Fatalf(\"could not enter on barrier (%v)\", berr)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3_election_test.go:56:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif !ok {\n\t\t\t\t\tt.Fatalf(\"could not observe election; channel closed\")\n\t\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3_election_test.go:79:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := e.Campaign(context.TODO(), ev); err != nil {\n\t\t\t\tt.Fatalf(\"failed volunteer (%v)\", err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3_election_test.go:90:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := e.Resign(context.TODO()); err != nil {\n\t\t\t\tt.Fatalf(\"failed resign (%v)\", err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3_election_test.go:147:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif eer := ee.Campaign(context.TODO(), \"bar\"); eer != nil {\n\t\t\tt.Fatal(eer)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3_grpc_test.go:464:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3_lease_test.go:575:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err == nil {\n\t\t\tt.Fatalf(\"got response %+v, expected error\", resp)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3_queue_test.go:45:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := q.Enqueue(fmt.Sprintf(\"%d\", i)); err != nil {\n\t\t\t\tt.Fatalf(\"error enqueuing (%v)\", err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3_stm_test.go:173:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif _, err := etcdc.Txn(context.TODO()).Then(ops...).Commit(); err != nil {\n\t\t\t\tt.Fatalf(\"couldn't put keys (%v)\", err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3_stm_test.go:223:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif _, err := etcdc.Delete(context.TODO(), \"foo\"); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3_watch_test.go:253:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif _, err := kvc.Put(context.TODO(), req); err != nil {\n\t\t\t\t\tt.Fatalf(\"#%d: couldn't put key (%v)\", i, err)\n\t\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3_watch_test.go:487:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif _, err := kvc.Put(context.TODO(), req); err != nil {\n\t\t\t\tt.Fatalf(\"couldn't put key (%v)\", err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3_watch_test.go:1095:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif rerr != nil {\n\t\t\tt.Fatal(rerr)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3_watch_test.go:1188:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif rerr != nil {\n\t\t\t\tt.Fatal(rerr)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:57:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif lerr2 != nil {\n\t\t\tt.Fatal(lerr2)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:60:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif l1.Header.Revision \u003e= l2.Header.Revision {\n\t\t\tt.Fatalf(\"expected l1 revision \u003c l2 revision, got %d \u003e= %d\", l1.Header.Revision, l2.Header.Revision)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:106:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:111:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif rerr != nil {\n\t\t\t\tt.Fatal(rerr)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:117:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif respV \u003c i {\n\t\t\t\tt.Fatalf(`got observe value %q, expected \u003e= \"%d\"`, string(resp.Kv.Value), i)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:145:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err2 != nil {\n\t\t\tt.Fatal(err2)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:149:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif cerr2 != nil {\n\t\t\tt.Fatal(cerr2)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:155:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif _, err := lc.Proclaim(context.TODO(), req); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3lock_grpc_test.go:53:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif lerr2 != nil {\n\t\t\tt.Fatal(lerr2)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/integration/v3lock_grpc_test.go:56:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif l1.Header.Revision \u003e= l2.Header.Revision {\n\t\t\tt.Fatalf(\"expected l1 revision \u003c l2 revision, got %d \u003e= %d\", l1.Header.Revision, l2.Header.Revision)\n\t\t}"},{"package_id":"synthetic/lease [synthetic/lease.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/lease/lessor_test.go:381:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := le.Renew(l.ID); err != ErrLeaseNotFound {\n\t\t\tt.Fatalf(\"unexpected renew\")\n\t\t}"},{"package_id":"synthetic/lease [synthetic/lease.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/lease/lessor_test.go:433:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := le.Renew(l.ID); err != ErrNotPrimary {\n\t\t\tt.Fatalf(\"unexpected renew: %v\", err)\n\t\t}"},{"package_id":"synthetic/mvcc [synthetic/mvcc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/mvcc/kvstore_test.go:541:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic/mvcc [synthetic/mvcc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/mvcc/kvstore_test.go:561:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif r.hash != revHash[r.compactRev] {\n\t\t\t\tt.Fatalf(\"Hashes differ (current %v) != (saved %v)\", r.hash, revHash[r.compactRev])\n\t\t\t}"},{"package_id":"synthetic/mvcc [synthetic/mvcc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/mvcc/kvstore_test.go:572:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"synthetic/pkg/expect [synthetic/pkg/expect.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/pkg/expect/expect_test.go:112:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif cerr := ep.Close(); cerr == nil || cerr.Error() != werr {\n\t\t\tt.Fatalf(\"got error %v, wanted error %s\", cerr, werr)\n\t\t}"},{"package_id":"synthetic/pkg/fileutil [synthetic/pkg/fileutil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/pkg/fileutil/lock_test.go:64:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif blerr != nil {\n\t\t\tt.Fatal(blerr)\n\t\t}"},{"package_id":"synthetic/pkg/fileutil [synthetic/pkg/fileutil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/pkg/fileutil/lock_test.go:68:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif blerr = bl.Close(); blerr != nil {\n\t\t\tt.Fatal(blerr)\n\t\t}"},{"package_id":"synthetic/pkg/fileutil [synthetic/pkg/fileutil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/pkg/fileutil/purge_test.go:58:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif ferr != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"synthetic/pkg/transport [synthetic/pkg/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/pkg/transport/timeout_listener_test.go:61:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t}\n\tgo blocker()\n"},{"package_id":"synthetic/pkg/transport [synthetic/pkg/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/pkg/transport/timeout_listener_test.go:89:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\n\tgo blocker()\n"},{"package_id":"synthetic/pkg/transport [synthetic/pkg/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/pkg/transport/transport_test.go:61:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"unexpected NewTransport error: %v\", err)\n\t\t}"},{"package_id":"synthetic/pkg/transport [synthetic/pkg/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/pkg/transport/transport_test.go:66:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif gerr == nil || !strings.Contains(gerr.Error(), \"tls: handshake failure\") {\n\t\t\tt.Fatal(\"expected client TLS handshake error\")\n\t\t}"},{"package_id":"synthetic/tests/e2e [synthetic/tests/e2e.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/go.etcd.io/etcd@v3.3.27+incompatible/tests/e2e/etcd_release_upgrade_test.go:168:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := epc.procs[i].Restart(); err != nil {\n\t\t\t\tt.Fatalf(\"error restarting etcd process (%v)\", err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:17:11.301169 UTC","module_path":"github.com/coreos/etcd","version":"v3.3.27+incompatible","sort_version":"3,3,a27~","commit_time":"2021-10-15 12:32:31 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/auth [synthetic/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/auth/store_test.go:653:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif _, err := as.Authenticate(ctx, user, \"123\"); err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic/auth [synthetic/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/auth/store_test.go:656:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif _, err := as.AuthInfoFromCtx(ctx); err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic/clientv3/concurrency_test [synthetic/clientv3/concurrency.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/concurrency/election_test.go:72:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif !ok {\n\t\t\t\t\tt.Fatal(\"Observe() channel closed prematurely\")\n\t\t\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/kv_test.go:446:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil \u0026\u0026 err != context.Canceled \u0026\u0026 err != grpc.ErrClientConnClosing {\n\t\t\tt.Fatalf(\"expected %v or %v, got %v\", context.Canceled, grpc.ErrClientConnClosing, err)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/kv_test.go:478:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != context.Canceled \u0026\u0026 err != grpc.ErrClientConnClosing {\n\t\t\tt.Fatalf(\"expected %v or %v, got %v\", context.Canceled, grpc.ErrClientConnClosing, err)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/kv_test.go:692:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif gerr != nil {\n\t\t\tt.Fatal(gerr)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/kv_test.go:704:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif !reflect.DeepEqual(gresp.Kvs, wkvs) {\n\t\t\tt.Fatalf(\"bad get: got %v, want %v\", gresp.Kvs, wkvs)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/kv_test.go:741:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif gerr != nil {\n\t\t\tt.Fatal(gerr)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/kv_test.go:744:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif len(gresp.Kvs) != 0 {\n\t\t\tt.Fatalf(\"bad get kvs: got %+v, want empty\", gresp.Kvs)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/lease_test.go:298:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t// context.Canceled if grpc-go balancer calls 'Get' with an inflight client.Close.\n\t\t\tt.Fatalf(\"expected %v or %v, got %v\", grpc.ErrClientConnClosing, context.Canceled, err)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/lease_test.go:371:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := cli.Grant(context.TODO(), 5); err != context.Canceled \u0026\u0026 err != grpc.ErrClientConnClosing {\n\t\t\tt.Fatalf(\"expected %v or %v, got %v\", err != context.Canceled, grpc.ErrClientConnClosing, err)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/lease_test.go:403:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := cli.Revoke(context.TODO(), leaseID); err != context.Canceled \u0026\u0026 err != grpc.ErrClientConnClosing {\n\t\t\tt.Fatalf(\"expected %v or %v, got %v\", err != context.Canceled, grpc.ErrClientConnClosing, err)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/lease_test.go:765:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t}\n\t\t\t\tt.Fatal(err)\n\t\t\t}()"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:392:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif perr != nil {\n\t\t\t\tt.Fatal(perr)\n\t\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:1002:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\tdefer wg.Wait()\n\tgo getRandom(lkv1)\n\tgo getRandom(lkv2)"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:1003:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\tgo getRandom(lkv1)\n\tgo getRandom(lkv2)\n"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:1401:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:1404:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif string(resp.Kvs[0].Value) != \"v\" {\n\t\t\tt.Fatalf(`expected \"v\" value, got %+v`, resp)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:1613:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\tfor i := 0; i \u003c numGetters; i++ {\n\t\tgo g()\n\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:1613:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tfor i := 0; i \u003c numGetters; i++ {\n\t\tgo g()\n\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:1616:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\tfor i := 0; i \u003c numPutters; i++ {\n\t\tgo f()\n\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/metrics_test.go:57:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Error: %v occurred while listening on addr: %v\", err, addr)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/metrics_test.go:62:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil \u0026\u0026 !transport.IsClosedConnError(err) {\n\t\t\tt.Fatalf(\"Err serving http requests: %v\", err)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/mirror_test.go:93:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif _, err := cli.Put(ctx, key, \"test\"); err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/txn_test.go:70:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err == nil {\n\t\t\tt.Fatalf(\"expected error, got response %v\", resp)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/txn_test.go:79:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tcase \u003c-time.After(5 * time.Second):\n\t\t\tt.Fatalf(\"timed out waiting for txn fail\")\n\t\tcase \u003c-txnc:"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/txn_test.go:85:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif gerr != nil {\n\t\t\tt.Fatal(gerr)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/txn_test.go:88:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif len(gresp.Kvs) != 0 {\n\t\t\tt.Fatalf(\"expected no keys, got %v\", gresp.Kvs)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/txn_test.go:126:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"expected response, got error %v\", err)\n\t\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/watch_test.go:1081:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif ok {\n\t\t\t\tt.Fatalf(\"expected closed watch after cancel(), got resp=%+v err=%v\", wr, wr.Err())\n\t\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/clientv3/integration/watch_test.go:1084:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tcase \u003c-time.After(5 * time.Second):\n\t\t\tt.Fatal(\"timed out waiting for closed channel\")\n\t\t}"},{"package_id":"synthetic/contrib/raftexample [synthetic/contrib/raftexample.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/contrib/raftexample/raftexample_test.go:115:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tcase err := \u003c-eC:\n\t\t\t\t\tt.Fatalf(\"eC message (%v)\", err)\n\t\t\t\t}"},{"package_id":"synthetic/etcdserver [synthetic/etcdserver.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/etcdserver/server_test.go:929:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif len(gaction) != 2 {\n\t\t\tt.Fatalf(\"len(action) = %d, want 2\", len(gaction))\n\t\t}"},{"package_id":"synthetic/etcdserver [synthetic/etcdserver.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/etcdserver/server_test.go:941:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif len(gaction) != 2 {\n\t\t\tt.Fatalf(\"len(action) = %d, want 2\", len(gaction))\n\t\t}"},{"package_id":"synthetic/etcdserver [synthetic/etcdserver.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/etcdserver/server_test.go:1075:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tt.Logf(\"gaction: %v\", gaction)\n\t\t\tt.Fatalf(\"len(action) = %d, want %d\", len(gaction), wcnt)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v2_http_kv_test.go:894:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"watch err = %v, want nil\", err)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v2_http_kv_test.go:982:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"watch err = %v, want nil\", err)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3_alarm_test.go:157:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif _, err := clus.Client(0).Put(context.TODO(), \"k\", \"v\"); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3_double_barrier_test.go:48:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := bb.Enter(); err != nil {\n\t\t\t\tt.Fatalf(\"could not enter on barrier (%v)\", err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3_double_barrier_test.go:52:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := bb.Leave(); err != nil {\n\t\t\t\tt.Fatalf(\"could not leave on barrier (%v)\", err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3_double_barrier_test.go:118:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif berr := b.Enter(); berr != nil {\n\t\t\tt.Fatalf(\"could not enter on barrier (%v)\", berr)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3_double_barrier_test.go:127:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif berr := b.Enter(); berr != nil {\n\t\t\t\tt.Fatalf(\"could not enter on barrier (%v)\", berr)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3_election_test.go:56:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif !ok {\n\t\t\t\t\tt.Fatalf(\"could not observe election; channel closed\")\n\t\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3_election_test.go:79:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := e.Campaign(context.TODO(), ev); err != nil {\n\t\t\t\tt.Fatalf(\"failed volunteer (%v)\", err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3_election_test.go:90:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := e.Resign(context.TODO()); err != nil {\n\t\t\t\tt.Fatalf(\"failed resign (%v)\", err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3_election_test.go:147:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif eer := ee.Campaign(context.TODO(), \"bar\"); eer != nil {\n\t\t\tt.Fatal(eer)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3_grpc_test.go:464:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3_lease_test.go:575:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err == nil {\n\t\t\tt.Fatalf(\"got response %+v, expected error\", resp)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3_queue_test.go:45:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := q.Enqueue(fmt.Sprintf(\"%d\", i)); err != nil {\n\t\t\t\tt.Fatalf(\"error enqueuing (%v)\", err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3_stm_test.go:173:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif _, err := etcdc.Txn(context.TODO()).Then(ops...).Commit(); err != nil {\n\t\t\t\tt.Fatalf(\"couldn't put keys (%v)\", err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3_stm_test.go:223:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif _, err := etcdc.Delete(context.TODO(), \"foo\"); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3_watch_test.go:253:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif _, err := kvc.Put(context.TODO(), req); err != nil {\n\t\t\t\t\tt.Fatalf(\"#%d: couldn't put key (%v)\", i, err)\n\t\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3_watch_test.go:487:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif _, err := kvc.Put(context.TODO(), req); err != nil {\n\t\t\t\tt.Fatalf(\"couldn't put key (%v)\", err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3_watch_test.go:1095:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif rerr != nil {\n\t\t\tt.Fatal(rerr)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3_watch_test.go:1188:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif rerr != nil {\n\t\t\t\tt.Fatal(rerr)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:57:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif lerr2 != nil {\n\t\t\tt.Fatal(lerr2)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:60:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif l1.Header.Revision \u003e= l2.Header.Revision {\n\t\t\tt.Fatalf(\"expected l1 revision \u003c l2 revision, got %d \u003e= %d\", l1.Header.Revision, l2.Header.Revision)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:106:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:111:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif rerr != nil {\n\t\t\t\tt.Fatal(rerr)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:117:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif respV \u003c i {\n\t\t\t\tt.Fatalf(`got observe value %q, expected \u003e= \"%d\"`, string(resp.Kv.Value), i)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:145:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err2 != nil {\n\t\t\tt.Fatal(err2)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:149:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif cerr2 != nil {\n\t\t\tt.Fatal(cerr2)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:155:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif _, err := lc.Proclaim(context.TODO(), req); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3lock_grpc_test.go:53:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif lerr2 != nil {\n\t\t\tt.Fatal(lerr2)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/integration/v3lock_grpc_test.go:56:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif l1.Header.Revision \u003e= l2.Header.Revision {\n\t\t\tt.Fatalf(\"expected l1 revision \u003c l2 revision, got %d \u003e= %d\", l1.Header.Revision, l2.Header.Revision)\n\t\t}"},{"package_id":"synthetic/lease [synthetic/lease.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/lease/lessor_test.go:381:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := le.Renew(l.ID); err != ErrLeaseNotFound {\n\t\t\tt.Fatalf(\"unexpected renew\")\n\t\t}"},{"package_id":"synthetic/lease [synthetic/lease.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/lease/lessor_test.go:433:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := le.Renew(l.ID); err != ErrNotPrimary {\n\t\t\tt.Fatalf(\"unexpected renew: %v\", err)\n\t\t}"},{"package_id":"synthetic/mvcc [synthetic/mvcc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/mvcc/kvstore_test.go:541:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic/mvcc [synthetic/mvcc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/mvcc/kvstore_test.go:561:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif r.hash != revHash[r.compactRev] {\n\t\t\t\tt.Fatalf(\"Hashes differ (current %v) != (saved %v)\", r.hash, revHash[r.compactRev])\n\t\t\t}"},{"package_id":"synthetic/mvcc [synthetic/mvcc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/mvcc/kvstore_test.go:572:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"synthetic/pkg/expect [synthetic/pkg/expect.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/pkg/expect/expect_test.go:112:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif cerr := ep.Close(); cerr == nil || cerr.Error() != werr {\n\t\t\tt.Fatalf(\"got error %v, wanted error %s\", cerr, werr)\n\t\t}"},{"package_id":"synthetic/pkg/fileutil [synthetic/pkg/fileutil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/pkg/fileutil/lock_test.go:64:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif blerr != nil {\n\t\t\tt.Fatal(blerr)\n\t\t}"},{"package_id":"synthetic/pkg/fileutil [synthetic/pkg/fileutil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/pkg/fileutil/lock_test.go:68:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif blerr = bl.Close(); blerr != nil {\n\t\t\tt.Fatal(blerr)\n\t\t}"},{"package_id":"synthetic/pkg/fileutil [synthetic/pkg/fileutil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/pkg/fileutil/purge_test.go:58:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif ferr != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"synthetic/pkg/transport [synthetic/pkg/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/pkg/transport/timeout_listener_test.go:61:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t}\n\tgo blocker()\n"},{"package_id":"synthetic/pkg/transport [synthetic/pkg/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/pkg/transport/timeout_listener_test.go:89:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\n\tgo blocker()\n"},{"package_id":"synthetic/pkg/transport [synthetic/pkg/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/pkg/transport/transport_test.go:61:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"unexpected NewTransport error: %v\", err)\n\t\t}"},{"package_id":"synthetic/pkg/transport [synthetic/pkg/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/pkg/transport/transport_test.go:66:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif gerr == nil || !strings.Contains(gerr.Error(), \"tls: handshake failure\") {\n\t\t\tt.Fatal(\"expected client TLS handshake error\")\n\t\t}"},{"package_id":"synthetic/tests/e2e [synthetic/tests/e2e.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/coreos/etcd@v3.3.27+incompatible/tests/e2e/etcd_release_upgrade_test.go:168:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := epc.procs[i].Restart(); err != nil {\n\t\t\t\tt.Fatalf(\"error restarting etcd process (%v)\", err)\n\t\t\t}"}]}
{"created_at":"2023-06-22 17:41:47.87353 UTC","module_path":"github.com/etcd-io/etcd","version":"v3.3.27+incompatible","sort_version":"3,3,a27~","commit_time":"2021-10-15 12:32:31 UTC","binary_name":"testschecker","error":"","error_category":"","binary_version":"456685219f2c6ea2f02335cc1c6a90efaec4ff47b9b323b372031dbfebe548ea","binary_args":"","worker_version":"gcr.io/go-ecosystem/prod-ecosystem-worker:20230616t211629-a40c664","schema_version":"164021a254e8b4e4f9c05aa6aa5e1589e48f717649053448b7590aa7676e109f","diagnostic":[{"package_id":"synthetic/auth [synthetic/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/auth/store_test.go:653:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif _, err := as.Authenticate(ctx, user, \"123\"); err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic/auth [synthetic/auth.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/auth/store_test.go:656:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif _, err := as.AuthInfoFromCtx(ctx); err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic/clientv3/concurrency_test [synthetic/clientv3/concurrency.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/concurrency/election_test.go:72:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif !ok {\n\t\t\t\t\tt.Fatal(\"Observe() channel closed prematurely\")\n\t\t\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/kv_test.go:446:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil \u0026\u0026 err != context.Canceled \u0026\u0026 err != grpc.ErrClientConnClosing {\n\t\t\tt.Fatalf(\"expected %v or %v, got %v\", context.Canceled, grpc.ErrClientConnClosing, err)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/kv_test.go:478:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != context.Canceled \u0026\u0026 err != grpc.ErrClientConnClosing {\n\t\t\tt.Fatalf(\"expected %v or %v, got %v\", context.Canceled, grpc.ErrClientConnClosing, err)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/kv_test.go:692:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif gerr != nil {\n\t\t\tt.Fatal(gerr)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/kv_test.go:704:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif !reflect.DeepEqual(gresp.Kvs, wkvs) {\n\t\t\tt.Fatalf(\"bad get: got %v, want %v\", gresp.Kvs, wkvs)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/kv_test.go:741:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif gerr != nil {\n\t\t\tt.Fatal(gerr)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/kv_test.go:744:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif len(gresp.Kvs) != 0 {\n\t\t\tt.Fatalf(\"bad get kvs: got %+v, want empty\", gresp.Kvs)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/lease_test.go:298:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t// context.Canceled if grpc-go balancer calls 'Get' with an inflight client.Close.\n\t\t\tt.Fatalf(\"expected %v or %v, got %v\", grpc.ErrClientConnClosing, context.Canceled, err)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/lease_test.go:371:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := cli.Grant(context.TODO(), 5); err != context.Canceled \u0026\u0026 err != grpc.ErrClientConnClosing {\n\t\t\tt.Fatalf(\"expected %v or %v, got %v\", err != context.Canceled, grpc.ErrClientConnClosing, err)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/lease_test.go:403:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := cli.Revoke(context.TODO(), leaseID); err != context.Canceled \u0026\u0026 err != grpc.ErrClientConnClosing {\n\t\t\tt.Fatalf(\"expected %v or %v, got %v\", err != context.Canceled, grpc.ErrClientConnClosing, err)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/lease_test.go:765:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\t}\n\t\t\t\tt.Fatal(err)\n\t\t\t}()"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:392:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif perr != nil {\n\t\t\t\tt.Fatal(perr)\n\t\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:1002:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\tdefer wg.Wait()\n\tgo getRandom(lkv1)\n\tgo getRandom(lkv2)"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:1003:2","message":"call to (*T).Fatal from a non-test goroutine","source":"\tgo getRandom(lkv1)\n\tgo getRandom(lkv2)\n"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:1401:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:1404:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif string(resp.Kvs[0].Value) != \"v\" {\n\t\t\tt.Fatalf(`expected \"v\" value, got %+v`, resp)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:1613:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\tfor i := 0; i \u003c numGetters; i++ {\n\t\tgo g()\n\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:1613:3","message":"call to (*T).Fatalf from a non-test goroutine","source":"\tfor i := 0; i \u003c numGetters; i++ {\n\t\tgo g()\n\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/leasing_test.go:1616:3","message":"call to (*T).Fatal from a non-test goroutine","source":"\tfor i := 0; i \u003c numPutters; i++ {\n\t\tgo f()\n\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/metrics_test.go:57:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"Error: %v occurred while listening on addr: %v\", err, addr)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/metrics_test.go:62:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil \u0026\u0026 !transport.IsClosedConnError(err) {\n\t\t\tt.Fatalf(\"Err serving http requests: %v\", err)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/mirror_test.go:93:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif _, err := cli.Put(ctx, key, \"test\"); err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/txn_test.go:70:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err == nil {\n\t\t\tt.Fatalf(\"expected error, got response %v\", resp)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/txn_test.go:79:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tcase \u003c-time.After(5 * time.Second):\n\t\t\tt.Fatalf(\"timed out waiting for txn fail\")\n\t\tcase \u003c-txnc:"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/txn_test.go:85:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif gerr != nil {\n\t\t\tt.Fatal(gerr)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/txn_test.go:88:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif len(gresp.Kvs) != 0 {\n\t\t\tt.Fatalf(\"expected no keys, got %v\", gresp.Kvs)\n\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/txn_test.go:126:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"expected response, got error %v\", err)\n\t\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/watch_test.go:1081:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif ok {\n\t\t\t\tt.Fatalf(\"expected closed watch after cancel(), got resp=%+v err=%v\", wr, wr.Err())\n\t\t\t}"},{"package_id":"synthetic/clientv3/integration [synthetic/clientv3/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/clientv3/integration/watch_test.go:1084:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tcase \u003c-time.After(5 * time.Second):\n\t\t\tt.Fatal(\"timed out waiting for closed channel\")\n\t\t}"},{"package_id":"synthetic/contrib/raftexample [synthetic/contrib/raftexample.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/contrib/raftexample/raftexample_test.go:115:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tcase err := \u003c-eC:\n\t\t\t\t\tt.Fatalf(\"eC message (%v)\", err)\n\t\t\t\t}"},{"package_id":"synthetic/etcdserver [synthetic/etcdserver.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/etcdserver/server_test.go:929:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif len(gaction) != 2 {\n\t\t\tt.Fatalf(\"len(action) = %d, want 2\", len(gaction))\n\t\t}"},{"package_id":"synthetic/etcdserver [synthetic/etcdserver.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/etcdserver/server_test.go:941:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif len(gaction) != 2 {\n\t\t\tt.Fatalf(\"len(action) = %d, want 2\", len(gaction))\n\t\t}"},{"package_id":"synthetic/etcdserver [synthetic/etcdserver.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/etcdserver/server_test.go:1075:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tt.Logf(\"gaction: %v\", gaction)\n\t\t\tt.Fatalf(\"len(action) = %d, want %d\", len(gaction), wcnt)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v2_http_kv_test.go:894:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"watch err = %v, want nil\", err)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v2_http_kv_test.go:982:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"watch err = %v, want nil\", err)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3_alarm_test.go:157:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif _, err := clus.Client(0).Put(context.TODO(), \"k\", \"v\"); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3_double_barrier_test.go:48:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := bb.Enter(); err != nil {\n\t\t\t\tt.Fatalf(\"could not enter on barrier (%v)\", err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3_double_barrier_test.go:52:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := bb.Leave(); err != nil {\n\t\t\t\tt.Fatalf(\"could not leave on barrier (%v)\", err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3_double_barrier_test.go:118:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif berr := b.Enter(); berr != nil {\n\t\t\tt.Fatalf(\"could not enter on barrier (%v)\", berr)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3_double_barrier_test.go:127:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif berr := b.Enter(); berr != nil {\n\t\t\t\tt.Fatalf(\"could not enter on barrier (%v)\", berr)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3_election_test.go:56:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif !ok {\n\t\t\t\t\tt.Fatalf(\"could not observe election; channel closed\")\n\t\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3_election_test.go:79:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := e.Campaign(context.TODO(), ev); err != nil {\n\t\t\t\tt.Fatalf(\"failed volunteer (%v)\", err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3_election_test.go:90:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := e.Resign(context.TODO()); err != nil {\n\t\t\t\tt.Fatalf(\"failed resign (%v)\", err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3_election_test.go:147:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif eer := ee.Campaign(context.TODO(), \"bar\"); eer != nil {\n\t\t\tt.Fatal(eer)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3_grpc_test.go:464:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3_lease_test.go:575:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err == nil {\n\t\t\tt.Fatalf(\"got response %+v, expected error\", resp)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3_queue_test.go:45:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := q.Enqueue(fmt.Sprintf(\"%d\", i)); err != nil {\n\t\t\t\tt.Fatalf(\"error enqueuing (%v)\", err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3_stm_test.go:173:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif _, err := etcdc.Txn(context.TODO()).Then(ops...).Commit(); err != nil {\n\t\t\t\tt.Fatalf(\"couldn't put keys (%v)\", err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3_stm_test.go:223:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif _, err := etcdc.Delete(context.TODO(), \"foo\"); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3_watch_test.go:253:6","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\t\tif _, err := kvc.Put(context.TODO(), req); err != nil {\n\t\t\t\t\tt.Fatalf(\"#%d: couldn't put key (%v)\", i, err)\n\t\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3_watch_test.go:487:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif _, err := kvc.Put(context.TODO(), req); err != nil {\n\t\t\t\tt.Fatalf(\"couldn't put key (%v)\", err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3_watch_test.go:1095:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif rerr != nil {\n\t\t\tt.Fatal(rerr)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3_watch_test.go:1188:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif rerr != nil {\n\t\t\t\tt.Fatal(rerr)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:57:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif lerr2 != nil {\n\t\t\tt.Fatal(lerr2)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:60:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif l1.Header.Revision \u003e= l2.Header.Revision {\n\t\t\tt.Fatalf(\"expected l1 revision \u003c l2 revision, got %d \u003e= %d\", l1.Header.Revision, l2.Header.Revision)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:106:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:111:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif rerr != nil {\n\t\t\t\tt.Fatal(rerr)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:117:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif respV \u003c i {\n\t\t\t\tt.Fatalf(`got observe value %q, expected \u003e= \"%d\"`, string(resp.Kv.Value), i)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:145:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif err2 != nil {\n\t\t\tt.Fatal(err2)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:149:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif cerr2 != nil {\n\t\t\tt.Fatal(cerr2)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3election_grpc_test.go:155:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif _, err := lc.Proclaim(context.TODO(), req); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3lock_grpc_test.go:53:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif lerr2 != nil {\n\t\t\tt.Fatal(lerr2)\n\t\t}"},{"package_id":"synthetic/integration [synthetic/integration.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/integration/v3lock_grpc_test.go:56:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif l1.Header.Revision \u003e= l2.Header.Revision {\n\t\t\tt.Fatalf(\"expected l1 revision \u003c l2 revision, got %d \u003e= %d\", l1.Header.Revision, l2.Header.Revision)\n\t\t}"},{"package_id":"synthetic/lease [synthetic/lease.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/lease/lessor_test.go:381:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := le.Renew(l.ID); err != ErrLeaseNotFound {\n\t\t\tt.Fatalf(\"unexpected renew\")\n\t\t}"},{"package_id":"synthetic/lease [synthetic/lease.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/lease/lessor_test.go:433:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif _, err := le.Renew(l.ID); err != ErrNotPrimary {\n\t\t\tt.Fatalf(\"unexpected renew: %v\", err)\n\t\t}"},{"package_id":"synthetic/mvcc [synthetic/mvcc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/mvcc/kvstore_test.go:541:6","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatal(err)\n\t\t\t\t}"},{"package_id":"synthetic/mvcc [synthetic/mvcc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/mvcc/kvstore_test.go:561:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif r.hash != revHash[r.compactRev] {\n\t\t\t\tt.Fatalf(\"Hashes differ (current %v) != (saved %v)\", r.hash, revHash[r.compactRev])\n\t\t\t}"},{"package_id":"synthetic/mvcc [synthetic/mvcc.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/mvcc/kvstore_test.go:572:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"synthetic/pkg/expect [synthetic/pkg/expect.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/pkg/expect/expect_test.go:112:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif cerr := ep.Close(); cerr == nil || cerr.Error() != werr {\n\t\t\tt.Fatalf(\"got error %v, wanted error %s\", cerr, werr)\n\t\t}"},{"package_id":"synthetic/pkg/fileutil [synthetic/pkg/fileutil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/pkg/fileutil/lock_test.go:64:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif blerr != nil {\n\t\t\tt.Fatal(blerr)\n\t\t}"},{"package_id":"synthetic/pkg/fileutil [synthetic/pkg/fileutil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/pkg/fileutil/lock_test.go:68:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif blerr = bl.Close(); blerr != nil {\n\t\t\tt.Fatal(blerr)\n\t\t}"},{"package_id":"synthetic/pkg/fileutil [synthetic/pkg/fileutil.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/pkg/fileutil/purge_test.go:58:5","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\t\tif ferr != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}"},{"package_id":"synthetic/pkg/transport [synthetic/pkg/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/pkg/transport/timeout_listener_test.go:61:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t}\n\tgo blocker()\n"},{"package_id":"synthetic/pkg/transport [synthetic/pkg/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/pkg/transport/timeout_listener_test.go:89:2","message":"call to (*T).Fatalf from a non-test goroutine","source":"\n\tgo blocker()\n"},{"package_id":"synthetic/pkg/transport [synthetic/pkg/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/pkg/transport/transport_test.go:61:4","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\tif err != nil {\n\t\t\tt.Fatalf(\"unexpected NewTransport error: %v\", err)\n\t\t}"},{"package_id":"synthetic/pkg/transport [synthetic/pkg/transport.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/pkg/transport/transport_test.go:66:4","message":"call to (*T).Fatal from a non-test goroutine","source":"\t\tif gerr == nil || !strings.Contains(gerr.Error(), \"tls: handshake failure\") {\n\t\t\tt.Fatal(\"expected client TLS handshake error\")\n\t\t}"},{"package_id":"synthetic/tests/e2e [synthetic/tests/e2e.test]","analyzer_name":"tests","error":"","category":"","position":"/tmp/modules/github.com/etcd-io/etcd@v3.3.27+incompatible/tests/e2e/etcd_release_upgrade_test.go:168:5","message":"call to (*T).Fatalf from a non-test goroutine","source":"\t\t\tif err := epc.procs[i].Restart(); err != nil {\n\t\t\t\tt.Fatalf(\"error restarting etcd process (%v)\", err)\n\t\t\t}"}]}
